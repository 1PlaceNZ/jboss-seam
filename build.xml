<?xml version="1.0"?>

<project name="Seam" default="jar" basedir=".">

    <!-- Allow this to be overriden by others importing this project. -->
    <dirname property="imported.basedir" file="${ant.file.Seam}"/>

    <!-- Give user a chance to override without editing this file or typing -D -->
    <property file="${imported.basedir}/build.properties"/>

    <!-- Name of project and version, used to create filenames -->
    <property name="Name"               value="JBoss Seam"/>
    <property name="name"               value="jboss-seam"/>
    <property name="version"            value="1.0"/>
    <property name="patchlevel"         value="beta1"/>

    <!-- set global properties for this build -->
    <property name="build.dir"          value="build"/>
    <property name="classes.dir"        value="${build.dir}/classes"/>

    <property name="src.java.dir"       value="src/main"/>

    <property name="lib.dir"            value="${imported.basedir}/lib"/>
    <property name="eejb.lib.dir"       value="${imported.basedir}/embedded-ejb/lib"/>
    <property name="eejb.conf.dir"      value="${imported.basedir}/embedded-ejb/conf"/>

    <property name="doc.dir"            value="doc"/>
    <property name="doc.api.dir"        value="${doc.dir}/api"/>
    <property name="doc.ref.dir"        value="${doc.dir}/reference"/>
    <property name="javadoc.link"       value="http://java.sun.com/j2se/5.0/docs/api"/>

    <property name="dist.dir"           value="${imported.basedir}/../${name}-${version}"/>
    <property name="dist.doc.dir"       value="${dist.dir}/doc"/>
    <property name="dist.api.dir"       value="${dist.dir}/doc/api"/>
    <property name="dist.ref.dir"       value="${dist.dir}/doc/reference"/>
    <property name="dist.src.java.dir"  value="${dist.dir}/src/main"/>
    <property name="dist.lib.dir"       value="${dist.dir}/lib"/>
    <property name="dist.eejb.lib.dir"  value="${dist.dir}/embedded-ejb/lib"/>
    <property name="dist.eejb.conf.dir" value="${dist.dir}/embedded-ejb/conf"/>

    <property name="deploy.dir"         value="${jboss.home}/server/default/deploy"/>

    <path id="build.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
        <fileset dir="${eejb.lib.dir}">
            <include name="*.jar" />
        </fileset>
        <fileset dir="${imported.basedir}">
            <include name="${name}.jar" />
        </fileset>
    </path>

    <patternset id="meta.files">
        <include name="**/*.dtd"/>
        <include name="**/*.xml"/>
        <include name="**/*.xslt"/>
        <include name="**/*.properties"/>
    </patternset>

    <patternset id="src.files">
        <!-- include everything we want in the src directory
            that we didn't want in the jar itself -->
        <include name="**/*.java"/>
    </patternset>

    <patternset id="refdoc.files">
        <include name="**/*.css"/>
        <include name="**/*.jpg"/>
        <include name="**/*.gif"/>
        <include name="**/*.png"/>
    </patternset>

    <!-- ############################ Targets #############################-->

    <target name="clean"
            description="Cleans up the build directory">
        <delete dir="${build.dir}"/>
    </target>

    <target name="cleandist"
            description="Cleans up the dist and directory">
        <delete dir="${dist.dir}"/>
    </target>

    <target name="init"
            description="Initialize the build">
        <tstamp>
            <format property="subversion" pattern="yyyy-MM-dd hh:mm:ss"/>
        </tstamp>
        <echo message="Build ${Name} ${version} (${subversion})"/>

        <mkdir dir="${classes.dir}"/>
        <copy todir="${classes.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init"
            description="Compile the Java source code">
        <javac
            destdir="${classes.dir}"
            classpathref="build.classpath"
            nowarn="on">
            <src path="${src.java.dir}"/>
        </javac>

    </target>

    <target name="copysource" description="Copy sources to dist dir">
        <mkdir dir="${dist.src.java.dir}"/>
        <copy todir="${dist.src.java.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="src.files"/>
            </fileset>
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
    </target>

    <target name="copylib" description="Copy jars to lib dir">
        <mkdir dir="${dist.lib.dir}"/>
        <copy todir="${dist.lib.dir}">
            <fileset dir="${lib.dir}">
                <include name="*.jar"/>
                <include name="*.txt"/>
            </fileset>
        </copy>
        <copy todir="${dist.eejb.lib.dir}">
            <fileset dir="${eejb.lib.dir}">
                <include name="*.jar"/>
                <include name="*.txt"/>
            </fileset>
        </copy>
        <copy todir="${dist.eejb.conf.dir}">
            <fileset dir="${eejb.conf.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
    </target>

    <target name="copyexamples" description="Copy examples to dist dir">
        <copy todir="${dist.dir}/examples">
            <fileset dir="${imported.basedir}/examples">
                <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="jar" depends="compile"
            description="Build the distribution .jar file">
        <mkdir dir="${dist.dir}"/>
        <jar jarfile="${basedir}/${name}.jar" basedir="${classes.dir}">
            <include name="org/jboss/seam/**/*.class"/>
            <patternset refid="meta.files"/>
            <manifest>
                <attribute name="Seam-Version" value="${version}.${patchlevel}"/>
            </manifest>
        </jar>
        <copy file="${basedir}/${name}.jar" todir="${dist.dir}"/>
    </target>

    <target name="javadoc"
        description="Compile the Javadoc API documentation to dist dir">

        <mkdir dir="${dist.api.dir}"/>
        <javadoc
            classpathref="build.classpath"
            destdir="${dist.api.dir}"
            use="true"
            protected="true"
            version="true"
            windowtitle="${Name} API Documentation"
            Overview="${doc.api.dir}/package.html"
            doctitle="${Name} API Documentation"
            stylesheetfile="${doc.api.dir}/jdstyle.css"
            link="${javadoc.link}">

            <packageset dir="${src.java.dir}" defaultexcludes="yes">
                <include name="org/jboss/seam/**"/>
            </packageset>

        </javadoc>
        <copy file="${doc.api.dir}/package.html" todir="${dist.api.dir}"/>

    </target>

    <target name="refdoc"
        description="Generate and copy reference documentation">

        <ant dir="${doc.ref.dir}" inheritall="false" target="all.doc"/>
        <copy todir="${dist.ref.dir}">
            <fileset dir="${doc.ref.dir}/build"/>
        </copy>

    </target>

    <target name="extras"
            description="Copy miscellaneous files to root dir">
        <copy file="readme.txt"         todir="${dist.dir}"/>
        <copy file="lgpl.txt"           todir="${dist.dir}"/>
        <copy file="changelog.txt"      todir="${dist.dir}"/>
        <copy file="build.properties"   todir="${dist.dir}"/>
        <copy file="build.xml"          todir="${dist.dir}"/>
        <replace file="${dist.dir}/build.xml">
            <replacetoken><![CDATA[../${name}-${version}]]></replacetoken>
            <replacevalue><![CDATA[../${name}]]></replacevalue>
        </replace>
    </target>

    <target name="dist"
        depends="cleandist,jar,javadoc,copysource,copylib,copyexamples,extras,refdoc"
        description="Build everything and package">
        <zip zipfile="${dist.dir}.zip">
            <zipfileset prefix="${name}-${version}" dir="${dist.dir}"/>
        </zip>
        <tar tarfile="${dist.dir}.tar">
            <tarfileset prefix="${name}-${version}" dir="${dist.dir}"/>
        </tar>
        <gzip src="${dist.dir}.tar" zipfile="${dist.dir}.tar.gz"/>
        <delete file="${dist.dir}.tar"/>
    </target>

    <!-- ############################ Examples #############################-->

    <target name="war" depends="compile">
        <jar destfile="${build.dir}/${example.name}.war">
            <zipfileset refid="example.war.docroot"/>
            <zipfileset refid="example.war.webinf"/>
            <zipfileset refid="example.war.webinf.lib"/>
        </jar>
    </target>

    <target name="ejb3" depends="compile">
        <jar jarfile="${build.dir}/${example.name}.ejb3">
            <fileset dir="${imported.basedir}">
                <include name="${name}.jar"/>
            </fileset>
            <fileset dir="${classes.dir}">
                <include name="**/*.class"/>
            </fileset>
            <fileset refid="example.ejb3.root"/>
        </jar>
    </target>

    <target name="ear" depends="ejb3, war">
        <jar destfile="${build.dir}/${example.name}.ear">
            <zipfileset dir="${build.dir}">
                <include name="${example.name}.ejb3"/>
            </zipfileset>
            <zipfileset dir="${build.dir}">
                <include name="${example.name}.war"/>
            </zipfileset>
            <zipfileset refid="example.ear.resources"/>
        </jar>
    </target>

    <target name="deploy" depends="ear">
        <echo>Don't forget to set the path of jboss.home to JBoss AS 4.0.3!</echo>
        <copy file="${build.dir}/${example.name}.ear" todir="${deploy.dir}"/>
        <copy todir="${deploy.dir}">
            <fileset refid="example.deploy"/>
        </copy>
    </target>

    <target name="undeploy">
        <delete file="${deploy.dir}/${example.name}.ear"/>
        <delete>
            <fileset dir="${deploy.dir}">
                <patternset refid="example.undeploy"/>
            </fileset>
        </delete>
    </target>

    <target name="cleandb">
        <delete dir="${deploy.dir}/../data/hypersonic"/>
    </target>

</project>
