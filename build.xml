<?xml version="1.0"?>
<project name="Seam" default="build" basedir=".">

	<tstamp />

	<!-- If build.properties doesn't exist, create it by copying build.properties.sample -->
	<condition property="copy.default.properties">
		<and>
			<available file="${basedir}/build.properties.sample" />
			<not>
				<available file="${basedir}/build.properties" />
			</not>
		</and>
	</condition>

	<copy todir="${basedir}">
		<fileset dir="${basedir}">
			<include name="build.properties.sample" if="copy.default.properties" />
		</fileset>
		<mapper type="glob" from="build.properties.sample" to="build.properties" />
	</copy>

	<!-- Give user a chance to override without editing this file or typing -D -->
	<property file="${basedir}/build.properties" />

	<!-- Set the version if not set in build.properties -->
	<condition property="version" value="${DSTAMP}">
		<not>
			<isset property="version" />
		</not>
	</condition>
	<condition property="patchlevel" value="${TSTAMP}">
		<not>
			<isset property="patchelevel" />
		</not>
	</condition>

	<!-- Name of project and version, used to create filenames -->
	<property name="Name" value="JBoss Seam" />
	<property name="name" value="jboss-seam" />

	<property name="schema.version" value="${version}" />

	<!-- set global properties for this build -->

	<property name="seam.dir" value="${basedir}" />


	<!-- Targets -->
	<property name="classes.dir" value="classes" />
	<property name="classes.core.dir" value="${classes.dir}/coreclasses" />
	<property name="classes.pdf.dir" value="${classes.dir}/pdfclasses" />
	<property name="classes.ioc.dir" value="${classes.dir}/iocclasses" />
	<property name="classes.mail.dir" value="${classes.dir}/mailclasses" />
	<property name="classes.debug.dir" value="${classes.dir}/debugclasses" />
	<property name="classes.remoting.dir" value="${classes.dir}/remotingclasses" />
	<property name="classes.gen.dir" value="${classes.dir}/genclasses" />
	<property name="classes.test.dir" value="${classes.dir}/testclasses" />

	<property name="ui.dir" value="ui" />
	<property name="seamgen.dir" value="${basedir}/seam-gen" />

	<!-- Source directories -->
	<property name="src.core.dir" value="src/main" />
	<property name="src.ui.dir" value="${ui.dir}/src" />
	<property name="src.pdf.dir" value="src/pdf" />
	<property name="src.ioc.dir" value="src/ioc" />
	<property name="src.mail.dir" value="src/mail" />
	<property name="src.debug.dir" value="src/debug" />
	<property name="src.gen.dir" value="src/gen" />
	<property name="src.remoting.dir" value="src/remoting" />
	<property name="src.test.dir" value="src/test/misc" />

	<!-- Library directories -->
	<property name="mail.dir" value="${basedir}/mail" />
	<property name="eejb.conf.dir" value="${basedir}/bootstrap" />

	<!-- Build resources -->
	<property name="build.dir" value="${seam.dir}/build" />
	<property name="tmp.dir" value="${classes.dir}" />
	<import file="${build.dir}/utilities.build.xml" />
	<import file="${build.dir}/common.build.xml" />
	<property name="lib.dir" value="${basedir}/lib" />

	<!-- Documentation -->
	<property name="doc.dir" value="doc" />
	<property name="doc.api.dir" value="${doc.dir}/api" />
	<property name="doc.ref.dir" value="${doc.dir}/reference" />
	<property name="javadoc.link" value="http://java.sun.com/j2se/5.0/docs/api" />

	<!-- Distribution targets -->
	<property name="dist.name" value="${name}-${version}.${patchlevel}" />

	<property name="dist.location" value="${basedir}/../" />
	<property name="dist.dir" value="${dist.location}/${dist.name}" />
	<property name="dist.ui.dir" value="${dist.dir}/ui" />
	<property name="dist.doc.dir" value="${dist.dir}/doc" />
	<property name="dist.api.dir" value="${dist.dir}/doc/api" />
	<property name="dist.ref.dir" value="${dist.dir}/doc/reference" />
	<property name="dist.src.core.dir" value="${dist.dir}/src/main" />
	<property name="dist.ui.dir" value="${dist.dir}/ui" />
	<property name="dist.src.pdf.dir" value="${dist.dir}/src/pdf" />
	<property name="dist.src.ioc.dir" value="${dist.dir}/src/ioc" />
	<property name="dist.src.mail.dir" value="${dist.dir}/src/mail" />
	<property name="dist.src.debug.dir" value="${dist.dir}/src/debug" />
	<property name="dist.src.gen.dir" value="${dist.dir}/src/gen" />
	<property name="dist.src.remoting.dir" value="${dist.dir}/src/remoting" />
	<property name="dist.src.test.dir" value="${dist.dir}/src/test/misc" />
	<property name="dist.lib.dir" value="${dist.dir}/lib" />
	<property name="dist.eejb.conf.dir" value="${dist.dir}/bootstrap" />
	<property name="dist.drools.dir" value="${dist.dir}/drools" />
	<property name="dist.hibernate.dir" value="${dist.dir}/hibernate" />
	<property name="dist.mail.dir" value="${dist.dir}/mail" />
	<property name="dist.build.dir" value="${dist.dir}/build" />
	<property name="dist.seamgen.dir" value="${dist.dir}/seam-gen" />
	<property name="dist.ui.api.dir" value="${dist.dir}/doc/ui" />

	<property name="deploy.dir" value="${jboss.home}/server/default/deploy" />
	<property name="webroot.dir" value="${deploy.dir}/jbossweb-tomcat55.sar/ROOT.war" />

	<!-- Tests -->

	<property name="classes.coverage.dir" value="classes/coverage" />
	<property name="classes.test.core.dir" value="${classes.dir}/test/core" />

	<property name="test.dir" value="${basedir}/test-output" />
	<property name="report.dir" value="${basedir}/test-report" />
	<property name="coverage.dir" value="${basedir}/coverage-output" />

	<property name="bootstrap.dir" value="${basedir}/bootstrap" />

	<!-- CI -->

	<property name="quietclean" value="false" />


	<property name="javac.debug" value="true" />
	<property name="javac.deprecation" value="false" />

	<path id="classpath.emma">
		<pathelement location="${basedir}/extras/emma/emma.jar" />
		<pathelement location="${basedir}/extras/emma/emma_ant.jar" />
	</path>

	<fileset id="eejb.conf" dir="${eejb.conf.dir}">
		<include name="**/*.*" />
	</fileset>

	<patternset id="meta.files">
		<include name="**/*.dtd" />
		<include name="**/*.xsd" />
		<include name="**/*.xml" />
		<include name="**/*.tld" />
		<include name="**/*.xslt" />
		<include name="**/*.properties" />
		<include name="**/*.js" />
		<include name="**/*.html" />
		<include name="**/*.xhtml" />
		<include name="**/spring.*" />
	</patternset>

	<patternset id="src.files">
		<!-- include everything we want in the src directory
            that we didn't want in the jar itself -->
		<include name="**/*.java" />
	</patternset>

	<patternset id="refdoc.files">
		<include name="**/*.css" />
		<include name="**/*.jpg" />
		<include name="**/*.gif" />
		<include name="**/*.png" />
	</patternset>

	<!-- ########################## BUILD TARGETS ##########################-->

	<target name="init" />

	<target name="clean" description="Cleans up the build directory" depends="init">
		<cdk target="clean" />
		<delete dir="${classes.dir}" quiet="${quietclean}" />
		<delete dir="${test.dir}" quiet="${quietclean}" />
		<delete dir="${report.dir}" quiet="${quietclean}" />
		<delete dir="${lib.dir}" quiet="${quietclean}" />
		<delete dir="${coverage.dir}" quiet="${quietclean}" />
		<delete file="coverage.ec" failonerror="false" quiet="${quietclean}" />
	</target>

	<target name="build" depends="jarcore,jarpdf,jarioc,jarmail,jarremoting,jardebug,jargen,jarui" description="Build all four distribution .jar files" />

	<target name="select-compiler">
		<available classname="org.eclipse.jdt.core.JDTCompilerAdapter" property="build.compiler" value="org.eclipse.jdt.core.JDTCompilerAdapter" />
	</target>


	<!-- ########################### CORE TARGETS ##########################-->

	<target name="initcore" depends="init">
		<init classesdir="${classes.core.dir}" srcdir="${src.core.dir}" modulename="core" pom="${core.pom}" />
	</target>

	<target name="antlr" description="Generate ANTLR parser">
		<mkdir dir="${src.core.dir}/org/jboss/seam/text" />
		<taskdef name="antlrtask" classname="org.apache.tools.ant.taskdefs.optional.ANTLR">
			<classpath refid="compile.core.path" />
		</taskdef>
		<antlrtask target="seam-text.g" outputdirectory="${src.core.dir}/org/jboss/seam/text">
			<classpath refid="compile.core.path" />
		</antlrtask>
	</target>

	<target name="compilecore" depends="initcore,select-compiler,antlr">
		<compile classesdir="${classes.core.dir}" srcdir="${src.core.dir}" classpath="compile.core.path" />
	</target>

	<target name="jarcore" depends="compilecore" description="Build the distribution .jar file using M2 dependency management">
		<archive classesdir="${classes.core.dir}" module="jboss-seam" pom="${core.pom}" />
	</target>

	<!-- ########################### PDF TARGETS ###########################-->

	<target name="initpdf" depends="init, jarcore, jarui">
		<init classesdir="${classes.pdf.dir}" srcdir="${src.pdf.dir}" modulename="pdf" pom="${pdf.pom}" />
	</target>

	<target name="compilepdf" depends="initpdf, select-compiler">
		<compile classesdir="${classes.pdf.dir}" srcdir="${src.pdf.dir}" classpath="compile.pdf.path" />
	</target>

	<target name="jarpdf" depends="compilepdf" description="Build the distribution .jar file for the PDF package">
		<archive classesdir="${classes.pdf.dir}" module="jboss-seam-pdf" pom="${pdf.pom}" />
	</target>


	<!-- ########################### IOC TARGETS ###########################-->

	<target name="initioc" depends="init, jarcore">
		<init classesdir="${classes.ioc.dir}" srcdir="${src.ioc.dir}" modulename="ioc" pom="${ioc.pom}" />
	</target>

	<target name="compileioc" depends="initioc, select-compiler">
		<compile classesdir="${classes.ioc.dir}" srcdir="${src.ioc.dir}" classpath="compile.ioc.path" />
	</target>

	<target name="jarioc" depends="compileioc" description="Build the distribution .jar file for the IOC package">
		<archive classesdir="${classes.ioc.dir}" module="jboss-seam-ioc" pom="${ioc.pom}" />
	</target>


	<!-- ########################### MAIL TARGETS ###########################-->

	<target name="initmail" depends="init, jarcore, jarui, jarpdf">
		<init classesdir="${classes.mail.dir}" srcdir="${src.mail.dir}" modulename="mail" pom="${mail.pom}" />
	</target>

	<target name="compilemail" depends="initmail, select-compiler">
		<compile classesdir="${classes.mail.dir}" srcdir="${src.mail.dir}" classpath="compile.mail.path" />
	</target>

	<target name="jarmail" depends="compilemail" description="Build the distribution .jar file for the IOC package">
		<archive classesdir="${classes.mail.dir}" module="jboss-seam-mail" pom="${mail.pom}" />
	</target>


	<!-- ########################### DEBUG TARGETS ###########################-->

	<target name="initdebug" depends="init, jarcore">
		<init classesdir="${classes.debug.dir}" srcdir="${src.debug.dir}" modulename="debug" pom="${debug.pom}" />
	</target>

	<target name="compiledebug" depends="initdebug, select-compiler">
		<compile classesdir="${classes.debug.dir}" srcdir="${src.debug.dir}" classpath="compile.debug.path" />
	</target>

	<target name="jardebug" depends="compiledebug" description="Build the distribution .jar file for the IOC package">
		<archive classesdir="${classes.debug.dir}" module="jboss-seam-debug" pom="${debug.pom}" />
	</target>


	<!-- ########################### GEN TARGETS ###########################-->

	<target name="initgen" depends="init, jarcore">
		<init classesdir="${classes.gen.dir}" srcdir="${src.gen.dir}" modulename="gen" pom="${gen.pom}" />
	</target>

	<target name="compilegen" depends="initgen, select-compiler">
		<compile classesdir="${classes.gen.dir}" srcdir="${src.gen.dir}" classpath="compile.gen.path" />
	</target>

	<target name="jargen" depends="compilegen" description="Build the distribution .jar file for the gen package">
		<archive classesdir="${classes.gen.dir}" module="jboss-seam-gen" pom="${gen.pom}" />
	</target>


	<!-- ########################### REMOTING TARGETS ###########################-->

	<target name="initremoting" depends="init, jarcore">
		<init classesdir="${classes.remoting.dir}" srcdir="${src.remoting.dir}" modulename="remoting" pom="${remoting.pom}" />
	</target>

	<target name="compileremoting" depends="initremoting, select-compiler">
		<compile classesdir="${classes.remoting.dir}" srcdir="${src.remoting.dir}" classpath="compile.remoting.path" />
	</target>

	<target name="jarremoting" depends="compileremoting" description="Build the distribution .jar file for the Remoting package">
		<archive classesdir="${classes.remoting.dir}" module="jboss-seam-remoting" pom="${remoting.pom}" />
	</target>

	<!-- ########################### UI TARGETS ###########################-->

	<target name="initui" depends="init, jarcore">
		<dependencies id="ui" scope="compile" pom="${ui.pom}" />
	</target>

	<target name="jarui" description="Build the distribution .jar file for the UI package based on A4J CDK" depends="initui">
		<mkdir dir="${dist.dir}" />
		<cdk target="install" />
		<copy file="${ui.dir}/target/jboss-seam-ui.jar" tofile="${basedir}/${name}-ui.jar" />
		<copy file="${basedir}/${name}-ui.jar" todir="${dist.dir}" />
	</target>


	<!-- ########################## 'ALL' TARGETS ##########################-->

	<target name="cleanall" depends="clean,cleandist" description="Cleans up everything">
		<ant dir="examples/booking" target="clean" inheritall="false" />
		<ant dir="examples/blog" target="clean" inheritall="false" />
		<ant dir="examples/dvdstore" target="clean" inheritall="false" />
		<ant dir="examples/contactlist" target="clean" inheritall="false" />
		<ant dir="examples/seampay" target="clean" inheritall="false" />
		<ant dir="examples/seamspace" target="clean" inheritall="false" />
		<ant dir="examples/mail" target="clean" inheritall="false" />
		<ant dir="examples/ui" target="clean" inheritall="false" />
		<ant dir="examples/spring" target="clean" inheritall="false" />
		<ant dir="examples/itext" target="clean" inheritall="false" />
		<ant dir="examples/messages" target="clean" inheritall="false" />
		<ant dir="examples/numberguess" target="clean" inheritall="false" />
		<ant dir="examples/registration" target="clean" inheritall="false" />
		<ant dir="examples/todo" target="clean" inheritall="false" />
		<!--<ant dir="examples/portal" target="clean" inheritall="false" />-->
		<ant dir="examples/drools" target="clean" inheritall="false" />
		<ant dir="examples/remoting/helloworld" target="clean" inheritall="false" />
		<ant dir="examples/remoting/chatroom" target="clean" inheritall="false" />
		<ant dir="examples/remoting/progressbar" target="clean" inheritall="false" />
		<ant dir="examples/remoting/gwt" target="clean" inheritall="false" />
		<ant dir="examples/hibernate2" target="clean" inheritall="false" />
		<ant dir="examples/jpa" target="clean" inheritall="false" />
		<ant dir="examples/jee5/booking" target="clean" inheritall="false" />
		<ant dir="examples/jee5/remoting" target="clean" inheritall="false" />
		<ant dir="examples/groovybooking" target="clean" inheritall="false" />
		<ant dir="examples/quartz" target="clean" inheritall="false" />
		<ant dir="examples/wiki" target="clean" inheritall="false" />
		<ant dir="examples/seamdiscs" target="clean" inheritall="false" />
	</target>

	<target name="undeployall" description="Undeploy all examples">

		<!-- Undeploy from JBoss -->
		<ant dir="examples/booking" target="undeploy" inheritall="false" />
		<ant dir="examples/blog" target="undeploy" inheritall="false" />
		<ant dir="examples/dvdstore" target="undeploy" inheritall="false" />
		<ant dir="examples/contactlist" target="undeploy" inheritall="false" />
		<ant dir="examples/seampay" target="undeploy" inheritall="false" />
		<ant dir="examples/seamspace" target="undeploy" inheritall="false" />
		<ant dir="examples/itext" target="undeploy" inheritall="false" />
		<ant dir="examples/mail" target="undeploy" inheritall="false" />
		<ant dir="examples/ui" target="undeploy" inheritall="false" />
		<!--<ant dir="examples/spring" target="undeploy" inheritall="false" />-->
		<ant dir="examples/messages" target="undeploy" inheritall="false" />
		<ant dir="examples/numberguess" target="undeploy" inheritall="false" />
		<ant dir="examples/registration" target="undeploy" inheritall="false" />
		<ant dir="examples/todo" target="undeploy" inheritall="false" />
		<ant dir="examples/drools" target="undeploy" inheritall="false" />
		<ant dir="examples/remoting/helloworld" target="undeploy" inheritall="false" />
		<ant dir="examples/remoting/chatroom" target="undeploy" inheritall="false" />
		<ant dir="examples/remoting/progressbar" target="undeploy" inheritall="false" />
		<ant dir="examples/remoting/gwt" target="undeploy" inheritall="false" />
		<ant dir="examples/groovybooking" target="undeploy" inheritall="false" />
		<ant dir="examples/quartz" target="undeploy" inheritall="false" />
		<ant dir="examples/wiki" target="undeploy" inheritall="false" />
		<ant dir="examples/seamdiscs" target="undeploy" inheritall="false" />

		<!-- Unexplode from JBoss -->
		<ant dir="examples/booking" target="unexplode" inheritall="false" />
		<ant dir="examples/blog" target="unexplode" inheritall="false" />
		<ant dir="examples/dvdstore" target="unexplode" inheritall="false" />
		<ant dir="examples/contactlist" target="unexplode" inheritall="false" />
		<ant dir="examples/seampay" target="unexplode" inheritall="false" />
		<ant dir="examples/seamspace" target="unexplode" inheritall="false" />
		<ant dir="examples/itext" target="unexplode" inheritall="false" />
		<ant dir="examples/mail" target="unexplode" inheritall="false" />
		<ant dir="examples/ui" target="unexplode" inheritall="false" />
		<!--<ant dir="examples/spring" target="unexplode" inheritall="false" />-->
		<ant dir="examples/messages" target="unexplode" inheritall="false" />
		<ant dir="examples/numberguess" target="unexplode" inheritall="false" />
		<ant dir="examples/registration" target="unexplode" inheritall="false" />
		<ant dir="examples/todo" target="unexplode" inheritall="false" />
		<ant dir="examples/drools" target="unexplode" inheritall="false" />
		<ant dir="examples/remoting/helloworld" target="unexplode" inheritall="false" />
		<ant dir="examples/remoting/chatroom" target="unexplode" inheritall="false" />
		<ant dir="examples/remoting/progressbar" target="unexplode" inheritall="false" />
		<ant dir="examples/remoting/gwt" target="unexplode" inheritall="false" />
		<ant dir="examples/groovybooking" target="unexplode" inheritall="false" />
		<ant dir="examples/quartz" target="unexplode" inheritall="false" />
		<ant dir="examples/seamdiscs" target="unexplode" inheritall="false" />

		<!-- Undeploy from Tomcat -->
		<ant dir="examples/booking" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/dvdstore" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/itext" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/blog" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/contactlist" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/registration" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/messages" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/todo" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/drools" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/numberguess" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/quartz" target="tomcat.undeploy" inheritall="false" />
		<ant dir="examples/remoting/gwt" target="tomcat.undeploy" inheritall="false" />
	</target>

	<target name="deploypresentation" depends="build" description="Deploy the examples used in Seam presentations">
		<ant dir="examples/booking" target="deploy" inheritall="false" />
		<ant dir="examples/dvdstore" target="deploy" inheritall="false" />
		<copy file="examples/seam-examples.html" todir="${webroot.dir}" />
		<replace file="${webroot.dir}/seam-examples.html" token="http://localhost:8080" value="" />
	</target>

	<target name="testall" depends="testcore,build,compiletest" description="Run the core unit tests and all example tests">
		<ant dir="examples/booking" target="test" inheritall="false" />
		<ant dir="examples/dvdstore" target="test" inheritall="false" />
		<ant dir="examples/messages" target="test" inheritall="false" />
		<ant dir="examples/numberguess" target="test" inheritall="false" />
		<ant dir="examples/contactlist" target="test" inheritall="false" />
		<ant dir="examples/registration" target="test" inheritall="false" />
		<ant dir="examples/todo" target="test" inheritall="false" />
		<ant dir="examples/blog" target="test" inheritall="false" />
		<ant dir="examples/ui" target="test" inheritall="false" />
		<ant dir="examples/wiki" target="test" inheritall="false">
			<property name="test.output.dir" value="${test.dir}/wiki" />
		</ant>
		<!--<ant dir="examples/portal" target="test" inheritall="false" />-->
	</target>
	<target name="validateall" description="Validate all example XML Configuration Files">
		<ant dir="examples/booking" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/dvdstore" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/messages" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/numberguess" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/contactlist" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/registration" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/todo" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/blog" target="validateConfiguration" inheritall="false" />
		<ant dir="examples/seamdiscs" target="validateConfiguration" inheritall="false" />
		<!--<ant dir="examples/portal" target="validateConfiguration" inheritall="false" />-->
	</target>


	<!-- ################## CONTINUOUS INTEGRATION TARGETS #################-->

	<!-- Continuous integration wrapper target -->
	<!-- N.B. validateall must run last as it actually causes the build to fail rather than acting as a test (TODO Fix this) -->
	<target name="ci">
		<antcall target="cleanall" />
		<antcall target="dist" />
		<antcall target="cleanall" />
		<antcall target="coverageall" />
		<antcall target="copytestoutput" />
		<antcall target="testreport" />
		<antcall target="validateall" />
	</target>


	<!-- ########################## DIST TARGETS ###########################-->

	<target name="cleandist" description="Cleans up the dist directory">
		<delete dir="${dist.dir}" quiet="${quietclean}" />
	</target>

	<target name="copysource">
		<copysource destdir="${dist.src.core.dir}" srcdir="${src.core.dir}" />
		<copysource destdir="${dist.src.pdf.dir}" srcdir="${src.pdf.dir}" />
		<copysource destdir="${dist.src.ioc.dir}" srcdir="${src.ioc.dir}" />
		<copysource destdir="${dist.src.remoting.dir}" srcdir="${src.remoting.dir}" />
		<copysource destdir="${dist.src.mail.dir}" srcdir="${src.mail.dir}" />
		<copysource destdir="${dist.src.debug.dir}" srcdir="${src.debug.dir}" />
		<copysource destdir="${dist.src.gen.dir}" srcdir="${src.gen.dir}" />
		<copysource destdir="${dist.src.test.dir}" srcdir="${src.test.dir}" />

		<mkdir dir="${dist.ui.dir}" />
		<copy todir="${dist.ui.dir}">
			<fileset dir="${ui.dir}">
				<include name="src/**/*" />
				<include name="pom.xml" />
			</fileset>
		</copy>
	</target>

	<target name="copylib" depends="copyseam, copyseamdependencies">

		<copy todir="${dist.eejb.conf.dir}">
			<fileset dir="${eejb.conf.dir}">
				<include name="**/*" />
				<exclude name="tmp/**/*" />
			</fileset>
		</copy>

		<copy todir="${dist.mail.dir}">
			<fileset dir="${mail.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
		
		
		
		<copy todir="${dist.lib.dir}">
			<fileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</fileset>
		</copy>

	</target>

	<target name="copybuild">
		<copy todir="${dist.build.dir}">
			<fileset dir="${build.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>
	</target>

	<target name="copyexamples">
		<copy todir="${dist.dir}/examples">
			<fileset dir="${basedir}/examples">
				<include name="booking/**/*" />
				<exclude name="booking/alter.config" />
				<exclude name="booking/alter.config/**/*" />
				<exclude name="booking/build.alter.xml" />
				<include name="hibernate2/**/*" />
				<include name="jpa/**/*" />
				<include name="jee5/**/*" />
				<include name="blog/**/*" />
				<include name="contactlist/**/*" />
				<include name="registration/**/*" />
				<include name="dvdstore/**/*" />
				<include name="itext/**/*" />
				<include name="seampay/**/*" />
				<include name="seamspace/**/*" />
				<include name="mail/**/*" />
				<include name="spring/**/*" />
				<include name="ui/**/*" />
				<include name="messages/**/*" />
				<include name="todo/**/*" />
				<include name="numberguess/**/*" />
				<include name="groovybooking/**/*" />
				<include name="seamdiscs/**/*" />
				<include name="quartz/**/*" />
				<include name="wiki/**/*" />
				<!--<include name="portal/**/*" />-->
				<include name="drools/**/*" />
				<include name="remoting/chatroom/**/*" />
				<include name="remoting/helloworld/**/*" />
				<include name="remoting/progressbar/**/*" />
				<include name="remoting/gwt/**/*" />
				<include name="readme.txt" />
				<include name="seam-examples.html" />
				<include name="build.xml" />
				<exclude name="*/exploded-archives" />
				<exclude name="*/exploded-archives/**/*" />
				<exclude name="*/test-build" />
				<exclude name="*/test-build/**/*" />
				<exclude name="*/dist" />
				<exclude name="*/dist/**/*" />
			</fileset>
		</copy>
	</target>

	<target name="copyseamgen">
		<copy todir="${dist.seamgen.dir}">
			<fileset dir="${seamgen.dir}">
				<exclude name="build.properties" />
			</fileset>
		</copy>
	</target>

	<target name="extras">
		<copy file="readme.txt" todir="${dist.dir}" />
		<copy file="lgpl.txt" todir="${dist.dir}" />
		<copy file="changelog.txt" todir="${dist.dir}" />
		<copy file="build.properties.sample" tofile="${dist.dir}/build.properties" />
		<propertyfile file="${dist.dir}/build.properties">
			<entry key="mavenized" value="false"/>
		</propertyfile>
		<copy file="build.xml" todir="${dist.dir}" />
		<copy file="seam" todir="${dist.dir}" />
		<copy file="seam-text.g" todir="${dist.dir}" />
		<copy file="seam.bat" todir="${dist.dir}" />
		<copy file="validate.xml" todir="${dist.dir}" />
		<copy file="seam2migration.txt" todir="${dist.dir}" />
		<replace file="${dist.dir}/build.xml">
			<replacetoken>
				<![CDATA[${name}-${version}.${patchlevel}]]>
			</replacetoken>
			<replacevalue>
				<![CDATA[${name}-${TODAY}]]>
			</replacevalue>
		</replace>
	</target>
	

	<target name="dist" depends="cleandist,build,javadoc,copysource,copylib,copyexamples,copyseamgen,refdoc,extras" description="Build everything and package">
		<zip zipfile="${dist.location}/${dist.name}.zip">
			<zipfileset prefix="${dist.name}" dir="${dist.dir}" />
		</zip>
		<tar tarfile="${dist.location}/${dist.name}.tar.gz" compression="gzip">
			<tarfileset prefix="${dist.name}" dir="${dist.dir}" />
		</tar>
	</target>


	<!-- ########################## DOCUMENTATION TARGETS ##########################-->

	<target name="javadoc" description="Compile the Javadoc API documentation to dist dir" depends="initcore">

		<mkdir dir="${dist.api.dir}" />
		<javadoc classpathref="compile.core.path" destdir="${dist.api.dir}" use="true" protected="true" version="true" windowtitle="${Name} API Documentation" Overview="${doc.api.dir}/package.html" doctitle="${Name} API Documentation" stylesheetfile="${doc.api.dir}/jdstyle.css" link="${javadoc.link}">

			<packageset dir="${src.core.dir}" defaultexcludes="yes">
				<include name="org/jboss/seam/**" />
			</packageset>

		</javadoc>

		<cdk target="javadoc:javadoc" />

		<copy file="${doc.api.dir}/package.html" todir="${dist.api.dir}" />

		<copy todir="${dist.ui.api.dir}">
			<fileset dir="${ui.dir}/target/site">
				<!--<include name="tlddoc/**"/>-->
				<include name="apidocs/**" />
			</fileset>
		</copy>

	</target>

	<target name="refdoc" description="Generate and copy reference documentation">

		<copy todir="${doc.ref.dir}/build">
			<fileset dir="${doc.ref.dir}" />
		</copy>
		<replace dir="${doc.ref.dir}/build" token="@version@" value="${version}.${patchlevel}" />
		<ant dir="${doc.ref.dir}/build" inheritall="false" target="all.doc" />
		<copy todir="${dist.ref.dir}">
			<fileset dir="${doc.ref.dir}/build/build" />
		</copy>
		<delete dir="${doc.ref.dir}/build" />
	</target>


	<!-- ########################### TEST TARGETS ###########################-->

	<target name="compiletest" depends="inittestcore,select-compiler,antlr,jarremoting">
		<compile classesdir="${classes.test.dir}" srcdir="${src.test.dir}" classpath="test.core.path" />
	</target>
	
	<target name="inittestcore" depends="build">
		<init classesdir="${classes.test.dir}" srcdir="${src.test.dir}" modulename="core" pom="${core.pom}" scope="test" message=""/>
		<copy todir="${classes.test.core.dir}">
			<fileset dir="${classes.core.dir}" includes="**/*.*" />
		</copy>
	</target>


	<target name="testcore" depends="inittestcore,compiletest" description="Run the core unit tests">
		<taskdef resource="testngtasks" classpathref="test.core.path" />
		<property name="cp" refid="test.core.path" />
		<echo >${cp}</echo>
		<testng>
			<jvmarg value="-Djava.awt.headless=true" />
			<classpath>
				<path path="${classes.test.core.dir}" />
				<path path="${classes.test.dir}" />
				<path refid="classpath.emma" />
				<path refid="test.core.path" />
				<pathelement location="${lib.dir}/jboss-seam-remoting.jar"/>
			</classpath>
			<xmlfileset dir="${src.test.dir}" includes="**/*.xml" />
		</testng>
	</target>

	<target name="testreport" description="Create a pretty report">
		<mkdir dir="${report.dir}" />
		<junitreport todir="${report.dir}">
			<fileset dir="${test.dir}">
				<include name="**/*.xml" />
				<exclude name="**/testng-*.xml" />
			</fileset>
			<report format="noframes" todir="${report.dir}" />

		</junitreport>
		<echo>Report available at ${report.dir}/junit-noframes.html</echo>
	</target>

	<target name="copytestoutput">
		<mkdir dir="${report.dir}/tests" />
		<copy todir="${report.dir}/tests">
			<fileset dir="${test.dir}">
				<include name="**/*.xml" />
				<exclude name="**/testng-*.xml" />
			</fileset>
			<mapper type="flatten" />
		</copy>
	</target>

	<target name="instrumentcore" depends="compilecore">
		<taskdef resource="emma_ant.properties" classpathref="classpath.emma" />
		<mkdir dir="${coverage.dir}/core" />
		<emma>
			<instr instrpath="${classes.core.dir}" mode="overwrite" metadatafile="${coverage.dir}/coveragecore.em">
				<!-- Exclude packages we don't want coverage for -->
				<filter excludes="org.jboss.seam.annotations.*" />
				<filter excludes="org.jboss.seam.test.*" />
				<filter excludes="*.package-info.java" />
				<filter excludes="org.jboss.seam.text.*" />
			</instr>
		</emma>
	</target>

	<target name="coveragecore" depends="instrumentcore, testall" description="Run the core unit tests and all example tests with code coverage">
		<move file="${basedir}/coverage.ec" tofile="${coverage.dir}/coveragecore.ec" />
		<emma>
			<report sourcepath="${src.core.dir}" depth="method">
				<infileset dir="${coverage.dir}" includes="coveragecore.em,coveragecore.ec" />
				<html outfile="${report.dir}/coverage.html" />
				<xml outfile="${report.dir}/coverage.xml" />
			</report>
		</emma>
		<echo>Code coverage report for core classes available at ${report.dir}/coverage.html</echo>
	</target>

	<target name="coverageall" depends="coveragecore" description="Run all unit tests with coverage" />


	<!-- ########################## MACRO DEFS ##########################-->

	<macrodef name="init">
		<attribute name="modulename" />
		<attribute name="classesdir" />
		<attribute name="srcdir" />
		<attribute name="pom" />
		<attribute name="message" default="Build ${Name} @{modulename} ${version}" />
		<attribute name="scope" default="compile" />
		<sequential>
			<echo message="@{message}" />
			<mkdir dir="@{classesdir}" />
			<copy todir="@{classesdir}">
				<fileset dir="@{srcdir}">
					<patternset refid="meta.files" />
				</fileset>
			</copy>
			<dependencies id="@{modulename}" scope="@{scope}" pom="@{pom}" />
		</sequential>
	</macrodef>

	<macrodef name="compile">
		<attribute name="classesdir" />
		<attribute name="srcdir" />
		<attribute name="classpath" />
		<element name="compile.classpath" optional="true" />
		<sequential>
			<javac source="1.5" target="1.5" destdir="@{classesdir}" debug="${javac.debug}" deprecation="${javac.deprecation}" nowarn="on" srcdir="@{srcdir}">
				<classpath>
					<path refid="@{classpath}" />
					<compile.classpath />
				</classpath>
			</javac>
		</sequential>
	</macrodef>

	<macrodef name="archive">
		<attribute name="module" />
		<attribute name="classesdir" />
		<attribute name="pom" />
		<sequential>
			<mkdir dir="${lib.dir}" />
			<jar jarfile="${lib.dir}/@{module}.jar" basedir="@{classesdir}">
				<include name="**/*.class" />
				<exclude name="**/test/*.class" />
				<patternset refid="meta.files" />
				<manifest>
					<attribute name="Seam-Version" value="${version}.${patchlevel}" />
					<attribute name="Implementation-Version" value="${version}.${patchlevel}" />
				</manifest>
			</jar>
			<install jar="${lib.dir}/@{module}.jar" pom="@{pom}" />
		</sequential>
	</macrodef>

	<!-- Call out to maven to build Seam ui based on the cdk-->
	<macrodef name="cdk">
		<attribute name="target" />
		<sequential>
			<pomfile name="ui.pom" value="${build.dir}/ui.pom.xml" tofile="${ui.dir}/pom.xml" />
			<java classname="org.codehaus.classworlds.Launcher" fork="true" dir="${basedir}/ui">
				<classpath>
					<fileset dir="${maven.dir}/core/boot">
						<include name="*.jar" />
					</fileset>
					<fileset dir="${maven.dir}/bin">
						<include name="*.*" />
					</fileset>
				</classpath>
				<sysproperty key="classworlds.conf" value="${maven.dir}/bin/m2.conf" />
				<sysproperty key="maven.home" value="${maven.dir}" />
				<arg line="-Dseam.version=${version}.${patchlevel}" />
				<arg line="@{target}" />
			</java>
			<delete file="${ui.dir}/pom.xml"/>
		</sequential>
	</macrodef>

	<macrodef name="copysource">
		<attribute name="destdir" />
		<attribute name="srcdir" />
		<sequential>
			<mkdir dir="@{destdir}" />
			<copy todir="@{destdir}">
				<fileset dir="@{srcdir}">
					<patternset refid="src.files" />
				</fileset>
				<fileset dir="@{srcdir}">
					<patternset refid="meta.files" />
				</fileset>
			</copy>
		</sequential>
	</macrodef>

	<macrodef name="copylib">
		<attribute name="fileset" />
		<attribute name="versions" />
		<sequential>
			<copy todir="${dist.lib.dir}" verbose="on">
				<fileset refid="@{fileset}">
					<!-- Need to exclude jboss-seam-* -->
					<!--<exclude name="**/jboss-seam*.jar" />-->
				</fileset>
				<mapper classpathref="maven-ant-tasks.classpath" classname="org.apache.maven.artifact.ant.VersionMapper" from="@{versions}" to="flatten" />
			</copy>
		</sequential>
	</macrodef>

</project>
