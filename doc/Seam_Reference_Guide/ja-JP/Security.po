# translation of Tools.po to Japanese
# Noriko Mizumoto <noriko@redhat.com>, 2007.
msgid ""
msgstr ""
"Project-Id-Version: Tools\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-11-06 06:41+0000\n"
"PO-Revision-Date: 2008-12-23 17:22+0900\n"
"Last-Translator: Ken Yamada <ken@tydfam.jp>\n"
"Language-Team: Japanese <fedora-trans-ja@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: Security.xml:4
#, no-c-format
msgid "Security"
msgstr "セキュリティ"

#. Tag: title
#: Security.xml:7
#, no-c-format
msgid "Overview"
msgstr "概要"

#. Tag: para
#: Security.xml:9
#, no-c-format
msgid "The Seam Security API provides a multitude of security-related features for your Seam-based application, covering such areas as:"
msgstr "SeamのセキュリティAPIはSeamベースのアプリケーションに種々のセキュリティ関連機能を提供します。　これらの機能には、以下のようなものがあります。"

#. Tag: para
#: Security.xml:16
#, no-c-format
msgid "Authentication - an extensible, JAAS-based authentication layer that allows users to authenticate against any security provider."
msgstr "認証ー種々のセキュリティプロバイダによるユーザ認証を可能にする、拡張可能なJAASベースの認証層を提供します"

#. Tag: para
#: Security.xml:22
#, no-c-format
msgid "Identity Management - an API for managing a Seam application's users and roles at runtime."
msgstr "ID管理ーSeamアプリケーション動作時にユーザとロールを管理するAPIを提供します"

#. Tag: para
#: Security.xml:27
#, no-c-format
msgid "Authorization - an extremely comprehensive authorization framework, supporting user roles, persistent and rule-based permissions, and a pluggable permission resolver for easily implementing customised security logic."
msgstr "認可ーユーザロール、永続的なルールをベースにしたパーミッションや、カスタマイズ可能でセキュリティロジックを簡単に実装出来るプラグイン可能な許可リゾルバーをサポートする、非常に包括的な、認可フレームワーク"

#. Tag: para
#: Security.xml:33
#, no-c-format
msgid "Permission Management - a set of built-in Seam components to allow easy management of an application's security policy."
msgstr "パーミッション管理ーアプリケーションのセキュリティポリシーを容易に管理する事を可能にする一連のSeam組み込みコンポーネント"

#. Tag: para
#: Security.xml:39
#, no-c-format
msgid "CAPTCHA support - to assist in the prevention of automated software/scripts abusing your Seam-based site."
msgstr "CAPCHAのサポートーSeamで作られたサイトを自動検索プログラム・スクリプトによる予期しない動作から保護する為の支援をします"

#. Tag: para
#: Security.xml:44
#, no-c-format
msgid "And much more"
msgstr "等々"

#. Tag: para
#: Security.xml:50
#, no-c-format
msgid "This chapter will cover each of these features in detail."
msgstr "この章ではこれらの機能の詳細について説明します"

#. Tag: title
#: Security.xml:57
#, no-c-format
msgid "Disabling Security"
msgstr "セキュリティの無効化"

#. Tag: para
#: Security.xml:59
#, no-c-format
msgid "In some situations it may be necessary to disable Seam Security, for example during unit tests. This can be done by calling the static method <literal>Identity.setSecurityEnabled(false)</literal> to disable security checks. Doing this prevents any security checks being performed for the following:"
msgstr "ユニットテスト時のように、状況によりSeamのセキュリティを無効化する必要がある場合があります。　このような場合には、静的メソッド<literal>Identity.setSecurityEnabled(false)</literal>を呼ぶことによりセキュリティチェックを無効にすることが出来ます。　これにより、以下のセキュリティチェックが無効化されます。"

#. Tag: para
#: Security.xml:67
#, no-c-format
msgid "Entity Security"
msgstr "エンティティのセキュリティ"

#. Tag: para
#: Security.xml:70
#, no-c-format
msgid "Hibernate Security Interceptor"
msgstr "ハイバーネートセキュリティインターセプタ"

#. Tag: para
#: Security.xml:73
#, no-c-format
msgid "Seam Security Interceptor"
msgstr "Seamセキュリティインターセプタ"

#. Tag: para
#: Security.xml:76
#, no-c-format
msgid "Page restrictions"
msgstr "ページ単位の制約"

#. Tag: title
#: Security.xml:82
#, no-c-format
msgid "Authentication"
msgstr "認証"

#. Tag: para
#: Security.xml:84
#, no-c-format
msgid "The authentication features provided by Seam Security are built upon JAAS (Java Authentication and Authorization Service), and as such provide a robust and highly configurable API for handling user authentication. However, for less complex authentication requirements Seam offers a much more simplified method of authentication that hides the complexity of JAAS."
msgstr "Seam セキュリティの提供する認証機構は JAAS (Java Authentication and Authorization Service) の上に構築されており、 ユーザ認証の為の堅牢で設定の自由度の高い API を提供しています。 しかしながら、 Seamで は JAAS の複雑さを隠蔽したより単純化された認証機構も提供しています。"

#. Tag: title
#: Security.xml:91
#, no-c-format
msgid "Configuring an Authenticator component"
msgstr "認証コンポーネントの設定"

#. Tag: note
#: Security.xml:93
#, no-c-format
msgid "If you use Seam's Identity Management features (discussed later in this chapter) then it is not necessary to create an authenticator component (and you can skip this section)."
msgstr "この章で解説するSeamのID管理機能を使用するのであれば、authenticator（認証）コンポーネントを作成する必要はありませんのでこの章を飛ばしても結構です。"

#. Tag: para
#: Security.xml:98
#, no-c-format
msgid "The simplified authentication method provided by Seam uses a built-in JAAS login module, <literal>SeamLoginModule</literal>, which delegates authentication to one of your own Seam components. This login module is already configured inside Seam as part of a default application policy and as such does not require any additional configuration files. It allows you to write an authentication method using the entity classes that are provided by your own application, or alternatively to authenticate with some other third party provider. Configuring this simplified form of authentication requires the <literal>identity</literal> component to be configured in <literal>components.xml</literal>:"
msgstr "単純な認証機構ではSeamアプリケーションのコンポーネントに認証を委ねる<literal>SeamLoginModule</literal>（これは、Seamに内蔵されているJAASのログインモジュールです）を使います。 このログインモジュールはSeamのデフォルトのアプリケーションポリシーとして予め設定されていますので、新たに設定に追加する事なく使用することができます。　また、作成したアプリケーションのエンティティクラスを利用して、認証メソッドを記述したり、 サード―パーティのプロバイダを使った認証をする事が出来ます。　この「単純な認証機構」を利用するためには<literal>components.xml</literal>に下記のように<literal>identity</literal>コンポーネントを設定する必要があります。"

#. Tag: programlisting
#: Security.xml:107
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:core=\"http://jboss.com/products/seam/core\"\n"
"            xmlns:security=\"http://jboss.com/products/seam/security\"\n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xsi:schemaLocation=\n"
"                \"http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.1.xsd\n"
"                 http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.1.xsd\">\n"
"\n"
"    <security:identity authenticate-method=\"#{authenticator.authenticate}\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:core=\"http://jboss.com/products/seam/core\"\n"
"            xmlns:security=\"http://jboss.com/products/seam/security\"\n"
"            xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"            xsi:schemaLocation=\n"
"                \"http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.1.xsd\n"
"                 http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.1.xsd\">\n"
"\n"
"    <security:identity authenticate-method=\"#{authenticator.authenticate}\"/>\n"
"\n"
"</components>]]>"

#. Tag: para
#: Security.xml:109
#, no-c-format
msgid "The EL expression <literal>#{authenticator.authenticate}</literal> is a method binding that indicates the <literal>authenticate</literal> method of the <literal>authenticator</literal> component will be used to authenticate the user."
msgstr "EL式 <literal>#{authenticator.authenticate}</literal> は<literal>authenticator</literal>コンポーネントの<literal>authenticate</literal>メソッドを使って、ユーザの認証を行うことを示すメソッド結合です。"

#. Tag: title
#: Security.xml:118
#, no-c-format
msgid "Writing an authentication method"
msgstr "認証メソッドの記述"

#. Tag: para
#: Security.xml:120
#, no-c-format
msgid "The <literal>authenticate-method</literal> property specified for <literal>identity</literal> in <literal>components.xml</literal> specifies which method will be used by <literal>SeamLoginModule</literal> to authenticate users. This method takes no parameters, and is expected to return a boolean, which indicates whether authentication is successful or not. The user's username and password can be obtained from <literal>Credentials.getUsername()</literal> and <literal>Credentials.getPassword()</literal>, respectively (you can get a reference to the <literal>credentials</literal> component via <literal>Identity.instance().getCredentials()</literal>). Any roles that the user is a member of should be assigned using <literal>Identity.addRole()</literal>. Here's a complete example of an authentication method inside a POJO component:"
msgstr "<literal>components.xml</literal> 中の<literal>identity</literal>の<literal>authenticate-method</literal>プロパティで<literal>SeamLoginModule</literal>にユーザの認証に使うメソッドを指定します。　このメソッドはパラメータを取らず、認証が成功したか否かのboolean型を返します。　ユーザのusernameとpasswordは<literal>Credentials.getUsername()</literal> と <literal>Credentials.getPassword()</literal>から其々取得します（また、<literal>Identity.instance().getCredentials()</literal>から<literal>credentials</literal>コンポーネントを参照する事も出来ます）。　ユーザがメンバーとして参加するロールは<literal>Identity.addRole()</literal>により指定される必要があります。　以下にPOJOコンポーネント中の認証メソッドの完全な例を示します。"

#. Tag: programlisting
#: Security.xml:132
#, no-c-format
msgid ""
"<![CDATA[@Name(\"authenticator\")\n"
"public class Authenticator {\n"
"   @In EntityManager entityManager;\n"
"   @In Credentials credentials;\n"
"   @In Identity identity;\n"
"\n"
"   public boolean authenticate() {\n"
"      try {\n"
"         User user = (User) entityManager.createQuery(\n"
"            \"from User where username = :username and password = :password\")\n"
"            .setParameter(\"username\", credentials.getUsername())\n"
"            .setParameter(\"password\", credentials.getPassword())\n"
"            .getSingleResult();\n"
"\n"
"         if (user.getRoles() != null) {\n"
"            for (UserRole mr : user.getRoles())\n"
"               identity.addRole(mr.getName());\n"
"         }\n"
"\n"
"         return true;\n"
"      }\n"
"      catch (NoResultException ex) {\n"
"         return false;\n"
"      }\n"
"\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"authenticator\")\n"
"public class Authenticator {\n"
"   @In EntityManager entityManager;\n"
"   @In Credentials credentials;\n"
"   @In Identity identity;\n"
"\n"
"   public boolean authenticate() {\n"
"      try {\n"
"         User user = (User) entityManager.createQuery(\n"
"            \"from User where username = :username and password = :password\")\n"
"            .setParameter(\"username\", credentials.getUsername())\n"
"            .setParameter(\"password\", credentials.getPassword())\n"
"            .getSingleResult();\n"
"\n"
"         if (user.getRoles() != null) {\n"
"            for (UserRole mr : user.getRoles())\n"
"               identity.addRole(mr.getName());\n"
"         }\n"
"\n"
"         return true;\n"
"      }\n"
"      catch (NoResultException ex) {\n"
"         return false;\n"
"      }\n"
"\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: Security.xml:134
#, no-c-format
msgid "In the above example, both <literal>User</literal> and <literal>UserRole</literal> are application-specific entity beans. The <literal>roles</literal> parameter is populated with the roles that the user is a member of, which should be added to the <literal>Set</literal> as literal string values, e.g. \"admin\", \"user\". In this case, if the user record is not found and a <literal>NoResultException</literal> thrown, the authentication method returns <literal>false</literal> to indicate the authentication failed."
msgstr "上記の例では、<literal>User</literal>と<literal>UserRole</literal>はアプリケーション独自のエンティティビーンとなっています。 パラメータ <literal>roles</literal> は \"admin\", \"user\" の様に文字列として、<literal>Set</literal>に追加されてゆく必要があります。 この例の場合、userが見付からずに<literal>NoResultException</literal>が投げられた場合には、認証メソッドは<literal>false</literal>を返して、認証が失敗したことを示します。"

#. Tag: para
#: Security.xml:143
#, no-c-format
msgid "When writing an authenticator method, it is important that it is kept minimal and free from any side-effects. This is because there is no guarantee as to how many times the authenticator method will be called by the security API, and as such it may be invoked multiple times during a single request. Because of this, any special code that should execute upon a successful or failed authentication should be written by implementing an event observer. See the section on Security Events further down in this chapter for more information about which events are raised by Seam Security."
msgstr "認証メソッドを記述する場合、副次的な影響を受けない、或いは影響が最小になるようにすることが重要です。　これは、セキュリティAPIにより何回認証メソッドが呼び出されるのか保証が無く、一回の要求で複数回実行されることもあるからです。　この為、認証が成功あるいは失敗した時に実行されるコードはイベントオブザーバを利用して記述されるべきです。　Seamのセキュリティにより発生するイベントについての詳細はこの章の後半に記載されています。"

#. Tag: title
#: Security.xml:155
#, no-c-format
msgid "Identity.addRole()"
msgstr "Identity.addRole()"

#. Tag: para
#: Security.xml:157
#, no-c-format
msgid "The <literal>Identity.addRole()</literal> method behaves differently depending on whether the current session is authenticated or not. If the session is not authenticated, then <literal>addRole()</literal> should <emphasis>only</emphasis> be called during the authentication process. When called here, the role name is placed into a temporary list of pre-authenticated roles. Once authentication is successful, the pre-authenticated roles then become \"real\" roles, and calling <literal>Identity.hasRole()</literal> for those roles will then return true. The following sequence diagram represents the list of pre-authenticated roles as a first class object to show more clearly how it fits in to the authentication process."
msgstr "<literal>Identity.addRole()</literal>メソッドは現在のユーザが認証されているか否かで動作が異なります。　認証されていないセッションの場合には、<literal>addRole()</literal>は認証過程でのみ呼び出され、指定されたロールは、認証されていないロールの仮のリストに登録され、認証が成功すると、仮のロールから実際のロールに移行し、このロールで<literal>Identity.hasRole()</literal>が実行され、真が返されます。　以下のシークエンスダイアグラムに、仮の認証ロールリストの認証プロセスにおける役割について示します。"

#. Tag: para
#: Security.xml:177
#, no-c-format
msgid "If the current session is already authenticated, then calling <literal>Identity.addRole()</literal> will have the expected effect of immediately granting the specified role to the current user."
msgstr "カレントセッションがすでに認証されている場合に<literal>Identity.addRole()</literal> を呼ぶと指定されたロールが即座に現在のユーザに付与されます。"

#. Tag: title
#: Security.xml:185
#, no-c-format
msgid "Writing an event observer for security-related events"
msgstr "セキュリティ関連のイベントのオブザーバの記述"

#. Tag: para
#: Security.xml:187
#, no-c-format
msgid "Say for example, that upon a successful login that some user statistics must be updated. This would be done by writing an event observer for the <literal>org.jboss.seam.security.loginSuccessful</literal> event, like this:"
msgstr "例として、ログインに成功する度にユーザの統計データを更新する場合を考えてみましょう。　これは、<literal>org.jboss.seam.security.loginSuccessful</literal>イベントのオブザーバを記述する事により、以下のように実現できます。"

#. Tag: programlisting
#: Security.xml:193
#, no-c-format
msgid ""
"<![CDATA[   @In UserStats userStats;\n"
"\n"
"   @Observer(\"org.jboss.seam.security.loginSuccessful\")\n"
"   public void updateUserStats()\n"
"   {\n"
"      userStats.setLastLoginDate(new Date());\n"
"      userStats.incrementLoginCount();\n"
"   }]]>"
msgstr ""
"<![CDATA[   @In UserStats userStats;\n"
"\n"
"   @Observer(\"org.jboss.seam.security.loginSuccessful\")\n"
"   public void updateUserStats()\n"
"   {\n"
"      userStats.setLastLoginDate(new Date());\n"
"      userStats.incrementLoginCount();\n"
"   }]]>"

#. Tag: para
#: Security.xml:195
#, no-c-format
msgid "This observer method can be placed anywhere, even in the Authenticator component itself. You can find more information about security-related events later in this chapter."
msgstr "このオブザーバメソッドは、Authenticatorコンポーネントを含め、どこにおいても構いません。　セキュリティ関連のイベントについてこの章で更に見てゆきます。"

#. Tag: title
#: Security.xml:204
#, no-c-format
msgid "Writing a login form"
msgstr "ログインフォームの記述"

#. Tag: para
#: Security.xml:206
#, no-c-format
msgid "The <literal>credentials</literal> component provides both <literal>username</literal> and <literal>password</literal> properties, catering for the most common authentication scenario. These properties can be bound directly to the username and password fields on a login form. Once these properties are set, calling <literal>identity.login()</literal> will authenticate the user using the provided credentials. Here's an example of a simple login form:"
msgstr " <literal>credentials</literal> コンポーネントは<literal>username</literal>および<literal>password</literal>属性を保持しており、一般的な認証処理に対応できるようになっています。　これらの属性はログインフォームのusernameとpasswordフィールドに直接バインドする事が可能です。　これらの属性が設定されてしまえば、後は<literal>identity.login()</literal>を呼び出すことにより、保持されているusernameとpasswordによるユーザの認証が行われます。簡単なログインフォームの例を示します。"

#. Tag: programlisting
#: Security.xml:214
#, no-c-format
msgid ""
"<![CDATA[<div>\n"
"    <h:outputLabel for=\"name\" value=\"Username\"/>\n"
"    <h:inputText id=\"name\" value=\"#{credentials.username}\"/>\n"
"</div>\n"
"\n"
"<div>\n"
"    <h:outputLabel for=\"password\" value=\"Password\"/>\n"
"    <h:inputSecret id=\"password\" value=\"#{credentials.password}\"/>\n"
"</div>\n"
"\n"
"<div>\n"
"    <h:commandButton value=\"Login\" action=\"#{identity.login}\"/>\n"
"</div>]]>"
msgstr ""
"<![CDATA[<div>\n"
"    <h:outputLabel for=\"name\" value=\"Username\"/>\n"
"    <h:inputText id=\"name\" value=\"#{credentials.username}\"/>\n"
"</div>\n"
"\n"
"<div>\n"
"    <h:outputLabel for=\"password\" value=\"Password\"/>\n"
"    <h:inputSecret id=\"password\" value=\"#{credentials.password}\"/>\n"
"</div>\n"
"\n"
"<div>\n"
"    <h:commandButton value=\"Login\" action=\"#{identity.login}\"/>\n"
"</div>]]>"

#. Tag: para
#: Security.xml:216
#, no-c-format
msgid "Similarly, logging out the user is done by calling <literal>#{identity.logout}</literal>. Calling this action will clear the security state of the currently authenticated user, and invalidate the user's session."
msgstr "（loginと）同様にログアウトも、<literal>#{identity.logout}</literal>を呼び出すことにより実行されます。ログアウトを実行することにより、現在認証されているユーザのセキュリティの状態をクリアし、セッションは無効化されます。"

#. Tag: title
#: Security.xml:224
#, no-c-format
msgid "Configuration Summary"
msgstr "設定のまとめ"

#. Tag: para
#: Security.xml:225
#, no-c-format
msgid "So to sum up, there are the three easy steps to configure authentication:"
msgstr "まとめとして、認証システムを設定するためには、以下の３つのステップが必要となります。"

#. Tag: para
#: Security.xml:231
#, no-c-format
msgid "Configure an authentication method in <literal>components.xml</literal>."
msgstr "認証メソッドを<literal>components.xml</literal>に設定する。"

#. Tag: para
#: Security.xml:236
#, no-c-format
msgid "Write an authentication method."
msgstr "認証メソッドを記述する。"

#. Tag: para
#: Security.xml:241
#, no-c-format
msgid "Write a login form so that the user can authenticate."
msgstr "ユーザを認証するためのログインフォームを記述する。"

#. Tag: title
#: Security.xml:250
#, no-c-format
msgid "Remember Me"
msgstr "Remember Me　（覚えておいて！）"

#. Tag: para
#: Security.xml:252
#, no-c-format
msgid "Seam Security supports the same kind of \"Remember Me\" functionality that is commonly encountered in many online web-based applications. It is actually supported in two different \"flavours\", or modes - the first mode allows the username to be stored in the user's browser as a cookie, and leaves the entering of the password up to the browser (many modern browsers are capable of remembering passwords)."
msgstr "Seamのセキュリティ機能ではオンラインのWEBアプリケーションで一般的に提供されている\"Remember me\"(覚えておいてね）機能をサポートしています。　この機能は、二つの異なったモードをサポートしており、一つはusernameをユーザのブラウザにクッキーとして保存し、ブラウザからpasswordの入力を促すものです（この場合でも、最近の殆どのブラウザは、passwordを記憶しています）。"

#. Tag: para
#: Security.xml:259
#, no-c-format
msgid "The second mode supports the storing of a unique token in a cookie, and allows a user to authenticate automatically upon returning to the site, without having to provide a password."
msgstr "第２のモードはユニークなトークンをクッキーとして記憶しておいて、そのサイトに入ると、passwordの入力をする事なく自動的にユーザの認証をする機能をサポートするものです。"

#. Tag: para
#: Security.xml:265
#, no-c-format
msgid "Automatic client authentication with a persistent cookie stored on the client machine is dangerous. While convenient for users, any cross-site scripting security hole in your website would have dramatically more serious effects than usual. Without the authentication cookie, the only cookie to steal for an attacker with XSS is the cookie of the current session of a user. This means the attack only works when the user has an open session - which should be a short timespan. However, it is much more attractive and dangerous if an attacker has the possibility to steal a persistent Remember Me cookie that allows him to login without authentication, at any time. Note that this all depends on how well you protect your website against XSS attacks - it's up to you to make sure that your website is 100% XSS safe - a non-trival achievement for any website that allows user input to be rendered on a page."
msgstr "クライアント側の永続的なクッキーによる自動的な認証（第２のモード）は危険で、ユーザへの利便性は向上しますが、クロスサイトスクリプティングに対するセキュリティホールの影響を通常より遥かに重大な物としてしまいます。　認証の為のクッキーでなければ、XSSにより攻撃者に盗まれるクッキーは、現在のセッションのユーザのクッキーという事になります。　これは、ユーザがセッションを開いていなければ攻撃が有効でないことを意味し、攻撃可能な時間が非常に短い事を意味します。　攻撃者が自動認証をサポートする永続的なRemember meクッキーを盗む可能性があるとすれば、それは大変危険なことです。　　この機能の利用の危険性は、システムがXSS攻撃に対してどれだけ防御出来ているのかに依存し、XSS攻撃に対して１００％の防御を保証している必要がありますが、入力内容をWEBページに表示するようなサイトにとって、これは簡単ではありません。"

#. Tag: para
#: Security.xml:276
#, no-c-format
msgid "Browser vendors recognized this issue and introduced a \"Remember Passwords\" feature - today almost all browsers support this. Here, the browser remembers the login username and password for a particular website and domain, and fills out the login form automatically when you don't have an active session with the website. If you as a website designer then offer a convenient login keyboard shortcut, this approach is almost as convenient as a \"Remember Me\" cookie and much safer. Some browsers (e.g. Safari on OS X) even store the login form data in the encrypted global operation system keychain. Or, in a networked environment, the keychain can be transported with the user (between laptop and desktop for example), while browser cookies are usually not synchronized."
msgstr "ブラウザのベンダーはこの問題を認識しており、最近のブラウザでは新たに導入されたRemember Passwordをサポートしています。　この場合は、ブラウザは特定のドメイン、ウェブサイトに対してのusernameとpasswordを記憶しており、ウェブサイトとのセッションがアクティブでない状態で、ログインフォームのusernameとpasswordを自動的に埋めてゆきます。　ウェブデザイナの立場であれば、ログインの為のショートカットキーを設定しておけば、Remember Meと同様にユーザの利便性を向上させることが出来ます。　OS-xのSafariなど一部のブラウザでは、OSのキーチェインに暗号化したログインのフォームを記憶させています。　また、ブラウザのクッキーは一般に同期化させることは出来ませんが、ネットワーク環境ではこのキーチェインはラップトップからデスクトップへと移動させることが出来ます。"

#. Tag: para
#: Security.xml:286
#, no-c-format
msgid "To summarize: While everyone is doing it, persistent \"Remember Me\" cookies with automatic authentication are a bad practice and should not be used. Cookies that \"remember\" only the users login name, and fill out the login form with that username as a convenience, are not an issue."
msgstr "まとめ：自動認証をする永続的なRemember Meの使用は一般化してしまっていますが、セキュリティ上、不適切であり使用すべきではありません。　ログイン時のusernameのみを記憶するクッキーを使用することには問題はありません。"

#. Tag: para
#: Security.xml:293
#, no-c-format
msgid "To enable the remember me feature for the default (safe, username only) mode, no special configuration is required. In your login form, simply bind the remember me checkbox to <literal>rememberMe.enabled</literal>, like in the following example:"
msgstr "デフォルトのRemember me(usernameのみ）機能を使用するためには、特に設定は必要ありません。　下の例のように、ログインフォームにremember meチェックボックスを入れて、これを<literal>rememberMe.enabled</literal>とバインドするだけです。"

#. Tag: programlisting
#: Security.xml:299
#, no-c-format
msgid ""
"<![CDATA[  <div>\n"
"    <h:outputLabel for=\"name\" value=\"User name\"/>\n"
"    <h:inputText id=\"name\" value=\"#{credentials.username}\"/>\n"
"  </div>\n"
"  \n"
"  <div>\n"
"    <h:outputLabel for=\"password\" value=\"Password\"/>\n"
"    <h:inputSecret id=\"password\" value=\"#{credentials.password}\" redisplay=\"true\"/>\n"
"  </div>      \n"
"  \n"
"  <div class=\"loginRow\">\n"
"    <h:outputLabel for=\"rememberMe\" value=\"Remember me\"/>\n"
"    <h:selectBooleanCheckbox id=\"rememberMe\" value=\"#{rememberMe.enabled}\"/>\n"
"  </div>]]>"
msgstr ""
"<![CDATA[  <div>\n"
"    <h:outputLabel for=\"name\" value=\"User name\"/>\n"
"    <h:inputText id=\"name\" value=\"#{credentials.username}\"/>\n"
"  </div>\n"
"  \n"
"  <div>\n"
"    <h:outputLabel for=\"password\" value=\"Password\"/>\n"
"    <h:inputSecret id=\"password\" value=\"#{credentials.password}\" redisplay=\"true\"/>\n"
"  </div>      \n"
"  \n"
"  <div class=\"loginRow\">\n"
"    <h:outputLabel for=\"rememberMe\" value=\"Remember me\"/>\n"
"    <h:selectBooleanCheckbox id=\"rememberMe\" value=\"#{rememberMe.enabled}\"/>\n"
"  </div>]]>"

#. Tag: title
#: Security.xml:302
#, no-c-format
msgid "Token-based Remember-me Authentication"
msgstr "トークンベースのremember me認証"

#. Tag: para
#: Security.xml:304
#, no-c-format
msgid "To use the automatic, token-based mode of the remember me feature, you must first configure a token store. The most common scenario is to store these authentication tokens within a database (which Seam supports), however it is possible to implement your own token store by implementing the <literal>org.jboss.seam.security.TokenStore</literal> interface. This section will assume you will be using the provided <literal>JpaTokenStore</literal> implementation to store authentication tokens inside a database table."
msgstr "トークンベースの自動認証機能の remember me を使用するためには、まずトークンの記憶場所を設定する必要があります。　Seamでもサポートしていますが、このトークンの記憶場所としてはデータベースが一般的です。　しかし、<literal>org.jboss.seam.security.TokenStore</literal> インターフェースを実装して独自の記憶場所を設定することも可能です。　この章では標準で提供されている<literal>JpaTokenStore</literal>実装を使用して認証トークンをデータベーステーブルに記憶させることを前提としています。"

#. Tag: para
#: Security.xml:312
#, no-c-format
msgid "The first step is to create a new Entity which will contain the tokens. The following example shows a possible structure that you may use:"
msgstr "まず最初に、トークンを保持する新たなエンティティを作ります。　以下に、一般的なエンティティの構造を示します。"

#. Tag: programlisting
#: Security.xml:317
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class AuthenticationToken implements Serializable {  \n"
"   private Integer tokenId;\n"
"   private String username;\n"
"   private String value;\n"
"   \n"
"   @Id @GeneratedValue\n"
"   public Integer getTokenId() {\n"
"      return tokenId;\n"
"   }\n"
"   \n"
"   public void setTokenId(Integer tokenId) {\n"
"      this.tokenId = tokenId;\n"
"   }\n"
"   \n"
"   @TokenUsername\n"
"   public String getUsername() {\n"
"      return username;\n"
"   }\n"
"   \n"
"   public void setUsername(String username) {\n"
"      this.username = username;\n"
"   }\n"
"   \n"
"   @TokenValue\n"
"   public String getValue() {\n"
"      return value;\n"
"   }\n"
"   \n"
"   public void setValue(String value) {\n"
"      this.value = value;\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class AuthenticationToken implements Serializable {  \n"
"   private Integer tokenId;\n"
"   private String username;\n"
"   private String value;\n"
"   \n"
"   @Id @GeneratedValue\n"
"   public Integer getTokenId() {\n"
"      return tokenId;\n"
"   }\n"
"   \n"
"   public void setTokenId(Integer tokenId) {\n"
"      this.tokenId = tokenId;\n"
"   }\n"
"   \n"
"   @TokenUsername\n"
"   public String getUsername() {\n"
"      return username;\n"
"   }\n"
"   \n"
"   public void setUsername(String username) {\n"
"      this.username = username;\n"
"   }\n"
"   \n"
"   @TokenValue\n"
"   public String getValue() {\n"
"      return value;\n"
"   }\n"
"   \n"
"   public void setValue(String value) {\n"
"      this.value = value;\n"
"   }\n"
"}]]>"

#. Tag: para
#: Security.xml:319
#, no-c-format
msgid "As you can see from this listing, a couple of special annotations, <literal>@TokenUsername</literal> and <literal>@TokenValue</literal> are used to configure the username and token properties of the entity. These annotations are required for the entity that will contain the authentication tokens."
msgstr "このコードから分かるように、エンティティのusernameとトークンのプロパティには<literal>@TokenUsername</literal> と<literal>@TokenValue</literal>という特別なアノテーションが使われており、これらは認証トークンを含むエンティティに必須です。"

#. Tag: para
#: Security.xml:325
#, no-c-format
msgid "The next step is to configure <literal>JpaTokenStore</literal> to use this entity bean to store and retrieve authentication tokens. This is done in <literal>components.xml</literal> by specifying the <literal>token-class</literal> attribute:"
msgstr "次に、このエンティティビーンに対して認証トークンの出し入れをする為に、 <literal>JpaTokenStore</literal>を設定します。　これは、 <literal>components.xml</literal> に<literal>token-class</literal>属性を指定することにより行います。"

#. Tag: programlisting
#: Security.xml:331
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <security:jpa-token-store token-class=\"org.jboss.seam.example.seamspace.AuthenticationToken\"/>        \n"
"        ]]>"
msgstr ""
"<![CDATA[\n"
"  <security:jpa-token-store token-class=\"org.jboss.seam.example.seamspace.AuthenticationToken\"/>        \n"
"        ]]>"

#. Tag: para
#: Security.xml:333
#, no-c-format
msgid "Once this is done, the last thing to do is to configure the <literal>RememberMe</literal> component in <literal>components.xml</literal> also. Its <literal>mode</literal> should be set to <literal>autoLogin</literal>:"
msgstr "ここまでが終了したら、最後は<literal>components.xml</literal> に<literal>RememberMe</literal>コンポーネントの設定をする事です。　<literal>mode</literal>は<literal>autoLogin</literal>に設定されていなければなりません。"

#. Tag: programlisting
#: Security.xml:338
#, no-c-format
msgid ""
"<![CDATA[  <security:remember-me mode=\"autoLogin\"/>        \n"
"        ]]>"
msgstr ""
"<![CDATA[  <security:remember-me mode=\"autoLogin\"/>        \n"
"        ]]>"

#. Tag: para
#: Security.xml:340
#, no-c-format
msgid "That is all that is required - automatic authentication will now occur for users revisiting your site (as long as they check the \"remember me\" checkbox)."
msgstr "これで、remember meをチェックしているユーザがサイトを再訪した時に、自動的に認証されるようになります。"

#. Tag: para
#: Security.xml:345
#, no-c-format
msgid "To ensure that users are automatically authenticated when returning to the site, the following section should be placed in components.xml:"
msgstr "ユーザがサイトを再訪した時に確実に自動的に認証される様にするために、<literal>components.xml</literal>に以下が含まれている必要があります。"

#. Tag: programlisting
#: Security.xml:350
#, no-c-format
msgid ""
"<![CDATA[  <event type=\"org.jboss.seam.security.notLoggedIn\">\n"
"    <action execute=\"#{redirect.captureCurrentView}\"/>\n"
"    <action execute=\"#{identity.tryLogin()}\"/>\n"
"  </event>\n"
"  <event type=\"org.jboss.seam.security.loginSuccessful\">\n"
"    <action execute=\"#{redirect.returnToCapturedView}\"/>\n"
"  </event>]]>"
msgstr ""
"<![CDATA[  <event type=\"org.jboss.seam.security.notLoggedIn\">\n"
"    <action execute=\"#{redirect.captureCurrentView}\"/>\n"
"    <action execute=\"#{identity.tryLogin()}\"/>\n"
"  </event>\n"
"  <event type=\"org.jboss.seam.security.loginSuccessful\">\n"
"    <action execute=\"#{redirect.returnToCapturedView}\"/>\n"
"  </event>]]>"

#. Tag: title
#: Security.xml:357
#, no-c-format
msgid "Handling Security Exceptions"
msgstr "セキュリティ例外の処理"

#. Tag: para
#: Security.xml:359
#, no-c-format
msgid "To prevent users from receiving the default error page in response to a security error, it's recommended that <literal>pages.xml</literal> is configured to redirect security errors to a more \"pretty\" page. The two main types of exceptions thrown by the security API are:"
msgstr "セキュリティエラーでユーザがデフォルトのエラーページを受け取らないようにするために、<literal>pages.xml</literal>にセキュリティエラーに対応した、もう少し見栄えのするページにリダイレクトするよう設定する事が推奨されます。　セキュリティAPIの発生させる例外には主として2つのタイプがあります。"

#. Tag: para
#: Security.xml:367
#, no-c-format
msgid "<literal>NotLoggedInException</literal> - This exception is thrown if the user attempts to access a restricted action or page when they are not logged in."
msgstr "<literal>NotLoggedInException</literal> - ユーザがログインすることなく、特定のページ閲覧、或は特定の操作を実行しようとしたときに投げられます。"

#. Tag: para
#: Security.xml:373
#, no-c-format
msgid "<literal>AuthorizationException</literal> - This exception is only thrown if the user is already logged in, and they have attempted to access a restricted action or page for which they do not have the necessary privileges."
msgstr "<literal>AuthorizationException</literal> - ユーザが既にログインしていて、当該ユーザが許可されていないページの閲覧、或は操作を行おうとしたときに投げられます。"

#. Tag: para
#: Security.xml:381
#, no-c-format
msgid "In the case of a <literal>NotLoggedInException</literal>, it is recommended that the user is redirected to either a login or registration page so that they can log in. For an <literal>AuthorizationException</literal>, it may be useful to redirect the user to an error page. Here's an example of a <literal>pages.xml</literal> file that redirects both of these security exceptions:"
msgstr "<literal>NotLoggedInException</literal>の場合、ユーザがログイン出来るよう、ユーザをログインページかユーザ登録ページへ誘導する事が推奨されます。　一方、<literal>AuthorizationException</literal>の場合にはユーザをエラーページに誘導した方が良いでしょう。　以下の例では、この２つのセキュリティ例外によるリダイレクトを処理している<literal>pages.xml</literal>を示しています。"

#. Tag: programlisting
#: Security.xml:388
#, no-c-format
msgid ""
"<![CDATA[<pages>\n"
"\n"
"    ...\n"
"\n"
"    <exception class=\"org.jboss.seam.security.NotLoggedInException\">\n"
"        <redirect view-id=\"/login.xhtml\">\n"
"            <message>You must be logged in to perform this action</message>\n"
"        </redirect>\n"
"    </exception>\n"
"\n"
"    <exception class=\"org.jboss.seam.security.AuthorizationException\">\n"
"        <end-conversation/>\n"
"        <redirect view-id=\"/security_error.xhtml\">\n"
"            <message>You do not have the necessary security privileges to perform this action.</message>\n"
"        </redirect>\n"
"    </exception>\n"
"\n"
"</pages>]]>"
msgstr ""
"<![CDATA[<pages>\n"
"\n"
"    ...\n"
"\n"
"    <exception class=\"org.jboss.seam.security.NotLoggedInException\">\n"
"        <redirect view-id=\"/login.xhtml\">\n"
"            <message>You must be logged in to perform this action</message>\n"
"        </redirect>\n"
"    </exception>\n"
"\n"
"    <exception class=\"org.jboss.seam.security.AuthorizationException\">\n"
"        <end-conversation/>\n"
"        <redirect view-id=\"/security_error.xhtml\">\n"
"            <message>You do not have the necessary security privileges to perform this action.</message>\n"
"        </redirect>\n"
"    </exception>\n"
"\n"
"</pages>]]>"

#. Tag: para
#: Security.xml:390
#, no-c-format
msgid "Most web applications require even more sophisticated handling of login redirection, so Seam includes some special functionality for handling this problem."
msgstr "ほとんどのwebアプリケーションでは、より洗練されたログインリダイレクトを必要としますが、Seamではこの様なケースに対応出来るような機能も持たせています。"

#. Tag: title
#: Security.xml:398
#, no-c-format
msgid "Login Redirection"
msgstr "ログインリダイレクト"

#. Tag: para
#: Security.xml:400
#, no-c-format
msgid "You can ask Seam to redirect the user to a login screen when an unauthenticated user tries to access a particular view (or wildcarded view id) as follows:"
msgstr "認証されていないユーザが特定のビュー（或はワイルドカードで指定された複数のビュー）の閲覧をしようとした時に、Seamがユーザをログイン画面にリダイレクトするようにするためには (<literal>pages.xml</literal>に) 下のように記述します。"

#. Tag: programlisting
#: Security.xml:405
#, no-c-format
msgid ""
"<![CDATA[<pages login-view-id=\"/login.xhtml\">\n"
"\n"
"    <page view-id=\"/members/*\" login-required=\"true\"/>\n"
"\n"
"    ...\n"
"\n"
"</pages>]]>"
msgstr ""
"<![CDATA[<pages login-view-id=\"/login.xhtml\">\n"
"\n"
"    <page view-id=\"/members/*\" login-required=\"true\"/>\n"
"\n"
"    ...\n"
"\n"
"</pages>]]>"

#. Tag: para
#: Security.xml:408
#, no-c-format
msgid "This is less of a blunt instrument than the exception handler shown above, but should probably be used in conjunction with it."
msgstr "これは、前項までの例外処理に比べて少々ぶっきらぼうさを抑えた処理ですが、例外処理によるリダイレクトと組み合わせて使用すると良いでしょう"

#. Tag: para
#: Security.xml:414
#, no-c-format
msgid "After the user logs in, we want to automatically send them back where they came from, so they can retry the action that required logging in. If you add the following event listeners to <literal>components.xml</literal>, attempts to access a restricted view while not logged in will be remembered, so that upon the user successfully logging in they will be redirected to the originally requested view, with any page parameters that existed in the original request."
msgstr "ユーザがログインした後で、再度ログインし直したい場合に自動的に最初のページ（ユーザが入ってきたページ）に戻したいような状況を考えてみましょう。 下の様にイベントリスナーを<literal>components.xml</literal>に記述すると、ログインせずに制限されたページの閲覧をした（閲覧に失敗した）ことを記憶させておいて、ユーザが再ログインして成功したときに、当初の要求時のページパラメータを基に当該ページにリダイレクトさせることができます。"

#. Tag: programlisting
#: Security.xml:423
#, no-c-format
msgid ""
"<![CDATA[<event type=\"org.jboss.seam.security.notLoggedIn\">\n"
"    <action execute=\"#{redirect.captureCurrentView}\"/>\n"
"</event>\n"
"\n"
"<event type=\"org.jboss.seam.security.postAuthenticate\">\n"
"    <action execute=\"#{redirect.returnToCapturedView}\"/>\n"
"</event>]]>"
msgstr ""
"<![CDATA[<event type=\"org.jboss.seam.security.notLoggedIn\">\n"
"    <action execute=\"#{redirect.captureCurrentView}\"/>\n"
"</event>\n"
"\n"
"<event type=\"org.jboss.seam.security.postAuthenticate\">\n"
"    <action execute=\"#{redirect.returnToCapturedView}\"/>\n"
"</event>]]>"

#. Tag: para
#: Security.xml:425
#, no-c-format
msgid "Note that login redirection is implemented as a conversation-scoped mechanism, so don't end the conversation in your <literal>authenticate()</literal> method."
msgstr "ログインリダイレクトはカンバセーションスコープで実装されていますので、<literal>authenticate()</literal>の中でカンバセーションを終了させてはいけません。"

#. Tag: title
#: Security.xml:433
#, no-c-format
msgid "HTTP Authentication"
msgstr "HTTP認証"

#. Tag: para
#: Security.xml:435
#, no-c-format
msgid "Although not recommended for use unless absolutely necessary, Seam provides means for authenticating using either HTTP Basic or HTTP Digest (RFC 2617) methods. To use either form of authentication, the <literal>authentication-filter</literal> component must be enabled in components.xml:"
msgstr "推奨されませんが、どうしても必要であれば、Seamは（RFC2617）のHTTPBasic或いはHTTPDigestメソッドを認証に使用する事が出来ます。　これらの認証フォームを使用する場合にはcomponents.xmlで <literal>authentication-filter</literal>が使用可能に設定されている必要があります。"

#. Tag: programlisting
#: Security.xml:441
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <web:authentication-filter url-pattern=\"*.seam\" auth-type=\"basic\"/>\n"
"      ]]>"
msgstr ""
"<![CDATA[\n"
"  <web:authentication-filter url-pattern=\"*.seam\" auth-type=\"basic\"/>\n"
"      ]]>"

#. Tag: para
#: Security.xml:443
#, no-c-format
msgid "To enable the filter for basic authentication, set <literal>auth-type</literal> to <literal>basic</literal>, or for digest authentication, set it to <literal>digest</literal>. If using digest authentication, the <literal>key</literal> and <literal>realm</literal> must also be set:"
msgstr "ベーシックな認証フィルタを使用する場合、<literal>auth-type</literal>に<literal>basic</literal>を設定し、ダイジェスト認証を使用する場合には、<literal>digest</literal>を設定します。　ダイジェスト認証を使用する場合には <literal>key</literal> と <literal>realm</literal>も設定する必生があります。"

#. Tag: programlisting
#: Security.xml:449
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <web:authentication-filter url-pattern=\"*.seam\" auth-type=\"digest\" key=\"AA3JK34aSDlkj\" realm=\"My App\"/>\n"
"      ]]>"
msgstr ""
"<![CDATA[\n"
"  <web:authentication-filter url-pattern=\"*.seam\" auth-type=\"digest\" key=\"AA3JK34aSDlkj\" realm=\"My App\"/>\n"
"      ]]>"

#. Tag: para
#: Security.xml:451
#, no-c-format
msgid "The <literal>key</literal> can be any String value. The <literal>realm</literal> is the name of the authentication realm that is presented to the user when they authenticate."
msgstr "<literal>key</literal>は任意の文字列です。　<literal>realm</literal>はユーザが認証される時にユーザに提供される認証領域です。"

#. Tag: title
#: Security.xml:457
#, no-c-format
msgid "Writing a Digest Authenticator"
msgstr "ダイジェスト認証の記述"

#. Tag: para
#: Security.xml:459
#, no-c-format
msgid "If using digest authentication, your authenticator class should extend the abstract class <literal>org.jboss.seam.security.digest.DigestAuthenticator</literal>, and use the <literal>validatePassword()</literal> method to validate the user's plain text password against the digest request. Here is an example:"
msgstr "ダイジェスト認証を使用する場合は<literal>org.jboss.seam.security.digest.DigestAuthenticator</literal>アブストラクトクラスを拡張して、<literal>validatePassword()</literal>メソッドによりユーザのプレーンテキストのパスワードとダイジェストリクエストを照合する必要があります。　以下、コード例"

#. Tag: programlisting
#: Security.xml:466
#, no-c-format
msgid ""
"<![CDATA[\n"
"   public boolean authenticate()\n"
"   {\n"
"      try\n"
"      {\n"
"         User user = (User) entityManager.createQuery(\n"
"            \"from User where username = :username\")\n"
"            .setParameter(\"username\", identity.getUsername())\n"
"            .getSingleResult();\n"
"\n"
"         return validatePassword(user.getPassword());\n"
"      }\n"
"      catch (NoResultException ex)\n"
"      {\n"
"         return false;\n"
"      }\n"
"   }\n"
"        ]]>"
msgstr ""
"<![CDATA[\n"
"   public boolean authenticate()\n"
"   {\n"
"      try\n"
"      {\n"
"         User user = (User) entityManager.createQuery(\n"
"            \"from User where username = :username\")\n"
"            .setParameter(\"username\", identity.getUsername())\n"
"            .getSingleResult();\n"
"\n"
"         return validatePassword(user.getPassword());\n"
"      }\n"
"      catch (NoResultException ex)\n"
"      {\n"
"         return false;\n"
"      }\n"
"   }\n"
"        ]]>"

#. Tag: title
#: Security.xml:472
#, no-c-format
msgid "Advanced Authentication Features"
msgstr "高度な認証機能"

#. Tag: para
#: Security.xml:474
#, no-c-format
msgid "This section explores some of the advanced features provided by the security API for addressing more complex security requirements."
msgstr "ここでは、より高度なセキュリティ要求に答えられる、セキュリティAPIで提供されている更に高度な機能について紹介します。"

#. Tag: title
#: Security.xml:480
#, no-c-format
msgid "Using your container's JAAS configuration"
msgstr "使用しているコンテナのJAASの設定"

#. Tag: para
#: Security.xml:482
#, no-c-format
msgid "If you would rather not use the simplified JAAS configuration provided by the Seam Security API, you may instead delegate to the default system JAAS configuration by providing a <literal>jaas-config-name</literal> property in <literal>components.xml</literal>. For example, if you are using JBoss AS and wish to use the <literal>other</literal> policy (which uses the <literal>UsersRolesLoginModule</literal> login module provided by JBoss AS), then the entry in <literal>components.xml</literal> would look like this:"
msgstr "もしSeamのセキュリティAPIが提供する簡素化されたJAAS設定を使用したくなければ、<literal>components.xml</literal>に<literal>jaas-config-name</literal> プロパティを設定する事によりシステムのデフォルトのJAAS設定にすることが出来ます。　例として、JBossASをアプリケーションサーバとして使用していて <literal>other</literal>ポリシー（JBossASの提供する <literal>UsersRolesLoginModule</literal>ログインモジュールを使用する）を使用したい場合には、<literal>components.xml</literal>に以下のような記述をします。"

#. Tag: programlisting
#: Security.xml:490
#, no-c-format
msgid "<![CDATA[<security:identity jaas-config-name=\"other\"/>]]>"
msgstr "<![CDATA[<security:identity jaas-config-name=\"other\"/>]]>"

#. Tag: para
#: Security.xml:492
#, no-c-format
msgid "Please keep in mind that doing this does not mean that your user will be authenticated in whichever container your Seam application is deployed in. It merely instructs Seam Security to authenticate itself using the configured JAAS security policy."
msgstr "これは単にSeamのセキュリティに対して設定されたJAASセキュリティポリシーに基づいて認証を行うように指示をしているだけで、Seamアプリケーションが配置されているどのコンテナに対してもユーザの認証がなされたわけではない事に留意してください。　"

#. Tag: title
#: Security.xml:502
#, no-c-format
msgid "Identity Management"
msgstr "IDの管理"

#. Tag: para
#: Security.xml:504
#, no-c-format
msgid "Identity Management provides a standard API for the management of a Seam application's users and roles, regardless of which identity store (database, LDAP, etc) is used on the backend. At the center of the Identity Management API is the <literal>identityManager</literal> component, which provides all the methods for creating, modifying and deleting users, granting and revoking roles, changing passwords, enabling and disabling user accounts, authenticating users and listing users and roles."
msgstr "ID管理は、バックエンドのIDストアの種類（データベース、LDAP等）に依存しない、Seamのユーザとロールの管理の為の標準APIを提供します。　ID管理APIの中心は<literal>identityManager</literal>コンポーネントで、新規ユーザの作成、変更、削除、ロールの追加、無効化、パスワードの変更、ユーザアカウントの有効化、無効化、ユーザの認証、ユーザとロールの一覧等の機能の為のメソッドを提供します。"

#. Tag: para
#: Security.xml:512
#, no-c-format
msgid "Before it may be used, the <literal>identityManager</literal> must first be configured with one or more <literal>IdentityStore</literal>s. These components do the actual work of interacting with the backend security provider, whether it be a database, LDAP server, or something else."
msgstr "使用する前に<literal>identityManager</literal>に一つ以上の<literal>IdentityStore</literal>sを設定する必要があります。　これらのコンポーネントが実際にバックにあるデータベース、LDAP、その他のセキュリティプロバイダーと協調して仕事をします。"

#. Tag: title
#: Security.xml:528
#, no-c-format
msgid "Configuring IdentityManager"
msgstr "IDマネージャの設定"

#. Tag: para
#: Security.xml:530
#, no-c-format
msgid "The <literal>identityManager</literal> component allows for separate identity stores to be configured for authentication and authorization operations. This means that it is possible for users to be authenticated against one identity store, for example an LDAP directory, yet have their roles loaded from another identity store, such as a relational database."
msgstr "<literal>identityManager</literal> コンポーネントに認証と許可について別々のIDストアを設定する事が可能で、例えば、LDAPディレクトリを使用してユーザの認証をし、RDBからこのユーザのロール情報を得て使用する事が出来ます。"

#. Tag: para
#: Security.xml:537
#, no-c-format
msgid "Seam provides two <literal>IdentityStore</literal> implementations out of the box; <literal>JpaIdentityStore</literal> uses a relational database to store user and role information, and is the default identity store that is used if nothing is explicitly configured in the <literal>identityManager</literal> component. The other implementation that is provided is <literal>LdapIdentityStore</literal>, which uses an LDAP directory to store users and roles."
msgstr "Seamは<literal>IdentityStore</literal>として2つの<literal>IdentityStore</literal>の実装を提供しています。　ひとつはRDBを使用してユーザとロールの情報を保持する<literal>JpaIdentityStore</literal>で、デフォルトのIDストアとして設定されており、<literal>identityManager</literal> コンポーネントの設定をすることなく使用する事が出来ます。　もう一つは<literal>LdapIdentityStore</literal>で、LDAPディレクトリを使用してユーザとロールを保持します。"

#. Tag: para
#: Security.xml:545
#, no-c-format
msgid "There are two configurable properties for the <literal>identityManager</literal> component - <literal>identityStore</literal> and <literal>roleIdentityStore</literal>. The value for these properties must be an EL expression referring to a Seam component implementing the <literal>IdentityStore</literal> interface. As already mentioned, if left unconfigured then <literal>JpaIdentityStore</literal> will be assumed by default. If only the <literal>identityStore</literal> property is configured, then the same value will be used for <literal>roleIdentityStore</literal> also. For example, the following entry in <literal>components.xml</literal> will configure <literal>identityManager</literal> to use an <literal>LdapIdentityStore</literal> for both user-related and role-related operations:"
msgstr " <literal>identityManager</literal> コンポーネントには<literal>identityStore</literal> と <literal>roleIdentityStore</literal>の2つの設定可能なプロパティがあります。これらの値は、<literal>IdentityStore</literal>インターフェースを実装したSeamコンポーネントを参照するEL式である必要があります。　既に言及したように、設定がされていない場合にはデフォルトの <literal>JpaIdentityStore</literal>が使用され、また、<literal>identityStore</literal>のみが設定された場合には<literal>roleIdentityStore</literal> に同じ値が設定されたものとして処理されます。　例えば、<literal>components.xml</literal>で<literal>LdapIdentityStore</literal>を<literal>identityManager</literal>に使用するように設定した場合には、ユーザに関するものと、ロールに関するものの両方に<literal>identityManager</literal>が使用されます。"

#. Tag: programlisting
#: Security.xml:557
#, no-c-format
msgid ""
"<![CDATA[      \n"
"  <security:identity-manager identity-store=\"#{ldapIdentityStore}\"/>\n"
"      ]]>"
msgstr ""
"<![CDATA[      \n"
"  <security:identity-manager identity-store=\"#{ldapIdentityStore}\"/>\n"
"      ]]>"

#. Tag: para
#: Security.xml:559
#, no-c-format
msgid "The following example configures <literal>identityManager</literal> to use an <literal>LdapIdentityStore</literal> for user-related operations, and <literal>JpaIdentityStore</literal> for role-related operations:"
msgstr "下記の例ではユーザに関しては<literal>LdapIdentityStore</literal>を、またロールに関する処理には<literal>JpaIdentityStore</literal>を使用するよう<literal>identityManager</literal> を設定しています。"

#. Tag: programlisting
#: Security.xml:564
#, no-c-format
msgid ""
"<![CDATA[      \n"
"  <security:identity-manager \n"
"    identity-store=\"#{ldapIdentityStore}\" \n"
"    role-identity-store=\"#{jpaIdentityStore}\"/>\n"
"      ]]>"
msgstr ""
"<![CDATA[      \n"
"  <security:identity-manager \n"
"    identity-store=\"#{ldapIdentityStore}\" \n"
"    role-identity-store=\"#{jpaIdentityStore}\"/>\n"
"      ]]>"

#. Tag: para
#: Security.xml:566
#, no-c-format
msgid "The following sections explain both of these identity store implementations in greater detail."
msgstr "以下の章ではこれらのIDストアのインプリメンテーションの詳細について説明します"

#. Tag: title
#: Security.xml:573
#, no-c-format
msgid "JpaIdentityStore"
msgstr "JpaIdentityStore"

#. Tag: para
#: Security.xml:575
#, no-c-format
msgid "This identity store allows for users and roles to be stored inside a relational database. It is designed to be as unrestrictive as possible in regards to database schema design, allowing a great deal of flexibility in the underlying table structure. This is achieved through the use of a set of special annotations, allowing entity beans to be configured to store user and role records."
msgstr "このIDストアはユーザ及びロールをリレーショナルデータベースに保存する事を可能としています。　また、データベースのスキーマ設計には出来る限り制約を作らないように設計されており、使用するテーブルの構造に大幅な自由度を認めています。　これはユーザ及びロールのレコード用のエンティティビーンに特別のアノテーションを使用する事により実現しています。"

#. Tag: title
#: Security.xml:583
#, no-c-format
msgid "Configuring JpaIdentityStore"
msgstr "JpaIdentityStoreの設定"

#. Tag: para
#: Security.xml:585
#, no-c-format
msgid "<literal>JpaIdentityStore</literal> requires that both the <literal>user-class</literal> and <literal>role-class</literal> properties are configured. These properties should refer to the entity classes that are to be used to store both user and role records, respectively. The following example shows the configuration from <literal>components.xml</literal> in the SeamSpace example:"
msgstr "<literal>JpaIdentityStore</literal> は <literal>user-class</literal> 属性と<literal>role-class</literal>属性を設定する必要があります。　これらの属性は、それぞれユーザとロールのレコードを保存するエンティティクラスを参照している必要があります。　下の例では、サンプルソースのSeamSpaceの<literal>components.xml</literal>の該当部分を示しています。 "

#. Tag: programlisting
#: Security.xml:592
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <security:jpa-identity-store \n"
"    user-class=\"org.jboss.seam.example.seamspace.MemberAccount\"\n"
"    role-class=\"org.jboss.seam.example.seamspace.MemberRole\"/>\n"
"        ]]>"
msgstr ""
"<![CDATA[\n"
"  <security:jpa-identity-store \n"
"    user-class=\"org.jboss.seam.example.seamspace.MemberAccount\"\n"
"    role-class=\"org.jboss.seam.example.seamspace.MemberRole\"/>\n"
"        ]]>"

#. Tag: title
#: Security.xml:597
#, no-c-format
msgid "Configuring the Entities"
msgstr "エンティティの設定"

#. Tag: para
#: Security.xml:599
#, no-c-format
msgid "As already mentioned, a set of special annotations are used to configure entity beans for storing users and roles. The following table lists each of the annotations, and their descriptions."
msgstr "先に述べたように、特定のアノテーションを使用してユーザとロールを保持するエンティティビーンを設定します。　下の表に、これらのアノテーションとその詳細な説明について示します。"

#. Tag: title
#: Security.xml:605
#, no-c-format
msgid "User Entity Annotations"
msgstr "ユーザエンティティアノテーション"

#. Tag: para
#: Security.xml:615
#: Security.xml:749
#: Security.xml:3346
#: Security.xml:3509
#, no-c-format
msgid "Annotation"
msgstr "アノテーション"

#. Tag: para
#: Security.xml:618
#: Security.xml:752
#, no-c-format
msgid "Status"
msgstr "状態"

#. Tag: para
#: Security.xml:621
#: Security.xml:755
#: Security.xml:951
#: Security.xml:1403
#: Security.xml:2132
#: Security.xml:2741
#: Security.xml:3135
#: Security.xml:3352
#: Security.xml:3515
#: Security.xml:3756
#: Security.xml:4193
#, no-c-format
msgid "Description"
msgstr "詳細"

#. Tag: literal
#: Security.xml:630
#, no-c-format
msgid "@UserPrincipal"
msgstr "@UserPrincipal"

#. Tag: para
#: Security.xml:634
#: Security.xml:650
#: Security.xml:725
#: Security.xml:768
#, no-c-format
msgid "Required"
msgstr "要求条件"

#. Tag: para
#: Security.xml:637
#, no-c-format
msgid "This annotation marks the field or method containing the user's username."
msgstr "このアノテーションでユーザのusernameを保持しているフィールド或いはメソッドをマークします。"

#. Tag: literal
#: Security.xml:646
#, no-c-format
msgid "@UserPassword"
msgstr "@UserPassword"

#. Tag: para
#: Security.xml:653
#, no-c-format
msgid "This annotation marks the field or method containing the user's password. It allows a <literal>hash</literal> algorithm to be specified for password hashing. Possible values for <literal>hash</literal> are <literal>md5</literal>, <literal>sha</literal> and <literal>none</literal>. E.g:"
msgstr "このアノテーションは、アノテートされたフィールド或いはメソッドにユーザのpasswordがある事を示しています。　passwordのハッシュアルゴリズムを<literal>hash</literal>で指定することが可能で、指定できる値には<literal>md5</literal>, <literal>sha</literal> と <literal>none</literal>があります。"

#. Tag: programlisting
#: Security.xml:659
#, no-c-format
msgid ""
"<![CDATA[@UserPassword(hash = \"md5\")\n"
"public String getPasswordHash() { \n"
"  return passwordHash; \n"
"}]]>"
msgstr ""
"<![CDATA[@UserPassword(hash = \"md5\")\n"
"public String getPasswordHash() { \n"
"  return passwordHash; \n"
"}]]>"

#. Tag: para
#: Security.xml:661
#, no-c-format
msgid "If an application requires a hash algorithm that isn't supported natively by Seam, it is possible to extend the <literal>PasswordHash</literal> component to implement other hashing algorithms."
msgstr "Seamが標準でサポートしていないハッシュアルゴリズムを使用する場合には、<literal>PasswordHash</literal>を拡張して必要なハッシュアルゴリズムを実装してください。"

#. Tag: literal
#: Security.xml:672
#, no-c-format
msgid "@UserFirstName"
msgstr "@UserFirstName"

#. Tag: para
#: Security.xml:676
#: Security.xml:692
#: Security.xml:708
#: Security.xml:784
#: Security.xml:800
#, no-c-format
msgid "Optional"
msgstr "オプション"

#. Tag: para
#: Security.xml:679
#, no-c-format
msgid "This annotation marks the field or method containing the user's first name."
msgstr "ユーザのファーストネームを保持しているフィールド或いはメソッドをマークします。"

#. Tag: literal
#: Security.xml:688
#, no-c-format
msgid "@UserLastName"
msgstr "@UserLastName"

#. Tag: para
#: Security.xml:695
#, no-c-format
msgid "This annotation marks the field or method containing the user's last name."
msgstr "ユーザのラストネームを保持しているフィールド或いはメソッドをマークします。"

#. Tag: literal
#: Security.xml:704
#, no-c-format
msgid "@UserEnabled"
msgstr "@UserEnabled"

#. Tag: para
#: Security.xml:711
#, no-c-format
msgid "This annotation marks the field or method containing the enabled status of the user. This should be a boolean property, and if not present then all user accounts are assumed to be enabled."
msgstr "このアノテーションは、アノテートされたフィールド或いはメソッドがユーザが不活化されているか否かを示していることを示しています。　ここでアノテートされるフィールド或いはメソッドの属性はbooleanでなければなりません。　また、もしこのアノテーションが無ければ、全てのユーザが不活化されていないことになります。"

#. Tag: literal
#: Security.xml:721
#, no-c-format
msgid "@UserRoles"
msgstr "@UserRoles"

#. Tag: para
#: Security.xml:728
#, no-c-format
msgid "This annotation marks the field or method containing the roles of the user. This property will be described in more detail further down."
msgstr "このアノテーションは、アノテートされたフィールド或いはメソッドにユーザのロールがある事を示しています。　この属性については、以下により詳細に記述します。"

#. Tag: title
#: Security.xml:739
#, no-c-format
msgid "Role Entity Annotations"
msgstr "エンティティのロールのアノテーション"

#. Tag: literal
#: Security.xml:764
#, no-c-format
msgid "@RoleName"
msgstr "@RoleName"

#. Tag: para
#: Security.xml:771
#, no-c-format
msgid "This annotation marks the field or method containing the name of the role."
msgstr "ユーザのロール名を保持しているフィールド或いはメソッドをマークします。"

#. Tag: literal
#: Security.xml:780
#, no-c-format
msgid "@RoleGroups"
msgstr "@RoleGroups"

#. Tag: para
#: Security.xml:787
#, no-c-format
msgid "This annotation marks the field or method containing the group memberships of the role."
msgstr "ロールのグループメンバーを保持しているフィールド或いはメソッドをマークします。"

#. Tag: literal
#: Security.xml:796
#, no-c-format
msgid "@RoleConditional"
msgstr "@RoleConditional"

#. Tag: para
#: Security.xml:803
#, no-c-format
msgid "This annotation marks the field or method indicating whether the role is conditional or not. Conditional roles are explained later in this chapter."
msgstr "ロールが条件付きか否かを示すフィールド或いはメソッドをマークします。"

#. Tag: title
#: Security.xml:817
#, no-c-format
msgid "Entity Bean Examples"
msgstr "エンティティ Beanの例"

#. Tag: para
#: Security.xml:819
#, no-c-format
msgid "As mentioned previously, <literal>JpaIdentityStore</literal> is designed to be as flexible as possible when it comes to the database schema design of your user and role tables. This section looks at a number of possible database schemas that can be used to store user and role records."
msgstr "既に示したように<literal>JpaIdentityStore</literal>はデータベースのユーザとロールに関するテーブルのスキーマのデザインが出来るだけ自由にできるように設計されています。　ここでは、ユーザとロールを保持する幾つかのデータベースのスキーマについてみてゆきます。"

#. Tag: title
#: Security.xml:826
#, no-c-format
msgid "Minimal schema example"
msgstr "最小のスキーマの例"

#. Tag: para
#: Security.xml:828
#, no-c-format
msgid "In this bare minimal example, a simple user and role table are linked via a many-to-many relationship using a cross-reference table named <literal>UserRoles</literal>."
msgstr "この単純な例では、クロス参照テーブル<literal>UserRoles</literal>を介してmany-to-many関連でリンクされているuserとroleのテーブルで構成されています。"

#. Tag: programlisting
#: Security.xml:842
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class User {\n"
"  private Integer userId;\n"
"  private String username;\n"
"  private String passwordHash;\n"
"  private Set<Role> roles;\n"
"  \n"
"  @Id @GeneratedValue\n"
"  public Integer getUserId() { return userId; }\n"
"  public void setUserId(Integer userId) { this.userId = userId; }\n"
"  \n"
"  @UserPrincipal\n"
"  public String getUsername() { return username; }\n"
"  public void setUsername(String username) { this.username = username; }\n"
"  \n"
"  @UserPassword(hash = \"md5\")\n"
"  public String getPasswordHash() { return passwordHash; }\n"
"  public void setPasswordHash(String passwordHash) { this.passwordHash = passwordHash; }\n"
"  \n"
"  @UserRoles\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"UserRoles\", \n"
"    joinColumns = @JoinColumn(name = \"UserId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"RoleId\"))\n"
"  public Set<Role> getRoles() { return roles; }\n"
"  public void setRoles(Set<Role> roles) { this.roles = roles; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class User {\n"
"  private Integer userId;\n"
"  private String username;\n"
"  private String passwordHash;\n"
"  private Set<Role> roles;\n"
"  \n"
"  @Id @GeneratedValue\n"
"  public Integer getUserId() { return userId; }\n"
"  public void setUserId(Integer userId) { this.userId = userId; }\n"
"  \n"
"  @UserPrincipal\n"
"  public String getUsername() { return username; }\n"
"  public void setUsername(String username) { this.username = username; }\n"
"  \n"
"  @UserPassword(hash = \"md5\")\n"
"  public String getPasswordHash() { return passwordHash; }\n"
"  public void setPasswordHash(String passwordHash) { this.passwordHash = passwordHash; }\n"
"  \n"
"  @UserRoles\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"UserRoles\", \n"
"    joinColumns = @JoinColumn(name = \"UserId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"RoleId\"))\n"
"  public Set<Role> getRoles() { return roles; }\n"
"  public void setRoles(Set<Role> roles) { this.roles = roles; }\n"
"}]]>"

#. Tag: programlisting
#: Security.xml:843
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class Role {\n"
"  private Integer roleId;\n"
"  private String rolename;\n"
"  \n"
"  @Id @Generated\n"
"  public Integer getRoleId() { return roleId; }\n"
"  public void setRoleId(Integer roleId) { this.roleId = roleId; }\n"
"  \n"
"  @RoleName\n"
"  public String getRolename() { return rolename; }\n"
"  public void setRolename(String rolename) { this.rolename = rolename; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class Role {\n"
"  private Integer roleId;\n"
"  private String rolename;\n"
"  \n"
"  @Id @Generated\n"
"  public Integer getRoleId() { return roleId; }\n"
"  public void setRoleId(Integer roleId) { this.roleId = roleId; }\n"
"  \n"
"  @RoleName\n"
"  public String getRolename() { return rolename; }\n"
"  public void setRolename(String rolename) { this.rolename = rolename; }\n"
"}]]>"

#. Tag: title
#: Security.xml:848
#, no-c-format
msgid "Complex Schema Example"
msgstr "複雑なスキーマの例"

#. Tag: para
#: Security.xml:850
#, no-c-format
msgid "This example builds on the above minimal example by including all of the optional fields, and allowing group memberships for roles."
msgstr "この例では、前の最少機能の例に全てのオプションフィールドと、ロールにグループメンバーを許可する機能を追加しています。"

#. Tag: programlisting
#: Security.xml:864
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class User {\n"
"  private Integer userId;\n"
"  private String username;\n"
"  private String passwordHash;\n"
"  private Set<Role> roles;\n"
"  private String firstname;\n"
"  private String lastname;\n"
"  private boolean enabled;\n"
"  \n"
"  @Id @GeneratedValue\n"
"  public Integer getUserId() { return userId; }\n"
"  public void setUserId(Integer userId) { this.userId = userId; }\n"
"  \n"
"  @UserPrincipal\n"
"  public String getUsername() { return username; }\n"
"  public void setUsername(String username) { this.username = username; }\n"
"  \n"
"  @UserPassword(hash = \"md5\")\n"
"  public String getPasswordHash() { return passwordHash; }\n"
"  public void setPasswordHash(String passwordHash) { this.passwordHash = passwordHash; }\n"
"  \n"
"  @UserFirstName\n"
"  public String getFirstname() { return firstname; }\n"
"  public void setFirstname(String firstname) { this.firstname = firstname; }\n"
"  \n"
"  @UserLastName\n"
"  public String getLastname() { return lastname; }\n"
"  public void setLastname(String lastname) { this.lastname = lastname; }\n"
"  \n"
"  @UserEnabled\n"
"  public boolean isEnabled() { return enabled; }\n"
"  public void setEnabled(boolean enabled) { this.enabled = enabled; }\n"
"  \n"
"  @UserRoles\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"UserRoles\", \n"
"    joinColumns = @JoinColumn(name = \"UserId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"RoleId\"))\n"
"  public Set<Role> getRoles() { return roles; }\n"
"  public void setRoles(Set<Role> roles) { this.roles = roles; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class User {\n"
"  private Integer userId;\n"
"  private String username;\n"
"  private String passwordHash;\n"
"  private Set<Role> roles;\n"
"  private String firstname;\n"
"  private String lastname;\n"
"  private boolean enabled;\n"
"  \n"
"  @Id @GeneratedValue\n"
"  public Integer getUserId() { return userId; }\n"
"  public void setUserId(Integer userId) { this.userId = userId; }\n"
"  \n"
"  @UserPrincipal\n"
"  public String getUsername() { return username; }\n"
"  public void setUsername(String username) { this.username = username; }\n"
"  \n"
"  @UserPassword(hash = \"md5\")\n"
"  public String getPasswordHash() { return passwordHash; }\n"
"  public void setPasswordHash(String passwordHash) { this.passwordHash = passwordHash; }\n"
"  \n"
"  @UserFirstName\n"
"  public String getFirstname() { return firstname; }\n"
"  public void setFirstname(String firstname) { this.firstname = firstname; }\n"
"  \n"
"  @UserLastName\n"
"  public String getLastname() { return lastname; }\n"
"  public void setLastname(String lastname) { this.lastname = lastname; }\n"
"  \n"
"  @UserEnabled\n"
"  public boolean isEnabled() { return enabled; }\n"
"  public void setEnabled(boolean enabled) { this.enabled = enabled; }\n"
"  \n"
"  @UserRoles\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"UserRoles\", \n"
"    joinColumns = @JoinColumn(name = \"UserId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"RoleId\"))\n"
"  public Set<Role> getRoles() { return roles; }\n"
"  public void setRoles(Set<Role> roles) { this.roles = roles; }\n"
"}]]>"

#. Tag: programlisting
#: Security.xml:865
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class Role {\n"
"  private Integer roleId;\n"
"  private String rolename;\n"
"  private boolean conditional;\n"
"  \n"
"  @Id @Generated\n"
"  public Integer getRoleId() { return roleId; }\n"
"  public void setRoleId(Integer roleId) { this.roleId = roleId; }\n"
"  \n"
"  @RoleName\n"
"  public String getRolename() { return rolename; }\n"
"  public void setRolename(String rolename) { this.rolename = rolename; }\n"
"  \n"
"  @RoleConditional\n"
"  public boolean isConditional() { return conditional; }\n"
"  public void setConditional(boolean conditional) { this.conditional = conditional; }\n"
"  \n"
"  @RoleGroups\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"RoleGroups\", \n"
"    joinColumns = @JoinColumn(name = \"RoleId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"GroupId\"))\n"
"  public Set<Role> getGroups() { return groups; }\n"
"  public void setGroups(Set<Role> groups) { this.groups = groups; }  \n"
"  \n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class Role {\n"
"  private Integer roleId;\n"
"  private String rolename;\n"
"  private boolean conditional;\n"
"  \n"
"  @Id @Generated\n"
"  public Integer getRoleId() { return roleId; }\n"
"  public void setRoleId(Integer roleId) { this.roleId = roleId; }\n"
"  \n"
"  @RoleName\n"
"  public String getRolename() { return rolename; }\n"
"  public void setRolename(String rolename) { this.rolename = rolename; }\n"
"  \n"
"  @RoleConditional\n"
"  public boolean isConditional() { return conditional; }\n"
"  public void setConditional(boolean conditional) { this.conditional = conditional; }\n"
"  \n"
"  @RoleGroups\n"
"  @ManyToMany(targetEntity = Role.class)\n"
"  @JoinTable(name = \"RoleGroups\", \n"
"    joinColumns = @JoinColumn(name = \"RoleId\"),\n"
"    inverseJoinColumns = @JoinColumn(name = \"GroupId\"))\n"
"  public Set<Role> getGroups() { return groups; }\n"
"  public void setGroups(Set<Role> groups) { this.groups = groups; }  \n"
"  \n"
"}]]>"

#. Tag: title
#: Security.xml:871
#, no-c-format
msgid "JpaIdentityStore Events"
msgstr "JpaIdentityStore関連のイベント"

#. Tag: para
#: Security.xml:873
#, no-c-format
msgid "When using <literal>JpaIdentityStore</literal> as the identity store implementation with <literal>IdentityManager</literal>, a few events are raised as a result of invoking certain <literal>IdentityManager</literal> methods."
msgstr "<literal>IdentityManager</literal>のIDストアの実装として<literal>JpaIdentityStore</literal>を使用する場合、特定の <literal>IdentityManager</literal>メソッドを起動するとイベントが発生します。 "

#. Tag: title
#: Security.xml:879
#, no-c-format
msgid "JpaIdentityStore.EVENT_PRE_PERSIST_USER"
msgstr "JpaIdentityStore.EVENT_PRE_PERSIST_USER"

#. Tag: para
#: Security.xml:881
#, no-c-format
msgid "This event is raised in response to calling <literal>IdentityManager.createUser()</literal>. Just before the user entity is persisted to the database, this event will be raised passing the entity instance as an event parameter. The entity will be an instance of the <literal>user-class</literal> configured for <literal>JpaIdentityStore</literal>."
msgstr "このイベントは<literal>IdentityManager.createUser()</literal>を呼ぶと発生します。　ユーザエンティティがデータベースに保持される直前にエンティティインスタンスをイベントパラメータとしたイベントが発生します。　このエンティティは<literal>JpaIdentityStore</literal>に設定した <literal>user-class</literal>のインスタンスです。"

#. Tag: para
#: Security.xml:887
#, no-c-format
msgid "Writing an observer for this event may be useful for setting additional field values on the entity, which aren't set as part of the standard <literal>createUser()</literal> functionality."
msgstr "エンティティに標準の<literal>createUser()</literal>で設定されない追加的なフィールド値を設定する為にこのイベントに対応するオブザーバを利用する事が出来ます。"

#. Tag: title
#: Security.xml:894
#, no-c-format
msgid "JpaIdentityStore.EVENT_USER_CREATED"
msgstr "JpaIdentityStore.EVENT_USER_CREATED"

#. Tag: para
#: Security.xml:896
#, no-c-format
msgid "This event is also raised in response to calling <literal>IdentityManager.createUser()</literal>. However, it is raised after the user entity has already been persisted to the database. Like the <literal>EVENT_PRE_PERSIST_USER</literal> event, it also passes the entity instance as an event parameter. It may be useful to observe this event if you also need to persist other entities that reference the user entity, for example contact detail records or other user-specific data."
msgstr "このイベントは<literal>IdentityManager.createUser()</literal>を呼ぶことによっても発生します。　しかし、このイベントはユーザエンティティの内容がデータベースに保持された後に発生します。　このイベントも<literal>EVENT_PRE_PERSIST_USER</literal>と同様、イベントパラメータとしてエンティティのインスタンスを渡します。　ユーザエンティティを参照する、コンタクトの詳細や当該ユーザ特有のデータのエンティティをデータベースに保存する必要がある場合には、このイベントを観察しておくのが有効です。"

#. Tag: title
#: Security.xml:906
#, no-c-format
msgid "JpaIdentityStore.EVENT_USER_AUTHENTICATED"
msgstr "JpaIdentityStore.EVENT_USER_AUTHENTICATED"

#. Tag: para
#: Security.xml:908
#, no-c-format
msgid "This event is raised when calling <literal>IdentityManager.authenticate()</literal>. It passes the user entity instance as the event parameter, and is useful for reading additional properties from the user entity that is being authenticated."
msgstr "このイベントは<literal>IdentityManager.authenticate()</literal>を呼んだ時に発生します。　このイベントはエンティティインスタンスをイベントパラメータとして渡しますので、認証されたユーザのその他の属性を読みだす時に有効に使用できます。"

#. Tag: title
#: Security.xml:918
#, no-c-format
msgid "LdapIdentityStore"
msgstr "LdapIdentityStore"

#. Tag: para
#: Security.xml:920
#, no-c-format
msgid "This identity store implementation is designed for working with user records stored in an LDAP directory. It is very highly configurable, allowing great flexibility in how both users and roles are stored in the directory. The following sections describe the configuration options for this identity store, and provide some configuration examples."
msgstr "このIDストアの実装はLDAPディレクトリをユーザレコードとして使用するよう設計されています。　この実装は、ユーザとロールのディレクトリへの保存の方法の設定の自由度が高くなっています。　以下のセクションでは、このIIDストアの設定オプションについて説明し、幾つかのサンプル設定を示します。"

#. Tag: title
#: Security.xml:927
#, no-c-format
msgid "Configuring LdapIdentityStore"
msgstr "LdapIdentiyStoreの設定"

#. Tag: para
#: Security.xml:929
#, no-c-format
msgid "The following table describes the available properties that can be configured in <literal>components.xml</literal> for <literal>LdapIdentityStore</literal>."
msgstr "以下の表に<literal>components.xml</literal> で設定できる<literal>LdapIdentityStore</literal>の属性について示します。"

#. Tag: title
#: Security.xml:935
#, no-c-format
msgid "LdapIdentityStore Configuration Properties"
msgstr "LdapIdentityStore設定可能属性"

#. Tag: para
#: Security.xml:945
#, no-c-format
msgid "Property"
msgstr "プロパティ"

#. Tag: para
#: Security.xml:948
#, no-c-format
msgid "Default Value"
msgstr "デフォルト値"

#. Tag: literal
#: Security.xml:960
#, no-c-format
msgid "server-address"
msgstr "サーバーアドレス"

#. Tag: literal
#: Security.xml:964
#, no-c-format
msgid "localhost"
msgstr "ローカルホスト"

#. Tag: para
#: Security.xml:967
#, no-c-format
msgid "The address of the LDAP server."
msgstr "LDAPサーバのアドレス"

#. Tag: literal
#: Security.xml:976
#, no-c-format
msgid "server-port"
msgstr "サーバポート"

#. Tag: literal
#: Security.xml:980
#, no-c-format
msgid "<literal>389</literal>"
msgstr "<literal>389</literal>"

#. Tag: para
#: Security.xml:983
#, no-c-format
msgid "The port number that the LDAP server is listening on."
msgstr "LDAPサーバが使用しているポートの番号"

#. Tag: literal
#: Security.xml:992
#, no-c-format
msgid "user-context-DN"
msgstr "user-context-DN"

#. Tag: literal
#: Security.xml:996
#, no-c-format
msgid "ou=Person,dc=acme,dc=com"
msgstr "ou=Person,dc=acme,dc=com"

#. Tag: para
#: Security.xml:999
#, no-c-format
msgid "The Distinguished Name (DN) of the context containing user records."
msgstr "ユーザレコードを含むコンテキストの識別名（DN)"

#. Tag: literal
#: Security.xml:1008
#, no-c-format
msgid "user-DN-prefix"
msgstr "user-DN-prefix"

#. Tag: literal
#: Security.xml:1012
#, no-c-format
msgid "uid="
msgstr "uid="

#. Tag: para
#: Security.xml:1015
#, no-c-format
msgid "This value is prefixed to the front of the username to locate the user's record."
msgstr "この値がユーザレコードの位置指定する為にusernameの前に前置されます。"

#. Tag: literal
#: Security.xml:1024
#, no-c-format
msgid "user-DN-suffix"
msgstr "user-DN-suffix"

#. Tag: literal
#: Security.xml:1028
#, no-c-format
msgid ",ou=Person,dc=acme,dc=com"
msgstr ",ou=Person,dc=acme,dc=com"

#. Tag: para
#: Security.xml:1031
#, no-c-format
msgid "This value is appended to the end of the username to locate the user's record."
msgstr "この値がユーザレコードの位置指定する為にusernameの後ろに追加されます。"

#. Tag: literal
#: Security.xml:1040
#, no-c-format
msgid "role-context-DN"
msgstr "role-context-DN"

#. Tag: literal
#: Security.xml:1044
#, no-c-format
msgid "ou=Role,dc=acme,dc=com"
msgstr "ou=Role,dc=acme,dc=com"

#. Tag: para
#: Security.xml:1047
#, no-c-format
msgid "The DN of the context containing role records."
msgstr "ロールレコードを含むコンテキストの識別子（DN)"

#. Tag: literal
#: Security.xml:1056
#, no-c-format
msgid "role-DN-prefix"
msgstr "role-DN-prefix"

#. Tag: literal
#: Security.xml:1060
#, no-c-format
msgid "<literal>cn=</literal>"
msgstr "<literal>cn=</literal>"

#. Tag: para
#: Security.xml:1063
#, no-c-format
msgid "This value is prefixed to the front of the role name to form the DN for locating the role record."
msgstr "この値がロール名の前に前置され、ロールレコードを位置指定する為の識別子として使用されます。"

#. Tag: literal
#: Security.xml:1073
#, no-c-format
msgid "role-DN-suffix"
msgstr "role-DN-suffix"

#. Tag: literal
#: Security.xml:1077
#, no-c-format
msgid ",ou=Roles,dc=acme,dc=com"
msgstr ",ou=Roles,dc=acme,dc=com"

#. Tag: para
#: Security.xml:1080
#, no-c-format
msgid "This value is appended to the role name to form the DN for locating the role record."
msgstr "この値がロール名の後ろに追加され、ロールレコードを位置指定する為の識別子として使用されます。"

#. Tag: literal
#: Security.xml:1089
#, no-c-format
msgid "bind-DN"
msgstr "bind-DN"

#. Tag: literal
#: Security.xml:1093
#, no-c-format
msgid "cn=Manager,dc=acme,dc=com"
msgstr "cn=Manager,dc=acme,dc=com"

#. Tag: para
#: Security.xml:1096
#, no-c-format
msgid "This is the context used to bind to the LDAP server."
msgstr "LDAPサーバとバインドする為に使用するコンテキスト"

#. Tag: literal
#: Security.xml:1105
#, no-c-format
msgid "bind-credentials"
msgstr "bind-credentials"

#. Tag: literal
#: Security.xml:1109
#, no-c-format
msgid "secret"
msgstr "秘密"

#. Tag: para
#: Security.xml:1112
#, no-c-format
msgid "These are the credentials (the password) used to bind to the LDAP server."
msgstr "LDAPサーバとバインドするときに使用される資格情報（パスワード）"

#. Tag: literal
#: Security.xml:1121
#, no-c-format
msgid "user-role-attribute"
msgstr "user-role-attribute"

#. Tag: literal
#: Security.xml:1125
#, no-c-format
msgid "roles"
msgstr "ロール"

#. Tag: para
#: Security.xml:1128
#, no-c-format
msgid "This is the name of the attribute of the user record that contains the list of roles that the user is a member of."
msgstr "ユーザがメンバーであるロールのリストを含んでいるユーザレコード中の属性の名前"

#. Tag: literal
#: Security.xml:1138
#, no-c-format
msgid "role-attribute-is-DN"
msgstr "role-attribute-is-DN"

#. Tag: literal
#: Security.xml:1142
#, no-c-format
msgid "true"
msgstr "真"

#. Tag: para
#: Security.xml:1145
#, no-c-format
msgid "This boolean property indicates whether the role attribute of the user record is itself a distinguished name."
msgstr "このブール値はユーザレコード中のロール属性が識別名か否かを示しています。"

#. Tag: literal
#: Security.xml:1155
#, no-c-format
msgid "user-name-attribute"
msgstr "user-name-attribute"

#. Tag: literal
#: Security.xml:1159
#, no-c-format
msgid "<literal>uid</literal>"
msgstr "<literal>uid</literal>"

#. Tag: para
#: Security.xml:1162
#, no-c-format
msgid "Indicates which attribute of the user record contains the username."
msgstr "ユーザレコードのどの属性がusernameに該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1171
#, no-c-format
msgid "user-password-attribute"
msgstr "user-password-attribute"

#. Tag: literal
#: Security.xml:1175
#, no-c-format
msgid "userPassword"
msgstr "userPassword"

#. Tag: para
#: Security.xml:1178
#, no-c-format
msgid "Indicates which attribute of the user record contains the user's password."
msgstr "ユーザレコードのどの属性がpasswordに該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1187
#, no-c-format
msgid "first-name-attribute"
msgstr "first-name-attribute"

#. Tag: literal
#: Security.xml:1191
#: Security.xml:1239
#, no-c-format
msgid "null"
msgstr "null"

#. Tag: para
#: Security.xml:1194
#, no-c-format
msgid "Indicates which attribute of the user record contains the user's first name."
msgstr "ユーザレコードのどの属性がfirst nameに該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1203
#, no-c-format
msgid "last-name-attribute"
msgstr "last-name-attribute"

#. Tag: literal
#: Security.xml:1207
#, no-c-format
msgid "<literal>sn</literal>"
msgstr "<literal>sn</literal>"

#. Tag: para
#: Security.xml:1210
#, no-c-format
msgid "Indicates which attribute of the user record contains the user's last name."
msgstr "ユーザレコードのどの属性がlast nameに該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1219
#, no-c-format
msgid "full-name-attribute"
msgstr "full-name-attribute"

#. Tag: literal
#: Security.xml:1223
#: Security.xml:1255
#, no-c-format
msgid "<literal>cn</literal>"
msgstr "<literal>cn</literal>"

#. Tag: para
#: Security.xml:1226
#, no-c-format
msgid "Indicates which attribute of the user record contains the user's full (common) name."
msgstr "ユーザレコードのどの属性がユーザのフルネームに該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1235
#, no-c-format
msgid "enabled-attribute"
msgstr "enabled-attribute"

#. Tag: para
#: Security.xml:1242
#, no-c-format
msgid "Indicates which attribute of the user record determines whether the user is enabled."
msgstr "ユーザレコードのどの属性がユーザが不活化されていないかを示しています。"

#. Tag: literal
#: Security.xml:1251
#, no-c-format
msgid "role-name-attribute"
msgstr "role-name-attribute"

#. Tag: para
#: Security.xml:1258
#, no-c-format
msgid "Indicates which attribute of the role record contains the name of the role."
msgstr "ロールレコードのどの属性がロール名に該当するのかを示しています。"

#. Tag: literal
#: Security.xml:1267
#, no-c-format
msgid "object-class-attribute"
msgstr "object-class-attribute"

#. Tag: literal
#: Security.xml:1271
#, no-c-format
msgid "objectClass"
msgstr "objectClass"

#. Tag: para
#: Security.xml:1274
#, no-c-format
msgid "Indicates which attribute determines the class of an object in the directory."
msgstr "ディレクトリ中でオブジェクトのクラスを決定している属性を示しています。"

#. Tag: literal
#: Security.xml:1283
#, no-c-format
msgid "role-object-classes"
msgstr "role-object-classes"

#. Tag: literal
#: Security.xml:1287
#, no-c-format
msgid "organizationalRole"
msgstr "組織上のロール"

#. Tag: para
#: Security.xml:1290
#, no-c-format
msgid "An array of the object classes that new role records should be created as."
msgstr "新規のロールレコードの作製の為のオブジェクトクラスの配列"

#. Tag: literal
#: Security.xml:1299
#, no-c-format
msgid "user-object-classes"
msgstr "user-object-classes"

#. Tag: literal
#: Security.xml:1303
#, no-c-format
msgid "person,uidObject"
msgstr "person,uidObject"

#. Tag: para
#: Security.xml:1306
#, no-c-format
msgid "An array of the object classes that new user records should be created as."
msgstr "新規のユーザレコード作製の為のオブジェクトクラスの配列"

#. Tag: title
#: Security.xml:1318
#, no-c-format
msgid "LdapIdentityStore Configuration Example"
msgstr "LdapIdentityStore設定例"

#. Tag: para
#: Security.xml:1320
#, no-c-format
msgid "The following configuration example shows how <literal>LdapIdentityStore</literal> may be configured for an LDAP directory running on fictional host <literal>directory.mycompany.com</literal>. The users are stored within this directory under the context <literal>ou=Person,dc=mycompany,dc=com</literal>, and are identified using the <literal>uid</literal> attribute (which corresponds to their username). Roles are stored in their own context, <literal>ou=Roles,dc=mycompany,dc=com</literal> and referenced from the user's entry via the <literal>roles</literal> attribute. Role entries are identified by their common name (the <literal>cn</literal> attribute) , which corresponds to the role name. In this example, users may be disabled by setting the value of their <literal>enabled</literal> attribute to false."
msgstr "下の設定例では、擬似ホスト <literal>directory.mycompany.com</literal>上で動作しているLDAPディレクトリに対応する<literal>LdapIdentityStore</literal> の設定を示しています。　ユーザは、このディレクトリ配下に<literal>ou=Person,dc=mycompany,dc=com</literal>というコンテキストで保持され、usernameに対応する<literal>uid</literal>属性により識別されます。　ロールはロール用のコンテキスト<literal>ou=Roles,dc=mycompany,dc=com</literal>に保持され、ユーザのエントリーから<literal>roles</literal>属性を介して参照されます。　ロールのエントリーはロールの名前に対応するロールの一般名（<literal>cn</literal> 属性）により識別されます。　この例では、ユーザは<literal>enabled</literal>属性を偽にする事により、使用不可にする事が出来ます。"

#. Tag: programlisting
#: Security.xml:1331
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <security:ldap-identity-store\n"
"    server-address=\"directory.mycompany.com\"\n"
"    bind-DN=\"cn=Manager,dc=mycompany,dc=com\"\n"
"    bind-credentials=\"secret\"\n"
"    user-DN-prefix=\"uid=\"\n"
"    user-DN-suffix=\",ou=Person,dc=mycompany,dc=com\"\n"
"    role-DN-prefix=\"cn=\"\n"
"    role-DN-suffix=\",ou=Roles,dc=mycompany,dc=com\"\n"
"    user-context-DN=\"ou=Person,dc=mycompany,dc=com\"\n"
"    role-context-DN=\"ou=Roles,dc=mycompany,dc=com\"\n"
"    user-role-attribute=\"roles\"\n"
"    role-name-attribute=\"cn\"\n"
"    user-object-classes=\"person,uidObject\"\n"
"    enabled-attribute=\"enabled\"\n"
"    />]]>"
msgstr ""
"<![CDATA[\n"
"  <security:ldap-identity-store\n"
"    server-address=\"directory.mycompany.com\"\n"
"    bind-DN=\"cn=Manager,dc=mycompany,dc=com\"\n"
"    bind-credentials=\"secret\"\n"
"    user-DN-prefix=\"uid=\"\n"
"    user-DN-suffix=\",ou=Person,dc=mycompany,dc=com\"\n"
"    role-DN-prefix=\"cn=\"\n"
"    role-DN-suffix=\",ou=Roles,dc=mycompany,dc=com\"\n"
"    user-context-DN=\"ou=Person,dc=mycompany,dc=com\"\n"
"    role-context-DN=\"ou=Roles,dc=mycompany,dc=com\"\n"
"    user-role-attribute=\"roles\"\n"
"    role-name-attribute=\"cn\"\n"
"    user-object-classes=\"person,uidObject\"\n"
"    enabled-attribute=\"enabled\"\n"
"    />]]>"

#. Tag: title
#: Security.xml:1338
#, no-c-format
msgid "Writing your own IdentityStore"
msgstr "自分のIDストアを記述する"

#. Tag: para
#: Security.xml:1340
#, no-c-format
msgid "Writing your own identity store implementation allows you to authenticate and perform identity management operations against security providers that aren't supported out of the box by Seam. Only a single class is required to achieve this, and it must implement the <literal>org.jboss.seam.security.management.IdentityStore</literal> interface."
msgstr "Seamによって標準でサポートされていないセキュリティ・プロバイダを使った認証やID管理を行う場合には、<literal>org.jboss.seam.security.management.IdentityStore</literal>を実装する、一つのクラスの実装を記述するだけ実現できます。"

#. Tag: para
#: Security.xml:1347
#, no-c-format
msgid "Please refer to the JavaDoc for <literal>IdentityStore</literal> for a description of the methods that must be implemented."
msgstr "<literal>IdentityStore</literal>の実装するメソッドの詳細については該当するJavaDocを参照してください。"

#. Tag: title
#: Security.xml:1355
#, no-c-format
msgid "Authentication with Identity Management"
msgstr "ID管理による認証"

#. Tag: para
#: Security.xml:1357
#, no-c-format
msgid "If you are using the Identity Management features in your Seam application, then it is not required to provide an authenticator component (see previous Authentication section) to enable authentication. Simply omit the <literal>authenticator-method</literal> from the <literal>identity</literal> configuration in <literal>components.xml</literal>, and the <literal>SeamLoginModule</literal> will by default use <literal>IdentityManager</literal> to authenticate your application's users, without any special configuration required."
msgstr "SeamアプリケーションでID管理機能を使っている場合には、認証コンポーネント（認証の項参照）による認証を行う必要はありません。<literal>components.xml</literal>の<literal>identity</literal>設定から<literal>authenticator-method</literal>を削除してください。　これで、特別な設定をすることなく<literal>SeamLoginModule</literal> はデフォルトの<literal>IdentityManager</literal>を使用してユーザの認証を行うようになります。"

#. Tag: title
#: Security.xml:1368
#, no-c-format
msgid "Using IdentityManager"
msgstr "IDマネージャの使用"

#. Tag: para
#: Security.xml:1370
#, no-c-format
msgid "The <literal>IdentityManager</literal> can be accessed either by injecting it into your Seam component as follows:"
msgstr "<literal>IdentityManager</literal>にアクセスできるようにするには、下のようにSeamコンポーネントにインジェクトします。"

#. Tag: programlisting
#: Security.xml:1375
#, no-c-format
msgid "<![CDATA[  @In IdentityManager identityManager;]]>"
msgstr "<![CDATA[  @In IdentityManager identityManager;]]>"

#. Tag: para
#: Security.xml:1377
#, no-c-format
msgid "or by accessing it through its static <literal>instance()</literal> method:"
msgstr "或いは、静的な<literal>instance()</literal>メソッド経由でアクセスします。 "

#. Tag: programlisting
#: Security.xml:1381
#, no-c-format
msgid "<![CDATA[  IdentityManager identityManager = IdentityManager.instance();]]>"
msgstr "<![CDATA[  IdentityManager identityManager = IdentityManager.instance();]]>"

#. Tag: para
#: Security.xml:1383
#, no-c-format
msgid "The following table describes <literal>IdentityManager</literal>'s API methods:"
msgstr "下のテーブルに<literal>IdentityManager</literal>のAPIのメソッドを示します。"

#. Tag: title
#: Security.xml:1388
#, no-c-format
msgid "Identity Management API"
msgstr "ID管理のAPI"

#. Tag: para
#: Security.xml:1397
#: Security.xml:1813
#: Security.xml:2738
#: Security.xml:3132
#: Security.xml:3753
#: Security.xml:3922
#, no-c-format
msgid "Method"
msgstr "メソッド"

#. Tag: para
#: Security.xml:1400
#, no-c-format
msgid "Returns"
msgstr "戻り値"

#. Tag: literal
#: Security.xml:1413
#, no-c-format
msgid "createUser(String name, String password)"
msgstr "createUser(String name, String password)"

#. Tag: literal
#: Security.xml:1418
#: Security.xml:1437
#: Security.xml:1456
#: Security.xml:1475
#: Security.xml:1494
#: Security.xml:1514
#: Security.xml:1533
#: Security.xml:1552
#: Security.xml:1571
#: Security.xml:1591
#: Security.xml:1611
#: Security.xml:1725
#: Security.xml:1747
#: Security.xml:1765
#: Security.xml:2751
#: Security.xml:3203
#: Security.xml:3222
#: Security.xml:3241
#: Security.xml:3259
#: Security.xml:3804
#: Security.xml:3823
#: Security.xml:3842
#: Security.xml:3861
#, no-c-format
msgid "boolean"
msgstr "ブール型　"

#. Tag: para
#: Security.xml:1422
#, no-c-format
msgid "Creates a new user account, with the specified name and password. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定されたusernameとpasswordで新規ユーザのアカウントを作成します。　もし作成が成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1432
#, no-c-format
msgid "deleteUser(String name)"
msgstr "deleteUser(String name)"

#. Tag: para
#: Security.xml:1441
#, no-c-format
msgid "Deletes the user account with the specified name. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前のユーザを削除します。　もし成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1451
#, no-c-format
msgid "createRole(String role)"
msgstr "createRole(String role)"

#. Tag: para
#: Security.xml:1460
#, no-c-format
msgid "Creates a new role, with the specified name. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前で新規のロールを作成します。　もし作成が成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1470
#, no-c-format
msgid "deleteRole(String name)"
msgstr "deleteRole(String name)"

#. Tag: para
#: Security.xml:1479
#, no-c-format
msgid "Deletes the role with the specified name. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前のロールを削除します。　もし作成が成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1489
#, no-c-format
msgid "enableUser(String name)"
msgstr "enableUser(String name)"

#. Tag: para
#: Security.xml:1498
#, no-c-format
msgid "Enables the user account with the specified name. Accounts that are not enabled are not able to authenticate. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前のユーザアカウントを活性化します。　活性化されていないアカウントは認証の対象とはなりません。もし成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します"

#. Tag: literal
#: Security.xml:1509
#, no-c-format
msgid "disableUser(String name)"
msgstr "disableUser(String name)"

#. Tag: para
#: Security.xml:1518
#, no-c-format
msgid "Disables the user account with the specified name. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前のユーザアカウントを不活化します。　もし成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1528
#, no-c-format
msgid "changePassword(String name, String password)"
msgstr "changePassword(String name, String password)"

#. Tag: para
#: Security.xml:1537
#, no-c-format
msgid "Changes the password for the user account with the specified name. Returns <literal>true</literal> if successful, or <literal>false</literal> if not."
msgstr "指定された名前のユーザアカウントのpasswordの変更をします。　もし成功すれば<literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1547
#, no-c-format
msgid "isUserEnabled(String name)"
msgstr "isUserEnabled(String name)"

#. Tag: para
#: Security.xml:1556
#, no-c-format
msgid "Returns <literal>true</literal> if the specified user account is enabled, or <literal>false</literal> if it isn't."
msgstr "もし、指定されたユーザのアカウントが活性化されていれば <literal>true</literal>を、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1566
#, no-c-format
msgid "grantRole(String name, String role)"
msgstr "grantRole(String name, String role)"

#. Tag: para
#: Security.xml:1575
#, no-c-format
msgid "Grants the specified role to the specified user or role. The role must already exist for it to be granted. Returns <literal>true</literal> if the role is successfully granted, or <literal>false</literal> if it is already granted to the user."
msgstr "特定のロールをユーザやロールに権限を付与します。　ロールは既に存在していることが必要です。　ロールの付与が成功した場合には<literal>true</literal>を返し、もしそのロールがユーザに既に付与されていた場合には<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1586
#, no-c-format
msgid "revokeRole(String name, String role)"
msgstr "revokeRole(String name, String role)"

#. Tag: para
#: Security.xml:1595
#, no-c-format
msgid "Revokes the specified role from the specified user or role. Returns <literal>true</literal> if the specified user is a member of the role and it is successfully revoked, or <literal>false</literal> if the user is not a member of the role."
msgstr "特定のユーザ或いはロールから指定したロールを取り消します。　ユーザが当該のロールのメンバーであり且つ取り消しが成功した場合には<literal>true</literal>を返し、ユーザが当該ロールのメンバーでなければ<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1606
#, no-c-format
msgid "userExists(String name)"
msgstr "userExists(String name)"

#. Tag: para
#: Security.xml:1615
#, no-c-format
msgid "Returns <literal>true</literal> if the specified user exists, or <literal>false</literal> if it doesn't."
msgstr "もし、当該のユーザが存在すれば<literal>true</literal>、さもなくば<literal>false</literal>を返します。"

#. Tag: literal
#: Security.xml:1625
#: Security.xml:2026
#, no-c-format
msgid "listUsers()"
msgstr "listUsers()"

#. Tag: literal
#: Security.xml:1630
#: Security.xml:1648
#: Security.xml:1666
#: Security.xml:1684
#: Security.xml:1702
#: Security.xml:1783
#, no-c-format
msgid "List"
msgstr "リスト"

#. Tag: para
#: Security.xml:1634
#, no-c-format
msgid "Returns a list of all user names, sorted in alpha-numeric order."
msgstr "ABC順にソートされた全てのユーザ名の一覧を返します。"

#. Tag: literal
#: Security.xml:1643
#, no-c-format
msgid "listUsers(String filter)"
msgstr "listUsers(String filter)"

#. Tag: para
#: Security.xml:1652
#, no-c-format
msgid "Returns a list of all user names filtered by the specified filter parameter, sorted in alpha-numeric order."
msgstr "指定されたパラメータでフィルタしたユーザ名のリストをABC順にソートして返します"

#. Tag: literal
#: Security.xml:1661
#: Security.xml:1778
#: Security.xml:2044
#, no-c-format
msgid "listRoles()"
msgstr "listRoles()"

#. Tag: para
#: Security.xml:1670
#, no-c-format
msgid "Returns a list of all role names."
msgstr "全てのロール名の一覧を返します"

#. Tag: literal
#: Security.xml:1679
#, no-c-format
msgid "getGrantedRoles(String name)"
msgstr "getGrantedRoles(String name)"

#. Tag: para
#: Security.xml:1688
#, no-c-format
msgid "Returns a list of the names of all the roles explicitly granted to the specified user name."
msgstr "指定されたユーザに明示的に認められたロール名の一覧を返します"

#. Tag: literal
#: Security.xml:1697
#, no-c-format
msgid "getImpliedRoles(String name)"
msgstr "getImpliedRoles(String name)"

#. Tag: para
#: Security.xml:1706
#, no-c-format
msgid "Returns a list of the names of all the roles implicitly granted to the specified user name. Implicitly granted roles include those that are not directly granted to a user, rather they are granted to the roles that the user is a member of. For example, is the <literal>admin</literal> role is a member of the <literal>user</literal> role, and a user is a member of the <literal>admin</literal> role, then the implied roles for the user are both the <literal>admin</literal>, and <literal>user</literal> roles."
msgstr "指定されたユーザ名に対して暗示的に付与されている全てのロール名のリストを返します。　暗示的に付与されているロールとは、ユーザに直接付与されているロールではなく、ユーザが所属するロールに対して付与されているロールを言います。　　例えば、<literal>admin</literal>ロールは<literal>user</literal>ロールのメンバーであり、ユーザが<literal>admin</literal>ロールのメンバーであれば、このユーザには暗示的に<literal>admin</literal>ロールと <literal>user</literal>ロールが付与されている。"

#. Tag: literal
#: Security.xml:1720
#, no-c-format
msgid "authenticate(String name, String password)"
msgstr "authenticate(String name, String password)"

#. Tag: para
#: Security.xml:1729
#, no-c-format
msgid "Authenticates the specified username and password using the configured Identity Store. Returns <literal>true</literal> if successful or <literal>false</literal> if authentication failed. Successful authentication implies nothing beyond the return value of the method. It does not change the state of the <literal>Identity</literal> component - to perform a proper Seam login the <literal>Identity.login()</literal> must be used instead."
msgstr "設定されたIDストアを使ってusernameとpasswordを認証します。　認証が成功すれば<literal>true</literal>、失敗すれば<literal>false</literal>を返します。　認証が成功しても、このメソッドの返り値以外は何も変化しませんし、<literal>Identity</literal>コンポーネントの状態も変化しません。 loginを適切に行うためには<literal>Identity.login()</literal>が使用されなければなりません。"

#. Tag: literal
#: Security.xml:1742
#, no-c-format
msgid "addRoleToGroup(String role, String group)"
msgstr "addRoleToGroup(String role, String group)"

#. Tag: para
#: Security.xml:1751
#, no-c-format
msgid "Adds the specified role as a member of the specified group. Returns true if the operation is successful."
msgstr "特定のロールを指定したグループのメンバーに追加します。　操作が成功した場合に真を返します。"

#. Tag: literal
#: Security.xml:1760
#, no-c-format
msgid "removeRoleFromGroup(String role, String group)"
msgstr "removeRoleFromGroup(String role, String group)"

#. Tag: para
#: Security.xml:1769
#, no-c-format
msgid "Removes the specified role from the specified group. Returns true if the operation is successful."
msgstr "指定されたロールを指定されたグループから削除します。　もし成功すればtrueを返します。"

#. Tag: para
#: Security.xml:1787
#, no-c-format
msgid "Lists the names of all roles."
msgstr "全てのロール名のリスト"

#. Tag: para
#: Security.xml:1797
#, no-c-format
msgid "Using the Identity Management API requires that the calling user has the appropriate authorization to invoke its methods. The following table describes the permission requirements for each of the methods in <literal>IdentityManager</literal>. The permission targets listed below are literal String values."
msgstr "ID管理APIを使うためには、ユーザはそのメソッドを呼び出す適切な権限を持っている必要があります。　以下の表に<literal>IdentityManager</literal>にある個々のメソッドの起動に必要な権限の一覧を示します。　権限はリテラル文字列で指定します。"

#. Tag: title
#: Security.xml:1804
#, no-c-format
msgid "Identity Management Security Permissions"
msgstr "ID管理　セキュリティパーミッション"

#. Tag: para
#: Security.xml:1816
#: Security.xml:3925
#, no-c-format
msgid "Permission Target"
msgstr "パーミッションの対象"

#. Tag: para
#: Security.xml:1819
#: Security.xml:3928
#, no-c-format
msgid "Permission Action"
msgstr "パーミッションのアクション"

#. Tag: literal
#: Security.xml:1828
#, no-c-format
msgid "createUser()"
msgstr "createUser()"

#. Tag: literal
#: Security.xml:1833
#: Security.xml:1851
#: Security.xml:1905
#: Security.xml:1923
#: Security.xml:1941
#: Security.xml:1959
#: Security.xml:1977
#: Security.xml:1995
#: Security.xml:2013
#: Security.xml:2031
#, no-c-format
msgid "seam.user"
msgstr "seam.user"

#. Tag: literal
#: Security.xml:1838
#: Security.xml:1874
#, no-c-format
msgid "create"
msgstr "作成"

#. Tag: literal
#: Security.xml:1846
#, no-c-format
msgid "deleteUser()"
msgstr "deleteUser()"

#. Tag: literal
#: Security.xml:1856
#: Security.xml:1892
#, no-c-format
msgid "delete"
msgstr "削除"

#. Tag: literal
#: Security.xml:1864
#, no-c-format
msgid "createRole()"
msgstr "createRole()"

#. Tag: literal
#: Security.xml:1869
#: Security.xml:1887
#: Security.xml:2049
#: Security.xml:2067
#: Security.xml:2085
#, no-c-format
msgid "seam.role"
msgstr "seam.role"

#. Tag: literal
#: Security.xml:1882
#, no-c-format
msgid "deleteRole()"
msgstr "deleteRole()"

#. Tag: literal
#: Security.xml:1900
#, no-c-format
msgid "enableUser()"
msgstr "enableUser()"

#. Tag: literal
#: Security.xml:1910
#: Security.xml:1928
#: Security.xml:1946
#: Security.xml:1982
#: Security.xml:2000
#: Security.xml:2072
#: Security.xml:2090
#, no-c-format
msgid "update"
msgstr "更新"

#. Tag: literal
#: Security.xml:1918
#, no-c-format
msgid "disableUser()"
msgstr "disableUser()"

#. Tag: literal
#: Security.xml:1936
#, no-c-format
msgid "changePassword()"
msgstr "changePassword()"

#. Tag: literal
#: Security.xml:1954
#, no-c-format
msgid "isUserEnabled()"
msgstr "isUserEnabled()"

#. Tag: literal
#: Security.xml:1964
#: Security.xml:2018
#: Security.xml:2036
#: Security.xml:2054
#, no-c-format
msgid "read"
msgstr "読み込み"

#. Tag: literal
#: Security.xml:1972
#, no-c-format
msgid "grantRole()"
msgstr "grantRole()"

#. Tag: literal
#: Security.xml:1990
#, no-c-format
msgid "revokeRole()"
msgstr "revokeRole()"

#. Tag: literal
#: Security.xml:2008
#, no-c-format
msgid "userExists()"
msgstr "userExists()"

#. Tag: literal
#: Security.xml:2062
#, no-c-format
msgid "addRoleToGroup()"
msgstr "addRoleToGroup()"

#. Tag: literal
#: Security.xml:2080
#, no-c-format
msgid "removeRoleFromGroup()"
msgstr "removeRoleFromGroup()"

#. Tag: para
#: Security.xml:2098
#, no-c-format
msgid "The following code listing provides an example set of security rules that grants access to all Identity Management-related methods to members of the <literal>admin</literal> role:"
msgstr "下の例では、<literal>admin</literal>ロールのメンバー全てが、全てのID管理関連のメソッドへのアクセス権を付与されているセキュリティルールを示しています。"

#. Tag: programlisting
#: Security.xml:2103
#, no-c-format
msgid ""
"<![CDATA[rule ManageUsers\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  check: PermissionCheck(name == \"seam.user\", granted == false)\n"
"  Role(name == \"admin\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"\n"
"rule ManageRoles\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  check: PermissionCheck(name == \"seam.role\", granted == false)\n"
"  Role(name == \"admin\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"]]>"
msgstr ""
"<![CDATA[rule ManageUsers\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  check: PermissionCheck(name == \"seam.user\", granted == false)\n"
"  Role(name == \"admin\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"\n"
"rule ManageRoles\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  check: PermissionCheck(name == \"seam.role\", granted == false)\n"
"  Role(name == \"admin\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"]]>"

#. Tag: title
#: Security.xml:2110
#, no-c-format
msgid "Error Messages"
msgstr "エラーメッセージ"

#. Tag: para
#: Security.xml:2112
#, no-c-format
msgid "The security API produces a number of default faces messages for various security-related events. The following table lists the message keys that can be used to override these messages by specifying them in a <literal>message.properties</literal> resource file. To suppress the message, just put the key with an empty value in the resource file."
msgstr "セキュリティAPIはセキュリティ関連イベントに対応する幾つかのデフォルトのフェースメッセージを発生します。　以下の表には、リソースファイル<literal>message.properties</literal>で、これらを上書きする為のメッセージキーを一覧にしています。　もし、これらのメッセージを出さないようにするのであれば、リソースファイルで対応するキーの値をブランクにしてください。"

#. Tag: title
#: Security.xml:2120
#, no-c-format
msgid "Security Message Keys"
msgstr "セキュリティメッセージキー"

#. Tag: para
#: Security.xml:2129
#, no-c-format
msgid "Message Key"
msgstr "メッセージキー"

#. Tag: literal
#: Security.xml:2142
#, no-c-format
msgid "org.jboss.seam.loginSuccessful"
msgstr "org.jboss.seam.loginSuccessful"

#. Tag: para
#: Security.xml:2146
#, no-c-format
msgid "This message is produced when a user successfully logs in via the security API."
msgstr "セキュリティAPIを通して、無事ログイン出来たときに生成されます。"

#. Tag: literal
#: Security.xml:2154
#, no-c-format
msgid "org.jboss.seam.loginFailed"
msgstr "org.jboss.seam.loginFailed"

#. Tag: para
#: Security.xml:2158
#, no-c-format
msgid "This message is produced when the login process fails, either because the user provided an incorrect username or password, or because authentication failed in some other way."
msgstr "ユーザネーム、パスワードの組み合わせ、或は何らかの認証のエラーにより、ユーザがログインに失敗したときに生成されます。"

#. Tag: literal
#: Security.xml:2167
#, no-c-format
msgid "org.jboss.seam.NotLoggedIn"
msgstr "org.jboss.seam.NotLoggedIn"

#. Tag: para
#: Security.xml:2171
#, no-c-format
msgid "This message is produced when a user attempts to perform an action or access a page that requires a security check, and the user is not currently authenticated."
msgstr "ユーザが認証されずにセキュリティチェックが必要な操作、あるいはページへのアクセスを試みたときに生成されます。"

#. Tag: literal
#: Security.xml:2180
#, no-c-format
msgid "org.jboss.seam.AlreadyLoggedIn"
msgstr "org.jboss.seam.AlreadyLoggedIn"

#. Tag: para
#: Security.xml:2184
#, no-c-format
msgid "This message is produced when a user that is already authenticated attempts to log in again."
msgstr "このメッセージは既に認証されたユーザが再度ログインを試みた時に生成されます。"

#. Tag: title
#: Security.xml:2195
#, no-c-format
msgid "Authorization"
msgstr "認可"

#. Tag: para
#: Security.xml:2197
#, no-c-format
msgid "There are a number of authorization mechanisms provided by the Seam Security API for securing access to components, component methods, and pages. This section describes each of these. An important thing to note is that if you wish to use any of the advanced features (such as rule-based permissions) then your <literal>components.xml</literal> may need to be configured to support this - see the Configuration section above."
msgstr "SeamのセキュリティAPIは、コンポーネント、コンポーネントのメソッド、それにページに対して多くの認可機能を提供します。 ここでは、其々の機能について説明します。 ここで説明するような高度なセキュリティ機能（ルールベースの認可のような）を使用する場合には<literal>components.xml</literal>に前述のような設定を記述しておかなければならない、ということに留意してください。　"

#. Tag: title
#: Security.xml:2206
#, no-c-format
msgid "Core concepts"
msgstr "核となる概念"

#. Tag: para
#: Security.xml:2208
#, no-c-format
msgid "Seam Security is built around the premise of users being granted roles and/or permissions, allowing them to perform operations that may not otherwise be permissible for users without the necessary security privileges. Each of the authorization mechanisms provided by the Seam Security API are built upon this core concept of roles and permissions, with an extensible framework providing multiple ways to secure application resources."
msgstr "Seamのセキュリティは必要なセキュリティ権限を持たないユーザの操作を行わせないように、ロールとパーミッションによりユーザの操作を制限する事を前提として設計されています。　SeamセキュリティAPIの提供する認可メカニズムは、ロールとパーミッションによるユーザ管理の概念に基づいて作られており、複数のアプリケーションリソース保護の方法を提供する拡張可能なフレームワークを提供しています。"

#. Tag: title
#: Security.xml:2216
#, no-c-format
msgid "What is a role?"
msgstr "ロールとは"

#. Tag: para
#: Security.xml:2218
#, no-c-format
msgid "A role is a <emphasis>group</emphasis>, or <emphasis>type</emphasis>, of user that may have been granted certain privileges for performing one or more specific actions within an application. They are simple constructs, consisting of just a name such as \"admin\", \"user\", \"customer\", etc. They can be granted either to users (or in some cases to other roles), and are used to create logical groups of users for the convenient assignment of specific application privileges."
msgstr "ロールとは、アプリケーションの特定の操作を実施する特権を付与されてるユーザの<emphasis>group</emphasis>或いは<emphasis>type</emphasis>を言い、\"admin\"、 \"user\"、 \"customer\"等の名前により構成されています。　これらのロールはユーザに対して（或いは場合により他のロールに対し）付与され、特定のアプリケーションの操作に対する特権を持つユーザの論理的なグループを作成する事を容易にしています。"

#. Tag: title
#: Security.xml:2236
#, no-c-format
msgid "What is a permission?"
msgstr "パーミッションとは？"

#. Tag: para
#: Security.xml:2238
#, no-c-format
msgid "A permission is a privilege (sometimes once-off) for performing a single, specific action. It is entirely possible to build an application using nothing but permissions, however roles offer a higher level of convenience when granting privileges to groups of users. They are slightly more complex in structure than roles, essentially consisting of three \"aspects\"; a target, an action, and a recipient. The target of a permission is the object (or an arbitrary name or class) for which a particular action is allowed to be performed by a specific recipient (or user). For example, the user \"Bob\" may have permission to delete customer objects. In this case, the permission target may be \"customer\", the permission action would be \"delete\" and the recipient would be \"Bob\"."
msgstr "パーミッションとは、一つの特定の操作を実行する為の特権（時として1回限りの）を言います。　パーミッションのみを使ってアプリケーションを組むことも可能ですが、ユーザのグループに対して特定の特権を付与する事により、セキュリティ管理をより容易にすることが出来ます。　これらはロールよりも、構造上若干複雑で、 ”対象”、”操作” と”受取人（受益者）”の３つの要素から構成されます。　パーミッションの対象は特定の受益者（ユーザ）により特定の操作が行われるオブジェクト（或いは、任意の名前、クラス）です。　例として、ユーザBobは顧客オブジェクトを削除するパーミッションを持つ、場合を考えてみると、　パーミッションの対象は「顧客」、パーミッションの操作は「削除」、そして受益者はBobという事になります。"

#. Tag: para
#: Security.xml:2258
#, no-c-format
msgid "Within this documentation, permissions are generally represented in the form <literal>target:action</literal> (omitting the recipient, although in reality one is always required)."
msgstr "このドキュメント中では権限は、実際には常に必要な受信者（受取人）を省略して<literal>target:action</literal> という形式で表示されています。"

#. Tag: title
#: Security.xml:2267
#, no-c-format
msgid "Securing components"
msgstr "コンポーネントの安全性を確保する"

#. Tag: para
#: Security.xml:2269
#, no-c-format
msgid "Let's start by examining the simplest form of authorization, component security, starting with the <literal>@Restrict</literal> annotation."
msgstr "それでは、もっとも簡単な形式の認可、コンポーネントのセキュリティについて<literal>@Restrict</literal>アノテーションから見てゆきましょう。"

#. Tag: title
#: Security.xml:2275
#, no-c-format
msgid "@Restrict vs Typesafe security annotations"
msgstr "@Restrictアノテーション　とタイプセーフなセキュリティアノテーション"

#. Tag: para
#: Security.xml:2277
#, no-c-format
msgid "While using the <literal>@Restrict</literal> annotation provides a powerful and flexible method for security component methods due to its ability to support EL expressions, it is recommended that the typesafe equivalent (described later) be used, at least for the compile-time safety it provides."
msgstr "<literal>@Restrict</literal>アノテーションを使うとEL式をサポートしていることもあり、コンポーネントのメソッドに対して強力かつフレキシブルなセキュリティを付与する事が出来ますが、コンパイル時の安全性等から、タイプセーフな同様の方法（後述）が推奨されます。"

#. Tag: title
#: Security.xml:2285
#, no-c-format
msgid "The @Restrict annotation"
msgstr "@Restrictアノテーション"

#. Tag: para
#: Security.xml:2287
#, no-c-format
msgid "Seam components may be secured either at the method or the class level, using the <literal>@Restrict</literal> annotation. If both a method and it's declaring class are annotated with <literal>@Restrict</literal>, the method restriction will take precedence (and the class restriction will not apply). If a method invocation fails a security check, then an exception will be thrown as per the contract for <literal>Identity.checkRestriction()</literal> (see Inline Restrictions). A <literal>@Restrict</literal> on just the component class itself is equivalent to adding <literal>@Restrict</literal> to each of its methods."
msgstr "<literal>@Restrict</literal>アノテーションにより、Seamのコンポーネントにはクラス或いはメソッドレベルでのセキュリティを付与する事が出来ます。　もし、クラスとその中のメソッドの両方に<literal>@Restrict</literal>アノテーションがあった場合には、メソッドレベルの制限が優先され、クラスレベルの制限は結果として適用されません。　もし、メソッドの起動がセキュリティチェックで失敗した場合には、<literal>Identity.checkRestriction()</literal>単位で例外が発生します。　コンポーネントレベルでの<literal>@Restrict</literal>アノテーションは、そのコンポーネントの全てのメソッドに<literal>@Restrict</literal>をアノテートしたのと同じことになります。"

#. Tag: para
#: Security.xml:2297
#, no-c-format
msgid "An empty <literal>@Restrict</literal> implies a permission check of <literal>componentName:methodName</literal>. Take for example the following component method:"
msgstr "空の<literal>@Restrict</literal>は<literal>component:methodName</literal>を意味します。 下のようなコンポーネントの例を見てみましょう。"

#. Tag: programlisting
#: Security.xml:2302
#, no-c-format
msgid ""
"<![CDATA[@Name(\"account\")\n"
"public class AccountAction {\n"
"    @Restrict public void delete() {\n"
"      ...\n"
"    }\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"account\")\n"
"public class AccountAction {\n"
"    @Restrict public void delete() {\n"
"      ...\n"
"    }\n"
"}]]>"

#. Tag: para
#: Security.xml:2304
#, no-c-format
msgid "In this example, the implied permission required to call the <literal>delete()</literal> method is <literal>account:delete</literal>. The equivalent of this would be to write <literal>@Restrict(\"#{s:hasPermission('account','delete')}\")</literal>. Now let's look at another example:"
msgstr "この例では、<literal>delete()</literal>を呼び出すためには<literal>account:delete</literal>という権限が必要な事を暗黙的に示しています。　同様の内容は<literal>@Restrict(\"#{s:hasPermission('account','delete')}\")</literal>と記述する事も出来ます。他の例についても見てゆきましょう。"

#. Tag: programlisting
#: Security.xml:2311
#, no-c-format
msgid ""
"<![CDATA[@Restrict @Name(\"account\")\n"
"public class AccountAction {\n"
"    public void insert() {\n"
"      ...\n"
"    }\n"
"    @Restrict(\"#{s:hasRole('admin')}\")\n"
"    public void delete() {\n"
"      ...\n"
"    }\n"
"}]]>"
msgstr ""
"<![CDATA[@Restrict @Name(\"account\")\n"
"public class AccountAction {\n"
"    public void insert() {\n"
"      ...\n"
"    }\n"
"    @Restrict(\"#{s:hasRole('admin')}\")\n"
"    public void delete() {\n"
"      ...\n"
"    }\n"
"}]]>"

#. Tag: para
#: Security.xml:2313
#, no-c-format
msgid "This time, the component class itself is annotated with <literal>@Restrict</literal>. This means that any methods without an overriding <literal>@Restrict</literal> annotation require an implicit permission check. In the case of this example, the <literal>insert()</literal> method requires a permission of <literal>account:insert</literal>, while the <literal>delete()</literal> method requires that the user is a member of the <literal>admin</literal> role."
msgstr "ここでは、コンポーネントクラスに<literal>@Restrict</literal>とアノテーションが付記されています。これは、`Restrictがオーバーライドされない限り、パーミッションのチェックが暗示的に要求されることを示しています。この例の場合、<literal>insert()</literal>は<literal>account:insert</literal>のパーミッションを必要とし、<literal>delete()</literal>はユーザが<literal>admin</literal>ロールに属していることが必要な事を示しています。"

#. Tag: para
#: Security.xml:2321
#, no-c-format
msgid "Before we go any further, let's address the <literal>#{s:hasRole()}</literal> expression seen in the above example. Both <literal>s:hasRole</literal> and <literal>s:hasPermission</literal> are EL functions, which delegate to the correspondingly named methods of the <literal>Identity</literal> class. These functions can be used within any EL expression throughout the entirety of the security API."
msgstr "先に進む前に、上の例で見た <literal>#{s:hasRole()}</literal> 式について見てみましょう。　<literal>s:hasRole</literal> も <literal>s:hasPermission</literal>もEL式であり、 <literal>Identity</literal>クラスの同様の名前のメソッドに対応します。　これらセキュリティAPIのすべてについてEL式の中で使う事が出来ます。"

#. Tag: para
#: Security.xml:2328
#, no-c-format
msgid "Being an EL expression, the value of the <literal>@Restrict</literal> annotation may reference any objects that exist within a Seam context. This is extremely useful when performing permission checks for a specific object instance. Look at this example:"
msgstr "EL式とすることで、<literal>@Restrict</literal>アノテーションは、Seamコンテキスト中のどのようなオブジェクトの値でも参照することが出来るようになります。 これは、特定のオブジェクトのインスタンスをチェックしてパーミッションを決定する場合に非常に有効な方法です。下の例を見てみましょう。"

#. Tag: programlisting
#: Security.xml:2334
#, no-c-format
msgid ""
"<![CDATA[@Name(\"account\")\n"
"public class AccountAction {\n"
"    @In Account selectedAccount;\n"
"    @Restrict(\"#{s:hasPermission(selectedAccount,'modify')}\")\n"
"    public void modify() {\n"
"        selectedAccount.modify();\n"
"    }\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"account\")\n"
"public class AccountAction {\n"
"    @In Account selectedAccount;\n"
"    @Restrict(\"#{s:hasPermission(selectedAccount,'modify')}\")\n"
"    public void modify() {\n"
"        selectedAccount.modify();\n"
"    }\n"
"}]]>"

#. Tag: para
#: Security.xml:2336
#, no-c-format
msgid "The interesting thing to note from this example is the reference to <literal>selectedAccount</literal> seen within the <literal>hasPermission()</literal> function call. The value of this variable will be looked up from within the Seam context, and passed to the <literal>hasPermission()</literal> method in <literal>Identity</literal>, which in this case can then determine if the user has the required permission for modifying the specified <literal>Account</literal> object."
msgstr "ここで興味深いのは、<literal>hasPermission()</literal>というファンクション中で<literal>selectedAccout</literal>を参照している事です。 この変数の値はSeamのコンテキスト中で検索され、<literal>Identity</literal>の<literal>hasPermission()</literal>に渡され、この例の場合、特定の<literal>Account</literal>のオブジェクトに対する変更許可を持っているかを決定しています。"

#. Tag: title
#: Security.xml:2346
#, no-c-format
msgid "Inline restrictions"
msgstr "インラインによる制約"

#. Tag: para
#: Security.xml:2347
#, no-c-format
msgid "Sometimes it might be desirable to perform a security check in code, without using the <literal>@Restrict</literal> annotation. In this situation, simply use <literal>Identity.checkRestriction()</literal> to evaluate a security expression, like this:"
msgstr "時として、<literal>@Restrict</literal>アノテーションを使わずに、コードでセキュリティチェックを行いたい場合があるかもしれません。この様な場合には、下のように<literal>Identity.checkRestriction()</literal>を使って、セキュリティ式を評価することができます。"

#. Tag: programlisting
#: Security.xml:2353
#, no-c-format
msgid ""
"<![CDATA[public void deleteCustomer() {\n"
"    Identity.instance().checkRestriction(\"#{s:hasPermission(selectedCustomer,'delete')}\");\n"
"}]]>"
msgstr ""
"<![CDATA[public void deleteCustomer() {\n"
"    Identity.instance().checkRestriction(\"#{s:hasPermission(selectedCustomer,'delete')}\");\n"
"}]]>"

#. Tag: para
#: Security.xml:2355
#, no-c-format
msgid "If the expression specified doesn't evaluate to <literal>true</literal>, either"
msgstr "もし式が<literal>true</literal>と評価されなかった場合には、"

#. Tag: para
#: Security.xml:2361
#, no-c-format
msgid "if the user is not logged in, a <literal>NotLoggedInException</literal> exception is thrown or"
msgstr "ユーザがログインしていなかったのであれば、NotLoggedInExceptionが投げられ、"

#. Tag: para
#: Security.xml:2367
#, no-c-format
msgid "if the user is logged in, an <literal>AuthorizationException</literal> exception is thrown."
msgstr "ユーザがログインしていた場合には、AuthorizationExceptionが投げられます。"

#. Tag: para
#: Security.xml:2374
#, no-c-format
msgid "It is also possible to call the <literal>hasRole()</literal> and <literal>hasPermission()</literal> methods directly from Java code:"
msgstr "また、下のようにJavaコードから直接<literal>hasRole()</literal>や<literal>hasPermission()</literal>メソッドを呼ぶこともできます。"

#. Tag: programlisting
#: Security.xml:2379
#, no-c-format
msgid ""
"<![CDATA[if (!Identity.instance().hasRole(\"admin\"))\n"
"     throw new AuthorizationException(\"Must be admin to perform this action\");\n"
"\n"
"if (!Identity.instance().hasPermission(\"customer\", \"create\"))\n"
"     throw new AuthorizationException(\"You may not create new customers\");]]>"
msgstr ""
"<![CDATA[if (!Identity.instance().hasRole(\"admin\"))\n"
"     throw new AuthorizationException(\"Must be admin to perform this action\");\n"
"\n"
"if (!Identity.instance().hasPermission(\"customer\", \"create\"))\n"
"     throw new AuthorizationException(\"You may not create new customers\");]]>"

#. Tag: title
#: Security.xml:2385
#, no-c-format
msgid "Security in the user interface"
msgstr "ユーザインターフェースのセキュリティ"

#. Tag: para
#: Security.xml:2387
#, no-c-format
msgid "One indication of a well designed user interface is that the user is not presented with options for which they don't have the necessary privileges to use. Seam Security allows conditional rendering of either 1) sections of a page or 2) individual controls, based upon the privileges of the user, using the very same EL expressions that are used for component security."
msgstr "適切なユーザインターフェースのデザインの一つとして、ユーザが使用する権限を有しないオプションの表示をしないようにすることがあります。　Seamのセキュリティはユーザの権限に応じて、コンポーネントのセキュリティで使用したのと同様にEL式を使用する事により１）ページ単位　２）個々のコントロール単位　で描画を管理する事が出来ます。"

#. Tag: para
#: Security.xml:2394
#, no-c-format
msgid "Let's take a look at some examples of interface security. First of all, let's pretend that we have a login form that should only be rendered if the user is not already logged in. Using the <literal>identity.isLoggedIn()</literal> property, we can write this:"
msgstr "インターフェースのセキュリティの例について見てゆきましょう。　まづ最初に、ログインしていないユーザの時だけ表示されるログイン・フォームについて考えてみましょう。　 <literal>identity.isLoggedIn()</literal>属性を使えば下のように記述出来ます。"

#. Tag: programlisting
#: Security.xml:2400
#, no-c-format
msgid "<![CDATA[<h:form class=\"loginForm\" rendered=\"#{not identity.loggedIn}\">]]>"
msgstr "<![CDATA[<h:form class=\"loginForm\" rendered=\"#{not identity.loggedIn}\">]]>"

#. Tag: para
#: Security.xml:2402
#, no-c-format
msgid "If the user isn't logged in, then the login form will be rendered - very straight forward so far. Now let's pretend there is a menu on the page that contains some actions which should only be accessible to users in the <literal>manager</literal> role. Here's one way that these could be written:"
msgstr "もしユーザがログインしていなければ、ログイン・フォームが表示されます（実に単純ですね）。　次に、<literal>manager</literal>ロールを持っている人達だけがアクセス可能なメニューが必要だと仮定しましょう。　このような場合の一つの方法として、下に例を示したあります。"

#. Tag: programlisting
#: Security.xml:2408
#, no-c-format
msgid ""
"<![CDATA[<h:outputLink action=\"#{reports.listManagerReports}\" rendered=\"#{s:hasRole('manager')}\">\n"
"    Manager Reports\n"
"</h:outputLink>]]>"
msgstr ""
"<![CDATA[<h:outputLink action=\"#{reports.listManagerReports}\" rendered=\"#{s:hasRole('manager')}\">\n"
"    Manager Reports\n"
"</h:outputLink>]]>"

#. Tag: para
#: Security.xml:2410
#, no-c-format
msgid "This is also quite straight forward. If the user is not a member of the <literal>manager</literal> role, then the outputLink will not be rendered. The <literal>rendered</literal> attribute can generally be used on the control itself, or on a surrounding <literal>&lt;s:div&gt;</literal> or <literal>&lt;s:span&gt;</literal> control."
msgstr "これも、大変シンプルで、ユーザが<literal>manager</literal>ロールを持っていなければ、outputLinkは描画されません。<literal>rendered</literal>属性は一般に制御そのものに使われたり、<literal>&lt;s:div&gt;</literal> や <literal>&lt;s:span&gt;</literal>の中で制御の目的に使われます。"

#. Tag: para
#: Security.xml:2417
#, no-c-format
msgid "Now for something more complex. Let's say you have a <literal>h:dataTable</literal> control on a page listing records for which you may or may not wish to render action links depending on the user's privileges. The <literal>s:hasPermission</literal> EL function allows us to pass in an object parameter which can be used to determine whether the user has the requested permission for that object or not. Here's how a dataTable with secured links might look:"
msgstr "次にもう少し複雑な例：　<literal>h:dataTable</literal>の制御用のアクションリンクの表示・非表示をユーザの権限により制御する事を考えます。　EL式<literal>s:hasPermission</literal>により、ユーザが必要な権限を持っているか否かを決定する為に必要なオブジェクトをパラメータとして渡すことが出来ます。　以下に、セキュリティを向上させたリンクを持たせた<literal>h:dataTable</literal>の例を示します。"

#. Tag: programlisting
#: Security.xml:2425
#, no-c-format
msgid ""
"<![CDATA[<h:dataTable value=\"#{clients}\" var=\"cl\">\n"
"    <h:column>\n"
"        <f:facet name=\"header\">Name</f:facet>\n"
"        #{cl.name}\n"
"    </h:column>\n"
"    <h:column>\n"
"        <f:facet name=\"header\">City</f:facet>\n"
"        #{cl.city}\n"
"    </h:column>\n"
"    <h:column>\n"
"        <f:facet name=\"header\">Action</f:facet>\n"
"        <s:link value=\"Modify Client\" action=\"#{clientAction.modify}\"\n"
"                rendered=\"#{s:hasPermission(cl,'modify')\"/>\n"
"        <s:link value=\"Delete Client\" action=\"#{clientAction.delete}\"\n"
"                rendered=\"#{s:hasPermission(cl,'delete')\"/>\n"
"    </h:column>\n"
"</h:dataTable>]]>"
msgstr ""
"<![CDATA[<h:dataTable value=\"#{clients}\" var=\"cl\">\n"
"    <h:column>\n"
"        <f:facet name=\"header\">Name</f:facet>\n"
"        #{cl.name}\n"
"    </h:column>\n"
"    <h:column>\n"
"        <f:facet name=\"header\">City</f:facet>\n"
"        #{cl.city}\n"
"    </h:column>\n"
"    <h:column>\n"
"        <f:facet name=\"header\">Action</f:facet>\n"
"        <s:link value=\"Modify Client\" action=\"#{clientAction.modify}\"\n"
"                rendered=\"#{s:hasPermission(cl,'modify')\"/>\n"
"        <s:link value=\"Delete Client\" action=\"#{clientAction.delete}\"\n"
"                rendered=\"#{s:hasPermission(cl,'delete')\"/>\n"
"    </h:column>\n"
"</h:dataTable>]]>"

#. Tag: title
#: Security.xml:2430
#, no-c-format
msgid "Securing pages"
msgstr "ページ単位のセキュリティ"

#. Tag: para
#: Security.xml:2431
#, no-c-format
msgid "Page security requires that the application is using a <literal>pages.xml</literal> file, however is extremely simple to configure. Simply include a <literal>&lt;restrict/&gt;</literal> element within the <literal>page</literal> elements that you wish to secure. If no explicit restriction is specified by the <literal>restrict</literal> element, an implied permission of <literal>/viewId.xhtml:render</literal> will be checked when the page is accessed via a non-faces (GET) request, and a permission of <literal>/viewId.xhtml:restore</literal> will be required when any JSF postback (form submission) originates from the page. Otherwise, the specified restriction will be evaluated as a standard security expression. Here's a couple of examples:"
msgstr "ページレベルのセキュリティはアプリケーションが<literal>pages.xml</literal>を使用していることが必要ですが、設定自身は非常に簡単です。単に保護したいページの <literal>page</literal>エレメントに<literal>&lt;restrict/&gt;</literal>を追加するだけです。　明示的に<literal>restrict</literal>で制限をしない場合、 当該ページに対してGETリクエストでアクセスが試みられると <literal>/viewId.xhtml:render</literal> がチェックされ、またJSFポストバック（フォームのサブミッション）に対しては <literal>/viewId.xhtml:restore</literal>権限がチェックされます。　これ以外の場合には、指定した制限について通常のセキュリティ式評価が行われます。　以下に幾つかの例を示します。 "

#. Tag: programlisting
#: Security.xml:2442
#, no-c-format
msgid ""
"<![CDATA[<page view-id=\"/settings.xhtml\">\n"
"    <restrict/>\n"
"</page>]]>"
msgstr ""
"<![CDATA[<page view-id=\"/settings.xhtml\">\n"
"    <restrict/>\n"
"</page>]]>"

#. Tag: para
#: Security.xml:2444
#, no-c-format
msgid "This page has an implied permission of <literal>/settings.xhtml:render</literal> required for non-faces requests and an implied permission of <literal>/settings.xhtml:restore</literal> for faces requests."
msgstr "このページは暗黙的に、GETリクエストに対して<literal>/settings.xhtml:render</literal>権限を要求し、フェースリクエストに対しては<literal>/settings.xhtml:restore</literal>権限を要求しています。"

#. Tag: programlisting
#: Security.xml:2449
#, no-c-format
msgid ""
"<![CDATA[<page view-id=\"/reports.xhtml\">\n"
"    <restrict>#{s:hasRole('admin')}</restrict>\n"
"</page>]]>"
msgstr ""
"<![CDATA[<page view-id=\"/reports.xhtml\">\n"
"    <restrict>#{s:hasRole('admin')}</restrict>\n"
"</page>]]>"

#. Tag: para
#: Security.xml:2451
#, no-c-format
msgid "Both faces and non-faces requests to this page require that the user is a member of the <literal>admin</literal> role."
msgstr "このページに対するfaces或いはnon-facesなリクエストはユーザが<literal>admin</literal>ロールのメンバーである事が必要です。"

#. Tag: title
#: Security.xml:2459
#, no-c-format
msgid "Securing Entities"
msgstr "エンティティのセキュリティ"

#. Tag: para
#: Security.xml:2461
#, no-c-format
msgid "Seam security also makes it possible to apply security restrictions to read, insert, update and delete actions for entities."
msgstr "Seamのセキュリティは、エンティティ単位でのread,insert,update及びdelete操作に対してのセキュリティ制約をかけることを可能にしています。"

#. Tag: para
#: Security.xml:2466
#, no-c-format
msgid "To secure all actions for an entity class, add a <literal>@Restrict</literal> annotation on the class itself:"
msgstr "エンティティクラスのアクション全部に対してセキュリティをかけたいのであれば、下のようにクラスに<literal>@Restrict</literal>アノテーションを付記します。"

#. Tag: programlisting
#: Security.xml:2471
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"@Name(\"customer\")\n"
"@Restrict\n"
"public class Customer {\n"
"  ...\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"@Name(\"customer\")\n"
"@Restrict\n"
"public class Customer {\n"
"  ...\n"
"}]]>"

#. Tag: para
#: Security.xml:2473
#, no-c-format
msgid "If no expression is specified in the <literal>@Restrict</literal> annotation, the default security check that is performed is a permission check of <literal>entity:action</literal>, where the permission target is the entity instance, and the <literal>action</literal> is either <literal>read</literal>, <literal>insert</literal>, <literal>update</literal> or <literal>delete</literal>."
msgstr "もし、<literal>@Restrict</literal>が評価式無しで付記されていれば、デフォルトとして<literal>entity:action</literal>のパーミッションがチェックされます。　ここで、パーミッションの対象はエンティティのインスタンスで、<literal>action</literal> は <literal>read</literal>, <literal>insert</literal>, <literal>update</literal> あるいは <literal>delete</literal>のいずれかです。"

#. Tag: para
#: Security.xml:2480
#, no-c-format
msgid "It is also possible to only restrict certain actions, by placing a <literal>@Restrict</literal> annotation on the relevent entity lifecycle method (annotated as follows):"
msgstr "また、下のようにエンティティのライフサイクルに<literal>@Restrict</literal> アノテーションを付記することにより、特定の操作だけに制約を課すことが出来ます。"

#. Tag: para
#: Security.xml:2487
#, no-c-format
msgid "<literal>@PostLoad</literal> - Called after an entity instance is loaded from the database. Use this method to configure a <literal>read</literal> permission."
msgstr "<literal>@PostLoad</literal> - エンティティのインスタンスがデータベースからロードされた後に呼び出されます。このメソッドは<literal>read</literal> パーミッションの設定に使用してください。"

#. Tag: para
#: Security.xml:2493
#, no-c-format
msgid "<literal>@PrePersist</literal> - Called before a new instance of the entity is inserted. Use this method to configure an <literal>insert</literal> permission."
msgstr "<literal>@PrePersist</literal> - エンティティの新規のインスタンスが (データベースに）挿入される前に呼び出されます。 このメソッドは<literal>insert</literal> パーミッションの設定に使用してください。"

#. Tag: para
#: Security.xml:2499
#, no-c-format
msgid "<literal>@PreUpdate</literal> - Called before an entity is updated. Use this method to configure an <literal>update</literal> permission."
msgstr "<literal>@PreUpdate</literal> - エンティティが更新される前に呼び出されます。 このメソッドは<literal>update</literal>パーミッションの設定に使用してください。"

#. Tag: para
#: Security.xml:2505
#, no-c-format
msgid "<literal>@PreRemove</literal> - Called before an entity is deleted. Use this method to configure a <literal>delete</literal> permission."
msgstr "<literal>@PreRemove</literal> - エンティティが削除される前に呼び出されます。 このメソッドは<literal>delete</literal>パーミッションの設定に使用してください。"

#. Tag: para
#: Security.xml:2512
#, no-c-format
msgid "Here's an example of how an entity would be configured to perform a security check for any <literal>insert</literal> operations. Please note that the method is not required to do anything, the only important thing in regard to security is how it is annotated:"
msgstr "ここでは<literal>insert</literal>操作に対してのセキュリティチェックをする為のエンティティの設定方法を示しています。　ここで注意していただきたいのは、メソッドの内容はセキュリティと関係なく、アノテーションの仕方が重要な事です。"

#. Tag: programlisting
#: Security.xml:2518
#, no-c-format
msgid ""
"<![CDATA[\n"
"  @PrePersist @Restrict\n"
"  public void prePersist() {}\n"
"   ]]>"
msgstr ""
"<![CDATA[\n"
"  @PrePersist @Restrict\n"
"  public void prePersist() {}\n"
"   ]]>"

#. Tag: title
#: Security.xml:2521
#, no-c-format
msgid "Using <literal>/META-INF/orm.xml</literal>"
msgstr "<literal>/META-INF/orm.xml</literal>の使用"

#. Tag: para
#: Security.xml:2524
#, no-c-format
msgid "You can also specify the call back method in <literal>/META-INF/orm.xml</literal>:"
msgstr "<literal>/META-INF/orm.xml</literal>にコールバックメソッドを指定する事も出来ます:"

#. Tag: programlisting
#: Security.xml:2528
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n"
"                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"                 xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\"\n"
"                 version=\"1.0\">\n"
"\n"
"   <entity class=\"Customer\">\n"
"      <pre-persist method-name=\"prePersist\" />\n"
"   </entity>\n"
"\n"
"</entity-mappings>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n"
"                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"                 xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\"\n"
"                 version=\"1.0\">\n"
"\n"
"   <entity class=\"Customer\">\n"
"      <pre-persist method-name=\"prePersist\" />\n"
"   </entity>\n"
"\n"
"</entity-mappings>]]>"

#. Tag: para
#: Security.xml:2530
#, no-c-format
msgid "Of course, you still need to annotate the <literal>prePersist()</literal> method on <literal>Customer</literal> with <literal>@Restrict</literal>"
msgstr "勿論　この場合も<literal>Customer</literal>の<literal>prePersist()</literal> メソッドに<literal>@Restrict</literal>アノテーションは必要です。"

#. Tag: para
#: Security.xml:2536
#, no-c-format
msgid "And here's an example of an entity permission rule that checks if the authenticated user is allowed to insert a new <literal>MemberBlog</literal> record (from the seamspace example). The entity for which the security check is being made is automatically inserted into the working memory (in this case <literal>MemberBlog</literal>):"
msgstr "これは、認証されているユーザが新規に<literal>MemberBlog</literal>レコードを追加する事が出来るか否かをチェックする、エンティティ権限ルールの例（サンプルソースのseamspaceのコードから）です。　セキュリティチェックの対象となるエンティティは自動的にワーキングメモリー（この場合、<literal>MemberBlog</literal>）に挿入されます。"

#. Tag: programlisting
#: Security.xml:2542
#, no-c-format
msgid ""
"<![CDATA[rule InsertMemberBlog\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  principal: Principal()\n"
"  memberBlog: MemberBlog(member : member -> (member.getUsername().equals(principal.getName())))\n"
"  check: PermissionCheck(target == memberBlog, action == \"insert\", granted == false)\n"
"then\n"
"  check.grant();\n"
"end;]]>"
msgstr ""
"<![CDATA[rule InsertMemberBlog\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  principal: Principal()\n"
"  memberBlog: MemberBlog(member : member -> (member.getUsername().equals(principal.getName())))\n"
"  check: PermissionCheck(target == memberBlog, action == \"insert\", granted == false)\n"
"then\n"
"  check.grant();\n"
"end;]]>"

#. Tag: para
#: Security.xml:2544
#, no-c-format
msgid "This rule will grant the permission <literal>memberBlog:insert</literal> if the currently authenticated user (indicated by the <literal>Principal</literal> fact) has the same name as the member for which the blog entry is being created. The \"<literal>principal: Principal()</literal>\" structure that can be seen in the example code is a variable binding - it binds the instance of the <literal>Principal</literal> object from the working memory (placed there during authentication) and assigns it to a variable called <literal>principal</literal>. Variable bindings allow the value to be referred to in other places, such as the following line which compares the member's username to the <literal>Principal</literal> name. For more details, please refer to the JBoss Rules documentation."
msgstr "このルールは<literal>Principal</literal>ファクトで示される現在の認証ユーザがブログのエントリを作成したメンバーと同じ名前であれば<literal>memberBlog:insert</literal>パーミッションを付与します。 　例示したコード中にある、構造体 \"<literal>principal: Principal()</literal>\" は認証の過程で挿入された ワーキングメモリ中の<literal>Principal</literal>オブジェクトへの変数結合で、変数<literal>principal</literal>と命名されています。　変数結合にする事により、他の場所で値が参照可能となり、下のように<literal>Principal</literal>名とメンバーのユーザ名を比較する事が出来ます。　詳細は、JBoss Rules ドキュメントを参照してください。"

#. Tag: para
#: Security.xml:2554
#, no-c-format
msgid "Finally, we need to install a listener class that integrates Seam security with your JPA provider."
msgstr "最後に、JPAプロバイダーをSeamセキュリティと統合するために、リスナークラスをインストールします。"

#. Tag: title
#: Security.xml:2560
#, no-c-format
msgid "Entity security with JPA"
msgstr "JPAでのエンティティセキュリティ"

#. Tag: para
#: Security.xml:2562
#, no-c-format
msgid "Security checks for EJB3 entity beans are performed with an <literal>EntityListener</literal>. You can install this listener by using the following <literal>META-INF/orm.xml</literal> file:"
msgstr "EJB3エンティティビーンのセキュリティチェックは<literal>EntityListener</literal>により行われ、下記のような<literal>META-INF/orm.xml</literal>の設定でリスナーをインストールすることが出来ます。"

#. Tag: programlisting
#: Security.xml:2567
#, no-c-format
msgid ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n"
"                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"                 xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\"\n"
"                 version=\"1.0\">\n"
"\n"
"    <persistence-unit-metadata>\n"
"        <persistence-unit-defaults>\n"
"            <entity-listeners>\n"
"                <entity-listener class=\"org.jboss.seam.security.EntitySecurityListener\"/>\n"
"            </entity-listeners>\n"
"        </persistence-unit-defaults>\n"
"    </persistence-unit-metadata>\n"
"\n"
"</entity-mappings>]]>"
msgstr ""
"<![CDATA[<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n"
"<entity-mappings xmlns=\"http://java.sun.com/xml/ns/persistence/orm\"\n"
"                 xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"                 xsi:schemaLocation=\"http://java.sun.com/xml/ns/persistence/orm http://java.sun.com/xml/ns/persistence/orm_1_0.xsd\"\n"
"                 version=\"1.0\">\n"
"\n"
"    <persistence-unit-metadata>\n"
"        <persistence-unit-defaults>\n"
"            <entity-listeners>\n"
"                <entity-listener class=\"org.jboss.seam.security.EntitySecurityListener\"/>\n"
"            </entity-listeners>\n"
"        </persistence-unit-defaults>\n"
"    </persistence-unit-metadata>\n"
"\n"
"</entity-mappings>]]>"

#. Tag: title
#: Security.xml:2572
#, no-c-format
msgid "Entity security with a Managed Hibernate Session"
msgstr "管理されたHibernateセッションにおけるエンティティのセキュリティ"

#. Tag: para
#: Security.xml:2574
#, no-c-format
msgid "If you are using a Hibernate <literal>SessionFactory</literal> configured via Seam, and are using annotations, or <literal>orm.xml</literal>, then you don't need to do anything special to use entity security."
msgstr "Seamで設定されるHibernateの<literal>SessionFactory</literal>とアノテーションを使用している場合、或いは<literal>orm.xml</literal>を使用している場合にはエンティティセキュリティ機能を使用するために特別な設定をする必要はありません。"

#. Tag: title
#: Security.xml:2585
#, no-c-format
msgid "Typesafe Permission Annotations"
msgstr "タイプセーフなアクセス権のアノテーション"

#. Tag: para
#: Security.xml:2587
#, no-c-format
msgid "Seam provides a number of annotations that may be used as an alternative to <literal>@Restrict</literal>, which have the added advantage of providing compile-time safety as they don't support arbitrary EL expressions in the same way that <literal>@Restrict</literal> does."
msgstr "Seamは<literal>@Restrict</literal>に代わるアノテーションを幾つか持っており、これらを使う事により<literal>@Restrict</literal>とは異なりEL式の評価を行わないので、コンパイル時の安全性を提供します。"

#. Tag: para
#: Security.xml:2593
#, no-c-format
msgid "Out of the box, Seam comes with annotations for standard CRUD-based permissions, however it is a simple matter to add your own. The following annotations are provided in the <literal>org.jboss.seam.annotations.security</literal> package:"
msgstr "Seamには標準のCRUD操作に関するパーミッション用のアノテーションが提供されていますが、独自のアノテーションを作成する事も出来ます。　以下は<literal>org.jboss.seam.annotations.security</literal>パッケージで配布されているアノテーションです。"

#. Tag: para
#: Security.xml:2600
#, no-c-format
msgid "@Insert"
msgstr "@Insert"

#. Tag: para
#: Security.xml:2603
#, no-c-format
msgid "@Read"
msgstr "@Read"

#. Tag: para
#: Security.xml:2606
#, no-c-format
msgid "@Update"
msgstr "@Update"

#. Tag: para
#: Security.xml:2609
#, no-c-format
msgid "@Delete"
msgstr "@Delete"

#. Tag: para
#: Security.xml:2613
#, no-c-format
msgid "To use these annotations, simply place them on the method or parameter for which you wish to perform a security check. If placed on a method, then they should specify a target class for which the permission will be checked. Take the following example:"
msgstr "これらのアノテーションを使うには、単にセキュリティチェックを行いたいメソッドやパラメータをアノテートするだけです。　メソッドがアノテートされた場合には、アクセス権のチェックの対象となるターゲットクラスも指定する必要があります。　以下の例を見てください。"

#. Tag: programlisting
#: Security.xml:2619
#, no-c-format
msgid ""
"<![CDATA[  @Insert(Customer.class)\n"
"  public void createCustomer() {\n"
"    ...\n"
"  }]]>"
msgstr ""
"<![CDATA[  @Insert(Customer.class)\n"
"  public void createCustomer() {\n"
"    ...\n"
"  }]]>"

#. Tag: para
#: Security.xml:2621
#, no-c-format
msgid "In this example, a permission check will be performed for the user to ensure that they have the rights to create new <literal>Customer</literal> objects. The target of the permission check will be <literal>Customer.class</literal> (the actual <literal>java.lang.Class</literal> instance itself), and the action is the lower case representation of the annotation name, which in this example is <literal>insert</literal>."
msgstr "この例ではユーザが新規の<literal>Customer</literal>オブジェクトを作成する権限があるか否かパーミッションチェックを行います。　パーミッションチェックの対象は<literal>Customer.class</literal>（<literal>java.lang.Class</literal>インスタンスそのもの）で、アクションはアノテーション名の小文字に変換されたもの、ここでは<literal>insert</literal>、となります。"

#. Tag: para
#: Security.xml:2628
#, no-c-format
msgid "It is also possible to annotate the parameters of a component method in the same way. If this is done, then it is not required to specify a permission target (as the parameter value itself will be the target of the permission check):"
msgstr "同様にコンポーネントのメソッドのパラメータに対してもアノテートする事が出来ます。　これを行った場合には、パラメータの値がアクセス権チェックの対象ですから、アクセス権のターゲットを指定する必要はありません。"

#. Tag: programlisting
#: Security.xml:2633
#, no-c-format
msgid ""
"<![CDATA[  public void updateCustomer(@Update Customer customer) {\n"
"    ...\n"
"  }]]>"
msgstr ""
"<![CDATA[  public void updateCustomer(@Update Customer customer) {\n"
"    ...\n"
"  }]]>"

#. Tag: para
#: Security.xml:2635
#, no-c-format
msgid "To create your own security annotation, you simply need to annotate it with <literal>@PermissionCheck</literal>, for example:"
msgstr "下のように、独自のセキュリティアノテーションを作る場合には、単に<literal>@PermissionCheck</literal>とアノテートするだけです。"

#. Tag: programlisting
#: Security.xml:2639
#, no-c-format
msgid ""
"<![CDATA[@Target({METHOD, PARAMETER})\n"
"@Documented\n"
"@Retention(RUNTIME)\n"
"@Inherited\n"
"@PermissionCheck\n"
"public @interface Promote {\n"
"   Class value() default void.class;\n"
"}]]>"
msgstr ""
"<![CDATA[@Target({METHOD, PARAMETER})\n"
"@Documented\n"
"@Retention(RUNTIME)\n"
"@Inherited\n"
"@PermissionCheck\n"
"public @interface Promote {\n"
"   Class value() default void.class;\n"
"}]]>"

#. Tag: para
#: Security.xml:2641
#, no-c-format
msgid "If you wish to override the default permisison action name (which is the lower case version of the annotation name) with another value, you can specify it within the <literal>@PermissionCheck</literal> annotation:"
msgstr "もしデフォルトのアクセス権アクション名（アノテーション名の小文字版）を他の値で上書きする必要があれば、<literal>@PermissionCheck</literal>アノテーション内にその値を指定することが出来ます。"

#. Tag: programlisting
#: Security.xml:2646
#, no-c-format
msgid "<![CDATA[@PermissionCheck(\"upgrade\")]]>"
msgstr "<![CDATA[@PermissionCheck(\"upgrade\")]]>"

#. Tag: title
#: Security.xml:2651
#, no-c-format
msgid "Typesafe Role Annotations"
msgstr "タイプセーフなロールのアノテーション"

#. Tag: para
#: Security.xml:2653
#, no-c-format
msgid "In addition to supporting typesafe permission annotation, Seam Security also provides typesafe role annotations that allow you to restrict access to component methods based on the role memberships of the currently authenticated user. Seam provides one such annotation out of the box, <literal>org.jboss.seam.annotations.security.Admin</literal>, used to restrict access to a method to users that are a member of the <literal>admin</literal> role (so long as your own application supports such a role). To create your own role annotations, simply meta-annotate them with <literal>org.jboss.seam.annotations.security.RoleCheck</literal>, like in the following example:"
msgstr "タイプセーフなパーミッションのアノテーションをサポートするのに加えて、Seamセキュリティはタイプセーフなロールのアノテーションを提供し、認証されているユーザがどのロールのメンバーに属しているかに基づいてコンポーネントのメソッドへのアクセスを制限する事を可能にしています。　Seamはこのようなアノテーションとして、<literal>admin</literal>ロール（アプリケーションにこのロールが設定されていれば）のメンバーに属しているユーザのみにアクセスを制限する<literal>org.jboss.seam.annotations.security.Admin</literal>を提供しています。　独自のロールのアノテーションを作成する為には、下の例のように<literal>org.jboss.seam.annotations.security.RoleCheck</literal>でメタアノテートします。"

#. Tag: programlisting
#: Security.xml:2662
#, no-c-format
msgid ""
"<![CDATA[@Target({METHOD})\n"
"@Documented\n"
"@Retention(RUNTIME)\n"
"@Inherited\n"
"@RoleCheck\n"
"public @interface User { \n"
"}]]>"
msgstr ""
"<![CDATA[@Target({METHOD})\n"
"@Documented\n"
"@Retention(RUNTIME)\n"
"@Inherited\n"
"@RoleCheck\n"
"public @interface User { \n"
"}]]>"

#. Tag: para
#: Security.xml:2664
#, no-c-format
msgid "Any methods subsequently annotated with the <literal>@User</literal> annotation as shown in the above example will be automatically intercepted and the user checked for the membership of the corresponding role name (which is the lower case version of the annotation name, in this case <literal>user</literal>)."
msgstr "上の例に示されているような<literal>@User</literal>アノテーションを持つメソッドは、呼ばれる度に自動的にインターセプトされ対応するロール名（アノテーション名を小文字に書き換えた名前ーこの場合は<literal>user</literal>）のメンバーにユーザが含まれるかチェックされます。"

#. Tag: title
#: Security.xml:2673
#, no-c-format
msgid "The Permission Authorization Model"
msgstr "パーミッション許可モデル"

#. Tag: para
#: Security.xml:2675
#, no-c-format
msgid "Seam Security provides an extensible framework for resolving application permissions. The following class diagram shows an overview of the main components of the permission framework:"
msgstr "Seamセキュリティはアプリケーションに対するパーミッションの決定に対して拡張可能なフレームワークを提供します。　下のクラスダイアグラム図にはSeamの提供するパーミッションフレームワークの主要コンポーネントについて示しています。"

#. Tag: para
#: Security.xml:2689
#, no-c-format
msgid "The relevant classes are explained in more detail in the following sections."
msgstr "関連するクラスについての詳細を以下のセクションに示します"

#. Tag: title
#: Security.xml:2694
#, no-c-format
msgid "PermissionResolver"
msgstr "パーミッションリゾルバー"

#. Tag: para
#: Security.xml:2696
#, no-c-format
msgid "This is actually an interface, which provides methods for resolving individual object permissions. Seam provides the following built-in <literal>PermissionResolver</literal> implementations, which are described in more detail later in the chapter:"
msgstr "実際には、これは個々のオブジェクトのアクセス権を決定するメソッドを提供するインターフェースです。　Seamは以下の<literal>PermissionResolver</literal>を内蔵しています。　其々の詳細はこの章の後半で説明します。"

#. Tag: para
#: Security.xml:2704
#, no-c-format
msgid "<literal>RuleBasedPermissionResolver</literal> - This permission resolver uses Drools to resolve rule-based permission checks."
msgstr "<literal>RuleBasedPermissionResolver</literal> - このパーミッションリゾルバーはDroolsを使ってルールベースのパーミッションチェックを行います"

#. Tag: para
#: Security.xml:2708
#, no-c-format
msgid "<literal>PersistentPermissionResolver</literal> - This permission resolver stores object permissions in a persistent store, such as a relational database."
msgstr "<literal>PersistentPermissionResolver</literal> - このパーミッションリゾルバーはデータベース等にパーミッションオブジェクトを保持します。"

#. Tag: title
#: Security.xml:2714
#, no-c-format
msgid "Writing your own PermissionResolver"
msgstr "独自のパーミッションリゾルバーの記述"

#. Tag: para
#: Security.xml:2716
#, no-c-format
msgid "It is very simple to implement your own permission resolver. The <literal>PermissionResolver</literal> interface defines only two methods that must be implemented, as shown by the following table. By deploying your own <literal>PermissionResolver</literal> implementation in your Seam project, it will be automatically scanned during deployment and registered with the default <literal>ResolverChain</literal>."
msgstr "独自のパーミッション・リゾルバを作成する為には、下の表にある<literal>PermissionResolver</literal>インターフェースに定義されている二つのメソッドを実装します。　独自の<literal>PermissionResolver</literal>実装をSeamプロジェクトに配備する事により、プロジェクトが配備される時（立ち上がり時）に自動的にスキャンされ<literal>ResolverChain</literal>に組み込まれます。"

#. Tag: title
#: Security.xml:2724
#, no-c-format
msgid "PermissionResolver interface"
msgstr "パーミッションリゾルバーインターフェース"

#. Tag: para
#: Security.xml:2735
#: Security.xml:3129
#: Security.xml:3750
#, no-c-format
msgid "Return type"
msgstr "戻り値の型"

#. Tag: literal
#: Security.xml:2756
#, no-c-format
msgid "hasPermission(Object target, String action)"
msgstr "hasPermission(Object target, String action)"

#. Tag: para
#: Security.xml:2760
#, no-c-format
msgid "This method must resolve whether the currently authenticated user (obtained via a call to <literal>Identity.getPrincipal()</literal>) has the permission specified by the <literal>target</literal> and <literal>action</literal> parameters. It should return <literal>true</literal> if the user has the permission, or <literal>false</literal> if they don't."
msgstr "このメソッドは<literal>Identity.getPrincipal()</literal>を呼ぶ事により得られる現在の認証されたユーザが、パラメータで渡された<literal>target</literal>と<literal>action</literal>に対してパーミッションを有するか否かを解決し、パーミッションを有すれば真を、無ければ偽を返します。"

#. Tag: literal
#: Security.xml:2772
#, no-c-format
msgid "void"
msgstr "void"

#. Tag: literal
#: Security.xml:2777
#, no-c-format
msgid "filterSetByAction(Set&lt;Object&gt; targets, String action)"
msgstr "filterSetByAction(Set&lt;Object&gt; targets, String action)"

#. Tag: para
#: Security.xml:2781
#, no-c-format
msgid "This method should remove any objects from the specified set, that would otherwise return <literal>false</literal> if passed to the <literal>hasPermission()</literal> method with the same <literal>action</literal> parameter value."
msgstr "このメソッドは特定のセットから任意のオブジェクトを削除し、もし<literal>hasPermission()</literal>メソッドに同様の<literal>action</literal>をパラメータ値として渡した場合には、偽を返します。　"

#. Tag: title
#: Security.xml:2797
#, no-c-format
msgid "ResolverChain"
msgstr "リゾルバーチェーン"

#. Tag: para
#: Security.xml:2799
#, no-c-format
msgid "A <literal>ResolverChain</literal> contains an ordered list of <literal>PermissionResolver</literal>s, for the purpose of resolving object permissions for a particular object class or permission target."
msgstr "<literal>ResolverChain</literal>は<literal>PermissionResolver</literal>sを順番に並べたリストを持っており、このリストに従い、特定のオブジェクトクラス、或いはパーミッション対象についてのパーミッションを解決します。"

#. Tag: para
#: Security.xml:2805
#, no-c-format
msgid "The following sequence diagram shows the interaction between the components of the permission framework during a permission check (explanation follows). A permission check can originate from a number of possible sources, for example - the security interceptor, the <literal>s:hasPermission</literal> EL function, or via an API call to <literal>Identity.checkPermission</literal>:"
msgstr "下のシークエンスダイアグラムにパーミッションチェック時のパーミッションフレームワーク内のコンポーネント相互の作用を示します。　パーミッションチェックは、例えば、セキュリティ・インターセプタ、EL式<literal>s:hasPermission</literal>、或いはAPI<literal>Identity.checkPermission</literal>を呼び出す等、複数の方法により呼び出されます。"

#. Tag: para
#: Security.xml:2823
#, no-c-format
msgid "1. A permission check is initiated somewhere (either in code or via an EL expression) resulting in a call to <literal>Identity.hasPermission()</literal>."
msgstr "１　パーミッションチェックはコード或いはEL式評価により<literal>Identity.hasPermission()</literal>が呼び出されることにより実行されます。"

#. Tag: para
#: Security.xml:2829
#, no-c-format
msgid "1.1. <literal>Identity</literal> invokes <literal>PermissionMapper.resolvePermission()</literal>, passing in the permission to be resolved."
msgstr "1.1. <literal>Identity</literal>は解決対象のパーミッションを<literal>PermissionMapper.resolvePermission()</literal>を渡して呼び出します。"

#. Tag: para
#: Security.xml:2836
#, no-c-format
msgid "1.1.1. <literal>PermissionMapper</literal> maintains a <literal>Map</literal> of <literal>ResolverChain</literal> instances, keyed by class. It uses this map to locate the correct <literal>ResolverChain</literal> for the permission's target object. Once it has the correct <literal>ResolverChain</literal>, it retrieves the list of <literal>PermissionResolver</literal>s it contains via a call to <literal>ResolverChain.getResolvers()</literal>."
msgstr "1.1.1. <literal>PermissionMapper</literal>はクラスによりキー付けされた<literal>ResolverChain</literal>インスタンスの<literal>Map</literal>を維持しており、パーミッションの対象オブジェクトに対応して適切な<literal>ResolverChain</literal>を選択するように管理しています。 　適切な<literal>ResolverChain</literal>を見つければ、<literal>ResolverChain.getResolvers()</literal>を呼び出し、管理している<literal>PermissionResolver</literal>sを読み込みます。"

#. Tag: para
#: Security.xml:2846
#, no-c-format
msgid "1.1.2. For each <literal>PermissionResolver</literal> in the <literal>ResolverChain</literal>, the <literal>PermissionMapper</literal> invokes its <literal>hasPermission()</literal> method, passing in the permission instance to be checked. If any of the <literal>PermissionResolver</literal>s return <literal>true</literal>, then the permission check has succeeded and the <literal>PermissionMapper</literal> also returns <literal>true</literal> to <literal>Identity</literal>. If none of the <literal>PermissionResolver</literal>s return true, then the permission check has failed."
msgstr "1.1.2. <literal>ResolverChain</literal>中の個々の<literal>PermissionResolver</literal>について<literal>PermissionMapper</literal>はパーミッションチェックの対象をパラメータとして渡して<literal>hasPermission()</literal>メソッドを呼び出します。　いずれかの<literal>PermissionResolver</literal>s が<literal>true</literal>を返せば、パーミッションチェックが成功したと見なし<literal>PermissionMapper</literal>が<literal>Identity</literal>に対して<literal>true</literal>を返します。　いずれの<literal>PermissionResolver</literal>sも<literal>true</literal>を返さなければ、　パーミッションチェックは失敗したことになります。"

#. Tag: title
#: Security.xml:2861
#, no-c-format
msgid "RuleBasedPermissionResolver"
msgstr "ルールベースのパーミッションリゾルバー"

#. Tag: para
#: Security.xml:2863
#, no-c-format
msgid "One of the built-in permission resolvers provided by Seam, <literal>RuleBasedPermissionResolver</literal> allows permissions to be evaluated based on a set of Drools (JBoss Rules) security rules. A couple of the advantages of using a rule engine are 1) a centralized location for the business logic that is used to evaluate user permissions, and 2) speed - Drools uses very efficient algorithms for evaluating large numbers of complex rules involving multiple conditions."
msgstr "Seamに内蔵されているパーミッションリゾルバーの一つ<literal>RuleBasedPermissionResolver</literal>は、Drools(JBoss Rules)によるセキュリティルールに基づいたパーミッションの評価を受け付けます。　ルールエンジンを使う事の利点は；　１）ユーザパーミッションの評価に使用されるビジネスロジックを一か所にまとめることが出来る　２）スピードーDroolは効率の良いアルゴリズムを使用し、多くの条件の元に多くの複雑なルールを評価することが可能になっています。"

#. Tag: title
#: Security.xml:2872
#, no-c-format
msgid "Requirements"
msgstr "要求条件"

#. Tag: para
#: Security.xml:2874
#, no-c-format
msgid "If using the rule-based permission features provided by Seam Security, the following jar files are required by Drools to be distributed with your project:"
msgstr "Seamセキュリティの提供するルールベースのアクセス権を使用する場合には、Droolに必要な下記のjarファイルをディストリビューション含める必要があります。"

#. Tag: para
#: Security.xml:2881
#, no-c-format
msgid "drools-compiler.jar"
msgstr "drools-compiler.jar"

#. Tag: para
#: Security.xml:2884
#, no-c-format
msgid "drools-core.jar"
msgstr "drools-core.jar"

#. Tag: para
#: Security.xml:2887
#, no-c-format
msgid "janino.jar"
msgstr "janino.jar"

#. Tag: para
#: Security.xml:2890
#, no-c-format
msgid "antlr-runtime.jar"
msgstr "antlr-runtime.jar"

#. Tag: para
#: Security.xml:2893
#, no-c-format
msgid "mvel14.jar"
msgstr "mvel14.jar"

#. Tag: title
#: Security.xml:2900
#: Security.xml:3092
#, no-c-format
msgid "Configuration"
msgstr "設定"

#. Tag: para
#: Security.xml:2902
#, no-c-format
msgid "The configuration for <literal>RuleBasedPermissionResolver</literal> requires that a Drools rule base is first configured in <literal>components.xml</literal>. By default, it expects that the rule base is named <literal>securityRules</literal>, as per the following example:"
msgstr "<literal>RuleBasedPermissionResolver</literal>を設定する為には、<literal>components.xml</literal>にDroolのルールベースが設定されている必要があります。　このルールベースは下の例のように、デフォルトで<literal>securityRules</literal>と命名されていることを仮定しています。"

#. Tag: programlisting
#: Security.xml:2908
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"              xmlns:core=\"http://jboss.com/products/seam/core\"\n"
"              xmlns:security=\"http://jboss.com/products/seam/security\"\n"
"              xmlns:drools=\"http://jboss.com/products/seam/drools\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\n"
"                  \"http://jboss.com/products/seam/core http://jboss.com/products/seam/core-2.1.xsd\n"
"                   http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.1.xsd\n"
"                   http://jboss.com/products/seam/drools http://jboss.com/products/seam/drools-2.1.xsd\"\n"
"                   http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.1.xsd\">\n"
"  \n"
"     <drools:rule-base name=\"securityRules\">\n"
"         <drools:rule-files>\n"
"             <value>/META-INF/security.drl</value>\n"
"         </drools:rule-files>\n"
"     </drools:rule-base>\n"
"  \n"
"  </components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"              xmlns:core=\"http://jboss.com/products/seam/core\"\n"
"              xmlns:security=\"http://jboss.com/products/seam/security\"\n"
"              xmlns:drools=\"http://jboss.com/products/seam/drools\"\n"
"              xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"              xsi:schemaLocation=\n"
"                  \"http://jboss.com/products/seam/core http://jboss.com/products/seam/core-2.1.xsd\n"
"                   http://jboss.com/products/seam/components http://jboss.com/products/seam/components-2.1.xsd\n"
"                   http://jboss.com/products/seam/drools http://jboss.com/products/seam/drools-2.1.xsd\"\n"
"                   http://jboss.com/products/seam/security http://jboss.com/products/seam/security-2.1.xsd\">\n"
"  \n"
"     <drools:rule-base name=\"securityRules\">\n"
"         <drools:rule-files>\n"
"             <value>/META-INF/security.drl</value>\n"
"         </drools:rule-files>\n"
"     </drools:rule-base>\n"
"  \n"
"  </components>]]>"

#. Tag: para
#: Security.xml:2910
#, no-c-format
msgid "The default rule base name can be overridden by specifying the <literal>security-rules</literal> property for <literal>RuleBasedPermissionResolver</literal>:"
msgstr "デフォルトのルールベースの名前は<literal>RuleBasedPermissionResolver</literal>の<literal>security-rules</literal>属性で上書きする事が出来ます。"

#. Tag: programlisting
#: Security.xml:2915
#, no-c-format
msgid ""
"<![CDATA[\n"
"  <security:rule-based-permission-resolver security-rules=\"#{prodSecurityRules}\"/>]]>"
msgstr ""
"<![CDATA[\n"
"  <security:rule-based-permission-resolver security-rules=\"#{prodSecurityRules}\"/>]]>"

#. Tag: para
#: Security.xml:2917
#, no-c-format
msgid "Once the <literal>RuleBase</literal> component is configured, it's time to write the security rules."
msgstr "<literal>RuleBase</literal>コンポーネントを設定したら、次にセキュリティルールの記述をします。"

#. Tag: title
#: Security.xml:2923
#, no-c-format
msgid "Writing Security Rules"
msgstr "セキュリティルールの記述"

#. Tag: para
#: Security.xml:2925
#, no-c-format
msgid "The first step to writing security rules is to create a new rule file in the <literal>/META-INF</literal> directory of your application's jar file. Usually this file would be named something like <literal>security.drl</literal>, however you can name it whatever you like as long as it is configured correspondingly in <literal>components.xml</literal>."
msgstr "セキュリティルールを作成する為には、まずアプリケーションのjarファイルの<literal>/META-INF</literal>ディレクトリ下に新規のルールファイルを作ります。　通常このファイルは<literal>security.drl</literal>のように命名されますが、<literal>components.xml</literal>に別途指定しておけば、どのようにでも命名する事が出来ます。"

#. Tag: para
#: Security.xml:2932
#, no-c-format
msgid "So what should the security rules file contain? At this stage it might be a good idea to at least skim through the Drools documentation, however to get started here's an extremely simple example:"
msgstr "セキュリティルールの内容は？　この段階ではDroolsのドキュメントから適当に拝借してくるのが良いかもしれませんが、ここでは非常に単純な例から始めてみる事にしましょう"

#. Tag: programlisting
#: Security.xml:2937
#, no-c-format
msgid ""
"<![CDATA[package MyApplicationPermissions;\n"
"  \n"
"  import org.jboss.seam.security.permission.PermissionCheck;\n"
"  import org.jboss.seam.security.Role;\n"
"  \n"
"  rule CanUserDeleteCustomers\n"
"  when\n"
"    c: PermissionCheck(target == \"customer\", action == \"delete\")\n"
"    Role(name == \"admin\")\n"
"  then\n"
"    c.grant();\n"
"  end]]>"
msgstr ""
"<![CDATA[package MyApplicationPermissions;\n"
"  \n"
"  import org.jboss.seam.security.permission.PermissionCheck;\n"
"  import org.jboss.seam.security.Role;\n"
"  \n"
"  rule CanUserDeleteCustomers\n"
"  when\n"
"    c: PermissionCheck(target == \"customer\", action == \"delete\")\n"
"    Role(name == \"admin\")\n"
"  then\n"
"    c.grant();\n"
"  end]]>"

#. Tag: para
#: Security.xml:2939
#, no-c-format
msgid "Let's break this down step by step. The first thing we see is the package declaration. A package in Drools is essentially a collection of rules. The package name can be anything you want - it doesn't relate to anything else outside the scope of the rule base."
msgstr "では、一つづつ見てゆきましょう。　最初はパッケージ宣言です。　Droolのパッケージはルールの集まりで、ルールベースの範囲外とは何ら関わりが無いので、パッケージの名前は任意で構いません。"

#. Tag: para
#: Security.xml:2945
#, no-c-format
msgid "The next thing we can notice is a couple of import statements for the <literal>PermissionCheck</literal> and <literal>Role</literal> classes. These imports inform the rules engine that we'll be referencing these classes within our rules."
msgstr "つぎに、<literal>PermissionCheck</literal>クラスと<literal>Role</literal>クラスに関する幾つかのインポート文があります。　これらのインポート文は、これから使うルールでこれらのクラスを参照する事をルールエンジンに対して伝えています。"

#. Tag: para
#: Security.xml:2951
#, no-c-format
msgid "Finally we have the code for the rule. Each rule within a package should be given a unique name (usually describing the purpose of the rule). In this case our rule is called <literal>CanUserDeleteCustomers</literal> and will be used to check whether a user is allowed to delete a customer record."
msgstr "そして、ルールの記述コード。其々のルールは、ルールごとにユニークな名前が与えられている必要があります (通常は、ルールの目的をルールの名前にします。) この例の場合、<literal>CanUserDeleteCustomers</literal>がルールの名前で、読んで字の如く、顧客レコードの削除を出来るか出来ないかのチェックに使用します。"

#. Tag: para
#: Security.xml:2957
#, no-c-format
msgid "Looking at the body of the rule definition we can notice two distinct sections. Rules have what is known as a left hand side (LHS) and a right hand side (RHS). The LHS consists of the conditional part of the rule, i.e. a list of conditions which must be satisfied for the rule to fire. The LHS is represented by the <literal>when</literal> section. The RHS is the consequence, or action section of the rule that will only be fired if all of the conditions in the LHS are met. The RHS is represented by the <literal>then</literal> section. The end of the rule is denoted by the <literal>end</literal> line."
msgstr "ルールの記述が２つの部分から成っている事がわかります。ルールは左部分 (LHS) と右部分 (RHS) として知られている部分から成り立っています。LHSは条件 (即ち、この条件を満たしていれば、、、) を規定しています。 LHSは<literal>when</literal>で表されるセクションにあり、また、RHSはLHSが満たされた場合に実行されるアクション、あるいは結果を記述しています。 RHSは<literal>then</literal>以降の部分に記述します。 また、ルールの最後は<literal>end</literal>で終了します。"

#. Tag: para
#: Security.xml:2966
#, no-c-format
msgid "If we look at the LHS of the rule, we see two conditions listed there. Let's examine the first condition:"
msgstr "ルールについてLHSを見ると、二つの条件がある事が分かります。　まづ、最初の条件を見てみましょう。"

#. Tag: programlisting
#: Security.xml:2970
#, no-c-format
msgid "<![CDATA[c: PermissionCheck(target == \"customer\", action == \"delete\")]]>"
msgstr "<![CDATA[c: PermissionCheck(target == \"customer\", action == \"delete\")]]>"

#. Tag: para
#: Security.xml:2972
#, no-c-format
msgid "In plain english, this condition is stating that there must exist a <literal>PermissionCheck</literal> object with a <literal>target</literal> property equal to \"customer\", and an <literal>action</literal> property equal to \"delete\" within the working memory."
msgstr "この条件は、簡単な英語で「ワーキングメモリ中に、<literal>target</literal>属性として\"customer\"を持ち、<literal>target</literal>属性として\"delete\"を持つ<literal>PermissionCheck</literal>オブジェクトが存在しなければならない」と示しています。"

#. Tag: para
#: Security.xml:2978
#, no-c-format
msgid "So what is the working memory? Also known as a \"stateful session\" in Drools terminology, the working memory is a session-scoped object that contains the contextual information that is required by the rules engine to make a decision about a permission check. Each time the <literal>hasPermission()</literal> method is called, a temporary <literal>PermissionCheck</literal> object, or <emphasis>Fact</emphasis>, is inserted into the working memory. This <literal>PermissionCheck</literal> corresponds exactly to the permission that is being checked, so for example if you call <literal>hasPermission(\"account\", \"create\")</literal> then a <literal>PermissionCheck</literal> object with a <literal>target</literal> equal to \"account\" and <literal>action</literal> equal to \"create\" will be inserted into the working memory for the duration of the permission check."
msgstr "ワーキングメモリって何？　Droolｓの技術用語で、ルールエンジンがパーミッションチェックをする為に必要なコンテキスト情報を保持しているセッション・スコープのオブジェクトの事を「ワーキングメモリ」と呼びます。　<literal>hasPermission()</literal>メソッドが呼ばれる都度、仮の<literal>PermissionCheck</literal>オブジェクト、或いは<emphasis>Fact</emphasis>がワーキングメモリに挿入されます。　この<literal>PermissionCheck</literal>は今からチェックされるパーミッションに対応しており、例えば<literal>hasPermission(\"account\", \"create\")</literal>を呼び出すと、<literal>target</literal>属性が \"account\"で<literal>action</literal>属性が\"create\"である<literal>PermissionCheck</literal>オブジェクトがワーキングメモリに挿入され、パーミッションチェックが終了するまで存在します。"

#. Tag: para
#: Security.xml:2990
#, no-c-format
msgid "Besides the <literal>PermissionCheck</literal> facts, there is also a <literal>org.jboss.seam.security.Role</literal> fact for each of the roles that the authenticated user is a member of. These <literal>Role</literal> facts are synchronized with the user's authenticated roles at the beginning of every permission check. As a consequence, any <literal>Role</literal> object that is inserted into the working memory during the course of a permission check will be removed before the next permission check occurs, if the authenticated user is not actually a member of that role. Besides the <literal>PermissionCheck</literal> and <literal>Role</literal> facts, the working memory also contains the <literal>java.security.Principal</literal> object that was created as a result of the authentication process."
msgstr "<literal>PermissionCheck</literal>ファクトの他に、認証されたユーザが所属するロールの<literal>org.jboss.seam.security.Role</literal>ファクトがあります。　これらの <literal>Role</literal>ファクトはパーミッションチェックの開始の都度ユーザの認証されたロールと同期されます。　従って、パーミッションチェックに使用されたワーキングメモリ中の<literal>Role</literal>オブジェクトは、もし認証されたユーザがそのロールに所属していなければ、次回のパーミッションチェックの前に削除されます。　ワーキングメモリには<literal>PermissionCheck</literal>と <literal>Role</literal>ファクトの他に認証の過程で作成された<literal>java.security.Principal</literal>オブジェクトが保持されています。"

#. Tag: para
#: Security.xml:3001
#, no-c-format
msgid "It is also possible to insert additional long-lived facts into the working memory by calling <literal>RuleBasedPermissionResolver.instance().getSecurityContext().insert()</literal>, passing the object as a parameter. The exception to this is <literal>Role</literal> objects, which as already discussed are synchronized at the start of each permission check."
msgstr "これ以外にパラメータとしてオブジェクトを渡し<literal>RuleBasedPermissionResolver.instance().getSecurityContext().insert()</literal>を呼び出すことにより、追加でワーキングメモリ中に長期に生存するファクトを挿入する事が出来ます。　例外として、先に説明したように<literal>Role</literal>オブジェクトはパーミッションチェックの都度同期されるために、はワーキングメモリ中に長期に生存するファクトとする事は出来ません。"

#. Tag: para
#: Security.xml:3008
#, no-c-format
msgid "Getting back to our simple example, we can also notice that the first line of our LHS is prefixed with <literal>c:</literal>. This is a variable binding, and is used to refer back to the object that is matched by the condition (in this case, the <literal>PermissionCheck</literal>). Moving on to the second line of our LHS, we see this:"
msgstr "先の例に戻り、LHSが<literal>c:</literal>で始まっていることに気がつくと思います。 これは、変数結合を表しており、条件のマッチングに利用されるオブジェクトへの参照を意味しています（この例の場合は<literal>PermissionCheck</literal>）。 LHSの２行目には下の記述があります。"

#. Tag: programlisting
#: Security.xml:3015
#, no-c-format
msgid "<![CDATA[Role(name == \"admin\")]]>"
msgstr "<![CDATA[Role(name == \"admin\")]]>"

#. Tag: para
#: Security.xml:3017
#, no-c-format
msgid "This condition simply states that there must be a <literal>Role</literal> object with a <literal>name</literal> of \"admin\" within the working memory. As already mentioned, user roles are inserted into the working memory at the beginning of each permission check. So, putting both conditions together, this rule is essentially saying \"I will fire if you are checking for the <literal>customer:delete</literal> permission and the user is a member of the <literal>admin</literal> role\"."
msgstr "この条件はワーキングメモリ中に\"admin\"という<literal>name</literal>の<literal>Role</literal>オブジェクトが存在しなければならない事を示しています。　先述したように、ユーザのロールはパーミッションチェックの開始の都度ワーキングメモリに挿入されますので、この条件は結果として「<literal>admin</literal>ロールに所属するユーザで<literal>customer:delete</literal>の許可を求めているのであれば、これを認めます」という事を示しています。"

#. Tag: para
#: Security.xml:3025
#, no-c-format
msgid "So what is the consequence of the rule firing? Let's take a look at the RHS of the rule:"
msgstr "ルールが適用されると、何が起こるのでしょうか？　次にルールのRHS側を見てみましょう。"

#. Tag: programlisting
#: Security.xml:3029
#, no-c-format
msgid "<![CDATA[c.grant()]]>"
msgstr "<![CDATA[c.grant()]]>"

#. Tag: para
#: Security.xml:3031
#, no-c-format
msgid "The RHS consists of Java code, and in this case is invoking the <literal>grant()</literal> method of the <literal>c</literal> object, which as already mentioned is a variable binding for the <literal>PermissionCheck</literal> object. Besides the <literal>name</literal> and <literal>action</literal> properties of the <literal>PermissionCheck</literal> object, there is also a <literal>granted</literal> property which is initially set to <literal>false</literal>. Calling <literal>grant()</literal> on a <literal>PermissionCheck</literal> sets the <literal>granted</literal> property to <literal>true</literal>, which means that the permission check was successful, allowing the user to carry out whatever action the permission check was intended for."
msgstr "RHSはJavaコードから成っており、この例の場合は<literal>c</literal>というオブジェクト (既に述べたように、<literal>PermissionCheck</literal>オブジェクトへの変数結合) の<literal>grant()</literal>メソッドが起動されます。<literal>PermissionCheck</literal>オブジェクトの<literal>name</literal>と<literal>action</literal>プロパティ以外に<literal>false</literal>に初期設定された<literal>granted</literal>プロパティが存在します。<literal>PermissionCheck</literal>の<literal>grant()</literal>を呼ぶことにより、<literal>granted</literal>プロパティは<literal>true</literal>にセットされ、パーミッションのチェックが成功し、ユーザはパーミッションで決められたアクションについて実行することが出来るようになります。"

#. Tag: title
#: Security.xml:3045
#, no-c-format
msgid "Non-String permission targets"
msgstr "非文字列のパーミッションターゲット"

#. Tag: para
#: Security.xml:3047
#, no-c-format
msgid "So far we have only seen permission checks for String-literal permission targets. It is of course also possible to write security rules for permission targets of more complex types. For example, let's say that you wish to write a security rule to allow your users to create blog comments. The following rule demonstrates how this may be expressed, by requiring the target of the permission check to be an instance of <literal>MemberBlog</literal>, and also requiring that the currently authenticated user is a member of the <literal>user</literal> role:"
msgstr "ここまで文字列型のパーミッションターゲットのチェックについて見てきました。　しかし、もっと複雑なパーミッションターゲットのセキュリティルールを記述することも可能です。　例えば、ユーザがブログにコメントを作成する事を可能にするセキュリティルールを記述する場合を考えてみましょう。　これは以下のように、パーミッションチェックの対象が<literal>MemberBlog</literal>インスタンスで、現在の認証されたユーザが<literal>user</literal>ロールのメンバーであることが必要である、と表現されます。"

#. Tag: programlisting
#: Security.xml:3056
#, no-c-format
msgid ""
"<![CDATA[rule CanCreateBlogComment\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  blog: MemberBlog()\n"
"  check: PermissionCheck(target == blog, action == \"create\", granted == false)\n"
"  Role(name == \"user\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"]]>"
msgstr ""
"<![CDATA[rule CanCreateBlogComment\n"
"  no-loop\n"
"  activation-group \"permissions\"\n"
"when\n"
"  blog: MemberBlog()\n"
"  check: PermissionCheck(target == blog, action == \"create\", granted == false)\n"
"  Role(name == \"user\")\n"
"then\n"
"  check.grant();\n"
"end\n"
"]]>"

#. Tag: title
#: Security.xml:3061
#, no-c-format
msgid "Wildcard permission checks"
msgstr "ワイルドカードによるパーミッションチェック"

#. Tag: para
#: Security.xml:3063
#, no-c-format
msgid "It is possible to implement a wildcard permission check (which allows all actions for a given permission target), by omitting the <literal>action</literal> constraint for the <literal>PermissionCheck</literal> in your rule, like this:"
msgstr "ワイルドカードを使ってパーミッションチェックを設定することも可能で、これはあるパーミッションに対して全ての操作を許可します。下のようにルールの<literal>PermissionCheck</literal>の<literal>action</literal>制約を省略することにより、実装出来ます。"

#. Tag: programlisting
#: Security.xml:3069
#, no-c-format
msgid ""
"<![CDATA[rule CanDoAnythingToCustomersIfYouAreAnAdmin\n"
"when\n"
"  c: PermissionCheck(target == \"customer\")\n"
"  Role(name == \"admin\")\n"
"then\n"
"  c.grant();\n"
"end;\n"
"        ]]>"
msgstr ""
"<![CDATA[rule CanDoAnythingToCustomersIfYouAreAnAdmin\n"
"when\n"
"  c: PermissionCheck(target == \"customer\")\n"
"  Role(name == \"admin\")\n"
"then\n"
"  c.grant();\n"
"end;\n"
"        ]]>"

#. Tag: para
#: Security.xml:3071
#, no-c-format
msgid "This rule allows users with the <literal>admin</literal> role to perform <emphasis>any</emphasis> action for any <literal>customer</literal> permission check."
msgstr "上記のルールでは、<literal>admin</literal>ロールを持つユーザは、どの<literal>customer</literal>に対しても、<emphasis>any</emphasis>操作が可能なパーミッションチェックになっています。"

#. Tag: title
#: Security.xml:3081
#, no-c-format
msgid "PersistentPermissionResolver"
msgstr "永続的パーミッションリゾルバー"

#. Tag: para
#: Security.xml:3083
#, no-c-format
msgid "Another built-in permission resolver provided by Seam, <literal>PersistentPermissionResolver</literal> allows permissions to be loaded from persistent storage, such as a relational database. This permission resolver provides ACL style instance-based security, allowing for specific object permissions to be assigned to individual users and roles. It also allows for persistent, arbitrarily-named permission targets (not necessarily object/class based) to be assigned in the same way."
msgstr "Seamに内蔵されているパーミッションリゾルバーにはこれ以外に<literal>PersistentPermissionResolver</literal>があり、これはリレーショナルデータベースのような永続的保存場所からパーミッションを読み込むことが可能で、ACLスタイルのインスタンスベースのセキュリティを提供しており、個別のユーザとロールに対して特定のパーミッションを指定する事が出来ます。　また、任意の名前のパーミッションターゲットを指定して保存する事が可能です。"

#. Tag: para
#: Security.xml:3094
#, no-c-format
msgid "Before it can be used, <literal>PersistentPermissionResolver</literal> must be configured with a valid <literal>PermissionStore</literal> in <literal>components.xml</literal>. If not configured, it will attempt to use the default permission store, <literal>JpaIdentityStore</literal> (see section further down for details). To use a permission store other than the default, configure the <literal>permission-store</literal> property as follows:"
msgstr "使用する為には<literal>components.xml</literal>に、有効な<literal>PersistentPermissionResolver</literal>を設定した<literal>PermissionStore</literal>を記述する必要があります。　設定していない場合、デフォルトのパーミッションストア<literal>JpaIdentityStore</literal>の使用を試みます。　デフォルト以外のパーミッションストアを使用する場合には<literal>permission-store</literal>属性を下のように記述します。"

#. Tag: programlisting
#: Security.xml:3102
#, no-c-format
msgid "<![CDATA[  <security:persistent-permission-resolver permission-store=\"#{myCustomPermissionStore}\"/>]]>"
msgstr "<![CDATA[  <security:persistent-permission-resolver permission-store=\"#{myCustomPermissionStore}\"/>]]>"

#. Tag: title
#: Security.xml:3107
#, no-c-format
msgid "Permission Stores"
msgstr "パーミッションストアについて"

#. Tag: para
#: Security.xml:3109
#, no-c-format
msgid "A permission store is required for <literal>PersistentPermissionResolver</literal> to connect to the backend storage where permissions are persisted. Seam provides one <literal>PermissionStore</literal> implementation out of the box, <literal>JpaPermissionStore</literal>, which is used to store permissions inside a relational database. It is possible to write your own permission store by implementing the <literal>PermissionStore</literal> interface, which defines the following methods:"
msgstr "<literal>PersistentPermissionResolver</literal>は、パーミッションを保存しているバックエンドの保存場所との接続の為にパーミッションストアを必要とします。　Seamは標準で一つの<literal>PermissionStore</literal>実装<literal>JpaPermissionStore</literal>を提供しており、リレーショナルデータベースにパーミッションを保存します。　下記のメソッドを定義している<literal>PermissionStore</literal>インターフェースを実装することにより、独自のパーミッションストアを作成する事も可能です。"

#. Tag: title
#: Security.xml:3119
#, no-c-format
msgid "PermissionStore interface"
msgstr "パーミッションストアのインターフェース"

#. Tag: literal
#: Security.xml:3145
#: Security.xml:3164
#: Security.xml:3183
#: Security.xml:3766
#: Security.xml:3785
#, no-c-format
msgid "List&lt;Permission&gt;"
msgstr "List&lt;Permission&gt;"

#. Tag: literal
#: Security.xml:3150
#: Security.xml:3790
#, no-c-format
msgid "listPermissions(Object target)"
msgstr "listPermissions(Object target)"

#. Tag: para
#: Security.xml:3154
#, no-c-format
msgid "This method should return a <literal>List</literal> of <literal>Permission</literal> objects representing all the permissions granted for the specified target object."
msgstr "このメソッドは対象のオブジェクトに付与されている全ての権限を表す<literal>Permission</literal>オブジェクトの<literal>List</literal>を返します。"

#. Tag: literal
#: Security.xml:3169
#: Security.xml:3771
#, no-c-format
msgid "listPermissions(Object target, String action)"
msgstr "listPermissions(Object target, String action)"

#. Tag: para
#: Security.xml:3173
#, no-c-format
msgid "This method should return a <literal>List</literal> of <literal>Permission</literal> objects representing all the permissions with the specified action, granted for the specified target object."
msgstr "このメソッドは対象のオブジェクトに付与されている特定のアクションに対する全ての権限を表す<literal>Permission</literal>オブジェクトの<literal>List</literal>を返します。"

#. Tag: literal
#: Security.xml:3188
#, no-c-format
msgid "listPermissions(Set&lt;Object&gt; targets, String action)"
msgstr "listPermissions(Set&lt;Object&gt; targets, String action)"

#. Tag: para
#: Security.xml:3192
#, no-c-format
msgid "This method should return a <literal>List</literal> of <literal>Permission</literal> objects representing all the permissions with the specified action, granted for the specified set of target objects."
msgstr "このメソッドは対象の一連のオブジェクトに付与されている特定のアクションに対する全ての権限を表す<literal>Permission</literal>オブジェクトの<literal>List</literal>を返します"

#. Tag: literal
#: Security.xml:3208
#, no-c-format
msgid "grantPermission(Permission)"
msgstr "grantPermission(Permission)"

#. Tag: para
#: Security.xml:3212
#, no-c-format
msgid "This method should persist the specified <literal>Permission</literal> object to the backend storage, returning true if successful."
msgstr "このメソッドは特定の<literal>Permission</literal>オブジェクトをバックエンドのストレージに保持し、成功すれば真を返します。"

#. Tag: literal
#: Security.xml:3227
#: Security.xml:3828
#, no-c-format
msgid "grantPermissions(List&lt;Permission&gt; permissions)"
msgstr "grantPermissions(List&lt;Permission&gt; permissions)"

#. Tag: para
#: Security.xml:3231
#, no-c-format
msgid "This method should persist all of the <literal>Permission</literal> objects contained in the specified <literal>List</literal>, returning true if successful."
msgstr "このメソッドは指定された <literal>List</literal>にある、全ての<literal>Permission</literal>オブジェクトをバックエンドのストレージに保持し、成功すれば真を返します。"

#. Tag: literal
#: Security.xml:3246
#: Security.xml:3847
#, no-c-format
msgid "revokePermission(Permission permission)"
msgstr "revokePermission(Permission permission)"

#. Tag: para
#: Security.xml:3250
#, no-c-format
msgid "This method should remove the specified <literal>Permission</literal> object from persistent storage."
msgstr "このメソッドは指定された<literal>Permission</literal>オブジェクトをストレージから削除します。"

#. Tag: literal
#: Security.xml:3264
#: Security.xml:3866
#, no-c-format
msgid "revokePermissions(List&lt;Permission&gt; permissions)"
msgstr "revokePermissions(List&lt;Permission&gt; permissions)"

#. Tag: para
#: Security.xml:3268
#, no-c-format
msgid "This method should remove all of the <literal>Permission</literal> objects in the specified list from persistent storage."
msgstr "このメソッドは指定されたリストにある全ての<literal>Permission</literal>オブジェクトをストレージから削除します。"

#. Tag: literal
#: Security.xml:3278
#: Security.xml:3880
#, no-c-format
msgid "List&lt;String&gt;"
msgstr "List&lt;String&gt;"

#. Tag: literal
#: Security.xml:3283
#: Security.xml:3885
#, no-c-format
msgid "listAvailableActions(Object target)"
msgstr "listAvailableActions(Object target)"

#. Tag: para
#: Security.xml:3287
#, no-c-format
msgid "This method should return a list of all the available actions (as Strings) for the class of the specified target object. It is used in conjunction with permission management to build the user interface for granting specific class permissions (see section further down)."
msgstr "このメソッドは指定された対象オブジェクトクラスに対して可能なアクション（ストリング型）のリストを返します。　特定のクラスのパーミッションを付与する為のユーザインターフェースを作成する為にパーミッション管理と共に使用されます。"

#. Tag: title
#: Security.xml:3301
#, no-c-format
msgid "JpaPermissionStore"
msgstr "JpaPermissionStoreについて"

#. Tag: para
#: Security.xml:3303
#, no-c-format
msgid "This is the default <literal>PermissionStore</literal> implementation (and the only one provided by Seam), which uses a relational database to store permissions. Before it can be used it must be configured with either one or two entity classes for storing user and role permissions. These entity classes must be annotated with a special set of security annotations to configure which properties of the entity correspond to various aspects of the permissions being stored."
msgstr "これはデフォルトの（また、Seamが提供する唯一の）<literal>PermissionStore</literal>の実装で、パーミッションの保存にリレーショナルデータベースを使用しています。　使用する為にはユーザとロールのパーミッションの保存に係る一つないし二つのエンティティクラスの設定が必要になります。　これらのエンティティクラスは保存されているレコードとエンティティの属性がパーミッションのどれに対応するのかを設定する為の特別なセキュリティに関するアノテーションでアノテートされている必要があります。"

#. Tag: para
#: Security.xml:3311
#, no-c-format
msgid "If you wish to use the same entity (i.e. a single database table) to store both user and role permissions, then only the <literal>user-permission-class</literal> property is required to be configured. If you wish to use separate tables for storing user and role permissions, then in addition to the <literal>user-permission-class</literal> property you must also configure the <literal>role-permission-class</literal> property."
msgstr "もしユーザパーミッションとロールパーミッションに同一のエンティティ（一つのDBテーブル）を使うのであれば、<literal>user-permission-class</literal>属性を設定します。　ユーザパーミッションとロールパーミッションを別々のテーブルに保持するのであれば、<literal>user-permission-class</literal>属性に加えて<literal>role-permission-class</literal>属性を設定する必要があります。"

#. Tag: para
#: Security.xml:3318
#, no-c-format
msgid "For example, to configure a single entity class to store both user and role permissions:"
msgstr "例えば、ユーザとロールのパーミッションを一つのエンティティクラスに保存するよう設定する場合"

#. Tag: programlisting
#: Security.xml:3320
#, no-c-format
msgid "<![CDATA[  <security:jpa-permission-store user-permission-class=\"com.acme.model.AccountPermission\"/>]]>"
msgstr "<![CDATA[  <security:jpa-permission-store user-permission-class=\"com.acme.model.AccountPermission\"/>]]>"

#. Tag: para
#: Security.xml:3322
#, no-c-format
msgid "To configure separate entity classes for storing user and role permissions:"
msgstr "ユーザパーミッションとロールパーミッションを別のエンティティクラスに保存する場合の設定"

#. Tag: programlisting
#: Security.xml:3324
#, no-c-format
msgid ""
"<![CDATA[  <security:jpa-permission-store user-permission-class=\"com.acme.model.UserPermission\"\n"
"    role-permission-class=\"com.acme.model.RolePermission\"/>]]>"
msgstr ""
"<![CDATA[  <security:jpa-permission-store user-permission-class=\"com.acme.model.UserPermission\"\n"
"    role-permission-class=\"com.acme.model.RolePermission\"/>]]>"

#. Tag: title
#: Security.xml:3327
#, no-c-format
msgid "Permission annotations"
msgstr "パーミッション　アノテーション"

#. Tag: para
#: Security.xml:3329
#, no-c-format
msgid "As mentioned, the entity classes that contain the user and role permissions must be configured with a special set of annotations, contained within the <literal>org.jboss.seam.annotations.security.permission</literal> package. The following table lists each of these annotations along with a description of how they are used:"
msgstr "先述のように、ユーザとロールのパーミッションを保持するエンティティクラスは<literal>org.jboss.seam.annotations.security.permission</literal>パッケージにある特別なアノテーションを設定されている必要があります。　下の表にこれらのアノテーションと、その使用方法の説明を示します。"

#. Tag: title
#: Security.xml:3336
#, no-c-format
msgid "Entity Permission annotations"
msgstr "エンティティ　パーミッション　アノテーション"

#. Tag: para
#: Security.xml:3349
#: Security.xml:3512
#, no-c-format
msgid "Target"
msgstr "ターゲット"

#. Tag: literal
#: Security.xml:3362
#, no-c-format
msgid "@PermissionTarget"
msgstr "@PermissionTarget"

#. Tag: literal
#: Security.xml:3367
#: Security.xml:3386
#: Security.xml:3405
#: Security.xml:3424
#: Security.xml:3443
#, no-c-format
msgid "FIELD,METHOD"
msgstr "フィールド、メソッド"

#. Tag: para
#: Security.xml:3371
#, no-c-format
msgid "This annotation identifies the property of the entity that will contain the permission target. The property should be of type <literal>java.lang.String</literal>."
msgstr "このアノテーションはパーミッションの対象を含んでいるエンティティの属性を示します。　この属性は<literal>java.lang.String</literal>でなければなりません。"

#. Tag: literal
#: Security.xml:3381
#, no-c-format
msgid "@PermissionAction"
msgstr "@PermissionAction"

#. Tag: para
#: Security.xml:3390
#, no-c-format
msgid "This annotation identifies the property of the entity that will contain the permission action. The property should be of type <literal>java.lang.String</literal>."
msgstr "このアノテーションはパーミッションアクションを含んでいるエンティティの属性を示します。　この属性は<literal>java.lang.String</literal>でなければなりません。"

#. Tag: literal
#: Security.xml:3400
#, no-c-format
msgid "@PermissionUser"
msgstr "@PermissionUser"

#. Tag: para
#: Security.xml:3409
#, no-c-format
msgid "This annotation identifies the property of the entity that will contain the recipient user for the permission. It should be of type <literal>java.lang.String</literal> and contain the user's username."
msgstr "このアノテーションはパーミッションの受益ユーザを含んでいるエンティティの属性を示します。　この属性は<literal>java.lang.String</literal>で、且つユーザのusernameを含んでいなければなりません。"

#. Tag: literal
#: Security.xml:3419
#, no-c-format
msgid "@PermissionRole"
msgstr "@PermissionRole"

#. Tag: para
#: Security.xml:3428
#, no-c-format
msgid "This annotation identifies the property of the entity that will contain the recipient role for the permission. It should be of type <literal>java.lang.String</literal> and contain the role name."
msgstr "このアノテーションはパーミッションの受益ロールを含んでいるエンティティの属性を示します。　この属性は<literal>java.lang.String</literal>で、且つロール名を含んでいなければなりません。"

#. Tag: literal
#: Security.xml:3438
#, no-c-format
msgid "@PermissionDiscriminator"
msgstr "@PermissionDiscriminator"

#. Tag: para
#: Security.xml:3447
#, no-c-format
msgid "This annotation should be used when the same entity/table is used to store both user and role permissions. It identifies the property of the entity that is used to discriminate between user and role permissions. By default, if the column value contains the string literal <literal>user</literal>, then the record will be treated as a user permission. If it contains the string literal <literal>role</literal>, then it will be treated as a role permission. It is also possible to override these defaults by specifying the <literal>userValue</literal> and <literal>roleValue</literal> properties within the annotation. For example, to use <literal>u</literal> and <literal>r</literal> instead of <literal>user</literal> and <literal>role</literal>, the annotation would be written like this:"
msgstr "このアノテーションはユーザとロールパーミッションを同じエンティティ（テーブル）に保存する場合に使用します。　エンティティのユーザとロールパーミッション属性の識別の為に使用します。　デフォルトで、<literal>user</literal>ストリング・リテラルを含むカラムをユーザパーミッションのコラムと見なし、<literal>role</literal>ストリング・リテラルを含むカラムをロールパーミッションのコラムと見なします。　アノテーション中で<literal>userValue</literal>と<literal>roleValue</literal>属性を指定する事により、これらのデフォルト値は上書きする事が出来ます。　例えば、<literal>user</literal>の代わりに<literal>u</literal>を、<literal>role</literal>の代わりに<literal>r</literal>を使うとすると、アノテーションは下のようになります。"

#. Tag: programlisting
#: Security.xml:3457
#, no-c-format
msgid "<![CDATA[  @PermissionDiscriminator(userValue = \"u\", roleValue = \"r\")]]>"
msgstr "<![CDATA[  @PermissionDiscriminator(userValue = \"u\", roleValue = \"r\")]]>"

#. Tag: title
#: Security.xml:3468
#, no-c-format
msgid "Example Entity"
msgstr "エンティティの例"

#. Tag: para
#: Security.xml:3470
#, no-c-format
msgid "Here is an example of an entity class that is used to store both user and role permissions. The following class can be found inside the SeamSpace example:"
msgstr "この例ではユーザとロールパーミッションが一つのエンティティクラスに保持されています。　下に示したクラスはサンプルのSeamSpaceからのものです。"

#. Tag: programlisting
#: Security.xml:3475
#, no-c-format
msgid ""
"<![CDATA[\n"
"@Entity\n"
"public class AccountPermission implements Serializable {  \n"
"   private Integer permissionId;\n"
"   private String recipient;\n"
"   private String target;\n"
"   private String action;\n"
"   private String discriminator;\n"
"   \n"
"   @Id @GeneratedValue\n"
"   public Integer getPermissionId() {\n"
"      return permissionId;\n"
"   }\n"
"   \n"
"   public void setPermissionId(Integer permissionId) {\n"
"      this.permissionId = permissionId;\n"
"   }\n"
"   \n"
"   @PermissionUser @PermissionRole\n"
"   public String getRecipient() {\n"
"      return recipient;\n"
"   }\n"
"   \n"
"   public void setRecipient(String recipient) {\n"
"      this.recipient = recipient;\n"
"   }\n"
"   \n"
"   @PermissionTarget\n"
"   public String getTarget() {\n"
"      return target;\n"
"   }\n"
"   \n"
"   public void setTarget(String target) {\n"
"      this.target = target;\n"
"   }\n"
"   \n"
"   @PermissionAction\n"
"   public String getAction() {\n"
"      return action;\n"
"   }\n"
"   \n"
"   public void setAction(String action) {\n"
"      this.action = action;\n"
"   }\n"
"   \n"
"   @PermissionDiscriminator\n"
"   public String getDiscriminator() {\n"
"      return discriminator;\n"
"   }\n"
"   \n"
"   public void setDiscriminator(String discriminator) {\n"
"      this.discriminator = discriminator;\n"
"   }\n"
"}          \n"
"          ]]>"
msgstr ""
"@Entity\n"
"@Name(\"message\")\n"
"@Scope(EVENT)\n"
"public class Message implements Serializable\n"
"{\n"
"   private Long id;\n"
"   private String title;\n"
"   private String text;\n"
"   private boolean read;\n"
"   private Date datetime;\n"
"   \n"
"   @Id @GeneratedValue\n"
"   public Long getId() {\n"
"      return id;\n"
"   }\n"
"   public void setId(Long id) {\n"
"      this.id = id;\n"
"   }\n"
"   \n"
"   @NotNull @Length(max=100)\n"
"   public String getTitle() {\n"
"      return title;\n"
"   }\n"
"   public void setTitle(String title) {\n"
"      this.title = title;\n"
"   }\n"
"   \n"
"   @NotNull @Lob\n"
"   public String getText() {\n"
"      return text;\n"
"   }\n"
"   public void setText(String text) {\n"
"      this.text = text;\n"
"   }\n"
"   \n"
"   @NotNull\n"
"   public boolean isRead() {\n"
"      return read;\n"
"   }\n"
"   public void setRead(boolean read) {\n"
"      this.read = read;\n"
"   }\n"
"   \n"
"   @NotNull \n"
"   @Basic @Temporal(TemporalType.TIMESTAMP)\n"
"   public Date getDatetime() {\n"
"      return datetime;\n"
"   }\n"
"   public void setDatetime(Date datetime) {\n"
"      this.datetime = datetime;\n"
"   }\n"
"   \n"
"}"

#. Tag: para
#: Security.xml:3477
#, no-c-format
msgid "As can be seen in the above example, the <literal>getDiscriminator()</literal> method has been annotated with the <literal>@PermissionDiscriminator</literal> annotation, to allow <literal>JpaPermissionStore</literal> to determine which records represent user permissions and which represent role permissions. In addition, it can also be seen that the <literal>getRecipient()</literal> method is annotated with both <literal>@PermissionUser</literal> and <literal>@PermissionRole</literal> annotations. This is perfectly valid, and simply means that the <literal>recipient</literal> property of the entity will either contain the name of the user or the name of the role, depending on the value of the <literal>discriminator</literal> property."
msgstr "上の例に見るように、<literal>getDiscriminator()</literal>メソッドが <literal>@PermissionDiscriminator</literal>でアノテートされ、どのレコードがユーザのパーミッションを示し、どのレコードがロールパーミッションを示しているかを<literal>JpaPermissionStore</literal>に示しています。　更に、<literal>getRecipient()</literal>メソッドが<literal>@PermissionUser</literal>と<literal>@PermissionRole</literal>でアノテートされています。　これは、間違いではなく  <literal>discriminator</literal>属性の値により、エンティティの<literal>recipient</literal>属性の内容をユーザの名前、或いはロールの名前として処理する事を示しています。"

#. Tag: title
#: Security.xml:3490
#, no-c-format
msgid "Class-specific Permission Configuration"
msgstr "クラスに特定されたパーミッションの設定"

#. Tag: para
#: Security.xml:3492
#, no-c-format
msgid "A further set of class-specific annotations can be used to configure a specific set of allowable permissions for a target class. These permissions can be found in the <literal>org.jboss.seam.annotation.security.permission</literal> package:"
msgstr "これ以外のクラス特有のアノテーションを使用して対象クラスに対して特定のパーミッションを設定する事が出来ます。　これらのパーミッションは<literal>org.jboss.seam.annotation.security.permission</literal>パッケージにあります。"

#. Tag: title
#: Security.xml:3499
#, no-c-format
msgid "Class Permission Annotations"
msgstr "クラス　パーミッション　アノテーション"

#. Tag: literal
#: Security.xml:3525
#, no-c-format
msgid "@Permissions"
msgstr "@Permissions"

#. Tag: literal
#: Security.xml:3530
#: Security.xml:3548
#, no-c-format
msgid "TYPE"
msgstr "タイプ"

#. Tag: para
#: Security.xml:3534
#, no-c-format
msgid "A container annotation, this annotation may contain an array of <literal>@Permission</literal> annotations."
msgstr "コンテナのアノテーション、　このアノテーションは<literal>@Permission</literal>の配列を含んでいます。"

#. Tag: literal
#: Security.xml:3543
#, no-c-format
msgid "@Permission"
msgstr "@Permission"

#. Tag: para
#: Security.xml:3552
#, no-c-format
msgid "This annotation defines a single allowable permission action for the target class. Its <literal>action</literal> property must be specified, and an optional <literal>mask</literal> property may also be specified if permission actions are to be persisted as bitmasked values (see next section)."
msgstr "このアノテーションでは対象クラスに対して一つのパーミッションアクションを認めています。　<literal>action</literal>属性が指定されていなければなりません。　また、ビットマスク値によるパーミッションアクションを指定する場合には <literal>mask</literal>が指定されていなければなりません。"

#. Tag: para
#: Security.xml:3564
#, no-c-format
msgid "Here's an example of the above annotations in action. The following class can also be found in the SeamSpace example:"
msgstr "この例では、上のアノテーションを使っています。　下のクラスはサンプルのSeamSpaceにもあります。"

#. Tag: programlisting
#: Security.xml:3568
#, no-c-format
msgid ""
"<![CDATA[@Permissions({\n"
"   @Permission(action = \"view\"),\n"
"   @Permission(action = \"comment\")\n"
"})\n"
"@Entity\n"
"public class MemberImage implements Serializable {]]>"
msgstr ""
"<![CDATA[@Permissions({\n"
"   @Permission(action = \"view\"),\n"
"   @Permission(action = \"comment\")\n"
"})\n"
"@Entity\n"
"public class MemberImage implements Serializable {]]>"

#. Tag: para
#: Security.xml:3570
#, no-c-format
msgid "This example demonstrates how two allowable permission actions, <literal>view</literal> and <literal>comment</literal> can be declared for the entity class <literal>MemberImage</literal>."
msgstr "この例では<literal>view</literal>と<literal>comment</literal>の二つのパーミッションアクションを<literal>MemberImage</literal>エンティティクラスに対して宣言する方法を示しています。"

#. Tag: title
#: Security.xml:3578
#, no-c-format
msgid "Permission masks"
msgstr "パーミッション　マスク"

#. Tag: para
#: Security.xml:3580
#, no-c-format
msgid "By default, multiple permissions for the same target object and recipient will be persisted as a single database record, with the <literal>action</literal> property/column containing a comma-separated list of the granted actions. To reduce the amount of physical storage required to persist a large number of permissions, it is possible to use a bitmasked integer value (instead of a comma-separated list) to store the list of permission actions."
msgstr "デフォルトでは、一つの対象オブジェクトと受益者に対する複数のパーミッションは、一つのデータベースレコードとして<literal>action</literal>属性（DBではコラム）に複数のアクションをコンマで区切って記述され、保持されます。　大量のパーミッション情報を、物理的な保存領域を抑えてデータベースに保存する為に、パーミッションアクションにコンマ区切りの文字列リストの代わりに、整数のビットマスク値を使用する事が出来ます。"

#. Tag: para
#: Security.xml:3587
#, no-c-format
msgid "For example, if recipient \"Bob\" is granted both the <literal>view</literal> and <literal>comment</literal> permissions for a particular <literal>MemberImage</literal> (an entity bean) instance, then by default the <literal>action</literal> property of the permission entity will contain \"<literal>view,comment</literal>\", representing the two granted permission actions. Alternatively, if using bitmasked values for the permission actions, as defined like so:"
msgstr "例えば、受益者 \"Bob\"が特定の<literal>MemberImage</literal>（エンティティ・ビーン）インスタンスに対して <literal>view</literal>と<literal>comment</literal>のパーミッションが付与されていた場合、パーミッション・エンティティの<literal>action</literal>属性は、二つのパーミッション・アクションを付与されていることを示し\"<literal>view,comment</literal>\"を含んでいます。　代わりに、ビットマスクをパーミッション・アクションに使用すると下のようになります。"

#. Tag: programlisting
#: Security.xml:3594
#, no-c-format
msgid ""
"<![CDATA[@Permissions({\n"
"   @Permission(action = \"view\", mask = 1),\n"
"   @Permission(action = \"comment\", mask = 2)\n"
"})\n"
"@Entity\n"
"public class MemberImage implements Serializable {]]>"
msgstr ""
"<![CDATA[@Permissions({\n"
"   @Permission(action = \"view\", mask = 1),\n"
"   @Permission(action = \"comment\", mask = 2)\n"
"})\n"
"@Entity\n"
"public class MemberImage implements Serializable {]]>"

#. Tag: para
#: Security.xml:3596
#, no-c-format
msgid "The <literal>action</literal> property will instead simply contain \"3\" (with both the 1 bit and 2 bit switched on). Obviously for a large number of allowable actions for any particular target class, the storage required for the permission records is greatly reduced by using bitmasked actions."
msgstr "<literal>action</literal>属性は、この場合単に\"3\"（bit 1 と 2 がonの状態）となります。　特定の対象クラスに対する大量のアクション許可を記述する場合には、アクションにビットマスクを使用する事により、明らかにパーミッションレコードの保存に必要な容量を圧縮する事が出来ます。"

#. Tag: para
#: Security.xml:3602
#, no-c-format
msgid "Obviously, it is very important that the <literal>mask</literal> values specified are powers of 2."
msgstr "<literal>mask</literal>の値が２のｎ乗になっている事は明らかに重要です。"

#. Tag: title
#: Security.xml:3608
#, no-c-format
msgid "Identifier Policy"
msgstr "識別子ポリシー"

#. Tag: para
#: Security.xml:3610
#, no-c-format
msgid "When storing or looking up permissions, <literal>JpaPermissionStore</literal> must be able to uniquely identify specific object instances to effectively operate on its permissions. To achieve this, an <emphasis>identifier strategy</emphasis> may be assigned to each target class for the generation of unique identifier values. Each identifier strategy implementation knows how to generate unique identifiers for a particular type of class, and it is a simple matter to create new identifier strategies."
msgstr "<literal>JpaPermissionStore</literal>は、パーミッションを保存したり、参照したりするときに対象のインスタンスのパーミッションについて効果的に操作を行うために、対象インスタンスを一意に特定できる必要があります。　これを実現する為に、ユニークなIDを生成するよう個々の対象となるクラスに対して<emphasis>identifier strategy</emphasis>がアサインされます。　其々のID戦略実装により、クラスのタイプに応じてユニークなIDの生成が行われます。"

#. Tag: para
#: Security.xml:3618
#, no-c-format
msgid "The <literal>IdentifierStrategy</literal> interface is very simple, declaring only two methods:"
msgstr "<literal>IdentifierStrategy</literal>インターフェースは大変に単純で、二つのメソッドを宣言しているだけです。"

#. Tag: programlisting
#: Security.xml:3622
#, no-c-format
msgid ""
"<![CDATA[public interface IdentifierStrategy {\n"
"   boolean canIdentify(Class targetClass);\n"
"   String getIdentifier(Object target);\n"
"}]]>"
msgstr ""
"<![CDATA[public interface IdentifierStrategy {\n"
"   boolean canIdentify(Class targetClass);\n"
"   String getIdentifier(Object target);\n"
"}]]>"

#. Tag: para
#: Security.xml:3624
#, no-c-format
msgid "The first method, <literal>canIdentify()</literal> simply returns <literal>true</literal> if the identifier strategy is capable of generating a unique identifier for the specified target class. The second method, <literal>getIdentifier()</literal> returns the unique identifier value for the specified target object."
msgstr "最初のメソッド<literal>canIdentify()</literal>は、識別子ストラテジーが指定されたターゲットクラスに対してユニークな識別子を生成可能な場合に<literal>true</literal>を返します。　第２のメソッド<literal>getIdentifier()</literal>は指定されたターゲットオブジェクトに対してユニークな識別子の値を返します。"

#. Tag: para
#: Security.xml:3630
#, no-c-format
msgid "Seam provides two <literal>IdentifierStrategy</literal> implementations, <literal>ClassIdentifierStrategy</literal> and <literal>EntityIdentifierStrategy</literal> (see next sections for details)."
msgstr "Seamは２つの<literal>IdentifierStrategy</literal>実装、<literal>ClassIdentifierStrategy</literal>と<literal>EntityIdentifierStrategy</literal>を提供しています（詳細は次のセクション）。"

#. Tag: para
#: Security.xml:3635
#, no-c-format
msgid "To explicitly configure a specific identifier strategy to use for a particular class, it should be annotated with <literal>org.jboss.seam.annotations.security.permission.Identifier</literal>, and the value should be set to a concrete implementation of the <literal>IdentifierStrategy</literal> interface. An optional <literal>name</literal> property can also be specified, the effect of which is dependent upon the actual <literal>IdentifierStrategy</literal> implementation used."
msgstr "特定のクラスに対して、特別のID戦略を使用するよう明示的に設定するには、<literal>org.jboss.seam.annotations.security.permission.Identifier</literal>アノテーションがされ、<literal>IdentifierStrategy</literal> インターフェースの実装に値が設定されている必要があります。　オプションとして<literal>name</literal>属性を指定する事も可能ですが、この指定が及ぼす効果は <literal>IdentifierStrategy</literal>の実際の実装に依存します。"

#. Tag: title
#: Security.xml:3645
#, no-c-format
msgid "ClassIdentifierStrategy"
msgstr "クラス識別子ストラテジー"

#. Tag: para
#: Security.xml:3647
#, no-c-format
msgid "This identifier strategy is used to generate unique identifiers for classes, and will use the value of the <literal>name</literal> (if specified) in the <literal>@Identifier</literal> annotation. If there is no <literal>name</literal> property provided, then it will attempt to use the component name of the class (if the class is a Seam component), or as a last resort it will create an identifier based on the name of the class (excluding the package name). For example, the identifier for the following class will be \"<literal>customer</literal>\":"
msgstr "ID戦略はクラスに対してユニークなIDを生成する為に使用し、指定してあれば<literal>@Identifier</literal>アノテーション中の <literal>name</literal>の値が使用されます。　もし、<literal>name</literal>属性が指定されていない場合には、Seamのコンポーネントであれば対象のクラスのコンポーネント名を使用するか、さもなくばパッケージ名を除くクラスの名前を使用します。　下の例にあるクラスのIDは\"<literal>customer</literal>\"となります。"

#. Tag: programlisting
#: Security.xml:3656
#, no-c-format
msgid ""
"<![CDATA[@Identifier(name = \"customer\")\n"
"public class Customer {]]>"
msgstr ""
"<![CDATA[@Identifier(name = \"customer\")\n"
"public class Customer {]]>"

#. Tag: para
#: Security.xml:3658
#, no-c-format
msgid "The identifier for the following class will be \"<literal>customerAction</literal>\":"
msgstr "以下のクラスの識別子は\"<literal>customerAction</literal>\"となります:"

#. Tag: programlisting
#: Security.xml:3662
#, no-c-format
msgid ""
"<![CDATA[@Name(\"customerAction\")\n"
"public class CustomerAction { ]]>"
msgstr ""
"<![CDATA[@Name(\"customerAction\")\n"
"public class CustomerAction { ]]>"

#. Tag: para
#: Security.xml:3664
#, no-c-format
msgid "Finally, the identifier for the following class will be \"<literal>Customer</literal>\":"
msgstr "最終的に、以下のクラスの識別子は \"<literal>Customer</literal>\"となります:"

#. Tag: programlisting
#: Security.xml:3668
#, no-c-format
msgid "<![CDATA[public class Customer { ]]>"
msgstr "<![CDATA[public class Customer { ]]>"

#. Tag: title
#: Security.xml:3673
#, no-c-format
msgid "EntityIdentifierStrategy"
msgstr "エンティティ識別子ストラテジー"

#. Tag: para
#: Security.xml:3675
#, no-c-format
msgid "This identifier strategy is used to generate unique identifiers for entity beans. It does so by concatenating the entity name (or otherwise configured name) with a string representation of the primary key value of the entity. The rules for generating the name section of the identifier are similar to <literal>ClassIdentifierStrategy</literal>. The primary key value (i.e. the <emphasis>id</emphasis> of the entity) is obtained using the <literal>PersistenceProvider</literal> component, which is able to correctly determine the value regardless of which persistence implementation is used within the Seam application. For entities not annotated with <literal>@Entity</literal>, it is necessary to explicitly configure the identifier strategy on the entity class itself, for example:"
msgstr "このID戦略はエンティティ・ビーン毎にユニークなIDを割り当てる方法で、エンティティのプライマリキーを示す文字列とエンティティの名前をつなぎ合わせて、IDを生成しています。　IDの名前セクションの生成ルールは<literal>ClassIdentifierStrategy</literal>と同様です。　プライマリキー値 (即ち、エンティティの<emphasis>id</emphasis> ) は <literal>PersistenceProvider</literal>コンポーネントを使って取得する事ができ、アプリケーションでどの永続性実装を使用しているかに依存せずに値を決める事が出来ます。　<literal>@Entity</literal>でアノテートされていないエンティティについては, エンティティクラス自身に下のように明示的にID戦略を設定する事が必要です。"

#. Tag: programlisting
#: Security.xml:3686
#, no-c-format
msgid ""
"<![CDATA[@Identifier(value = EntityIdentifierStrategy.class)\n"
"public class Customer { ]]>"
msgstr ""
"<![CDATA[@Identifier(value = EntityIdentifierStrategy.class)\n"
"public class Customer { ]]>"

#. Tag: para
#: Security.xml:3688
#, no-c-format
msgid "For an example of the type of identifier values generated, assume we have the following entity class:"
msgstr "生成される識別子の例として、下のようなエンティティクラスを考えてみる。"

#. Tag: programlisting
#: Security.xml:3692
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"public class Customer {\n"
"  private Integer id;\n"
"  private String firstName;\n"
"  private String lastName;\n"
"  \n"
"  @Id \n"
"  public Integer getId() { return id; }\n"
"  public void setId(Integer id) { this.id = id; }\n"
"  \n"
"  public String getFirstName() { return firstName; }\n"
"  public void setFirstName(String firstName) { this.firstName = firstName; }\n"
"  \n"
"  public String getLastName() { return lastName; }\n"
"  public void setLastName(String lastName) { this.lastName = lastName; }\n"
"}]]>"
msgstr ""
"<![CDATA[@Entity\n"
"public class Customer {\n"
"  private Integer id;\n"
"  private String firstName;\n"
"  private String lastName;\n"
"  \n"
"  @Id \n"
"  public Integer getId() { return id; }\n"
"  public void setId(Integer id) { this.id = id; }\n"
"  \n"
"  public String getFirstName() { return firstName; }\n"
"  public void setFirstName(String firstName) { this.firstName = firstName; }\n"
"  \n"
"  public String getLastName() { return lastName; }\n"
"  public void setLastName(String lastName) { this.lastName = lastName; }\n"
"}]]>"

#. Tag: para
#: Security.xml:3694
#, no-c-format
msgid "For a <literal>Customer</literal> instance with an <literal>id</literal> value of <literal>1</literal>, the value of the identifier would be \"<literal>Customer:1</literal>\". If the entity class is annotated with an explicit identifier name, like so:"
msgstr " <literal>id</literal>が<literal>1</literal>の<literal>Customer</literal>のインスタンスに対する識別子は\"<literal>Customer:1</literal>\"となります。　もし、エンティティクラスに明示的な識別子名のアノテーションがあれば、"

#. Tag: programlisting
#: Security.xml:3700
#, no-c-format
msgid ""
"<![CDATA[@Entity\n"
"@Identifier(name = \"cust\")\n"
"public class Customer { ]]>"
msgstr ""
"<![CDATA[@Entity\n"
"@Identifier(name = \"cust\")\n"
"public class Customer { ]]>"

#. Tag: para
#: Security.xml:3702
#, no-c-format
msgid "Then a <literal>Customer</literal> with an <literal>id</literal> value of <literal>123</literal> would have an identifier value of \"<literal>cust:123</literal>\"."
msgstr "結果として、<literal>id</literal>が<literal>123</literal>の<literal>Customer</literal>は \"<literal>cust:123</literal>\"という識別子を持つことになります。"

#. Tag: title
#: Security.xml:3715
#, no-c-format
msgid "Permission Management"
msgstr "パーミッションの管理"

#. Tag: para
#: Security.xml:3717
#, no-c-format
msgid "In much the same way that Seam Security provides an Identity Management API for the management of users and roles, it also provides a Permissions Management API for the management of persistent user permissions, via the <literal>PermissionManager</literal> component."
msgstr "Seamセキュリティでユーザとロールの管理の為に提供しているID管理APIと同様に、永続的なユーザのアクセス権の管理の為のパーミッションマネージメントAPIを <literal>PermissionManager</literal>により提供しています。"

#. Tag: title
#: Security.xml:3724
#, no-c-format
msgid "PermissionManager"
msgstr "パーミッションマネージャ"

#. Tag: para
#: Security.xml:3726
#, no-c-format
msgid "The <literal>PermissionManager</literal> component is an application-scoped Seam component that provides a number of methods for managing permissions. Before it can be used, it must be configured with a permission store (although by default it will attempt to use <literal>JpaPermissionStore</literal> if it is available). To explicitly configure a custom permission store, specify the <literal>permission-store</literal> property in components.xml:"
msgstr "<literal>PermissionManager</literal>コンポーネントはパーミッションを管理する為の多くのメソッドを持つアプリケーション・スコープのSeamのコンポーネントです。　使用する前にパーミッションストアを設定する必要があります（デフォルトで、<literal>JpaPermissionStore</literal>が存在すれば、これを使うようになります）。　明示的に別のパーミッションストアを設定する場合には、<literal>components.xml</literal>に<literal>permission-store</literal>を設定します。"

#. Tag: programlisting
#: Security.xml:3733
#, no-c-format
msgid ""
"<![CDATA[\n"
"<security:permission-manager permission-store=\"#{ldapPermissionStore}\"/>      \n"
"      ]]>"
msgstr ""
"<![CDATA[\n"
"<security:permission-manager permission-store=\"#{ldapPermissionStore}\"/>      \n"
"      ]]>"

#. Tag: para
#: Security.xml:3735
#, no-c-format
msgid "The following table describes each of the available methods provided by <literal>PermissionManager</literal>:"
msgstr "以下の表に<literal>PermissionManager</literal>の提供するメソッドの詳細を示します。"

#. Tag: title
#: Security.xml:3740
#, no-c-format
msgid "PermissionManager API methods"
msgstr "パーミッションマネージャAPIのメソッド"

#. Tag: para
#: Security.xml:3775
#: Security.xml:3794
#, no-c-format
msgid "Returns a list of <literal>Permission</literal> objects representing all of the permissions that have been granted for the specified target and action."
msgstr "指定されたターゲットとアクションに対する承認された全てのパーミッションを示す<literal>Permission</literal>オブジェクトを返します。"

#. Tag: literal
#: Security.xml:3809
#, no-c-format
msgid "grantPermission(Permission permission)"
msgstr "grantPermission(Permission permission)"

#. Tag: para
#: Security.xml:3813
#, no-c-format
msgid "Persists (grants) the specified <literal>Permission</literal> to the backend permission store. Returns true if the operation was successful."
msgstr "バックエンドのパーミッションストアに指定した<literal>Permission</literal>sをセーブする。　操作に成功した場合真を返す。"

#. Tag: para
#: Security.xml:3832
#, no-c-format
msgid "Persists (grants) the specified list of <literal>Permission</literal>s to the backend permission store. Returns true if the operation was successful."
msgstr "バックエンドのパーミッションストアに指定した複数の<literal>Permission</literal>sをセーブする。　操作に成功した場合真を返す。"

#. Tag: para
#: Security.xml:3851
#, no-c-format
msgid "Removes (revokes) the specified <literal>Permission</literal> from the backend permission store. Returns true if the operation was successful."
msgstr "バックエンドのパーミッションストアから指定した<literal>Permission</literal>sを取り除く（削除する）。操作に成功した場合真を返す。"

#. Tag: para
#: Security.xml:3870
#, no-c-format
msgid "Removes (revokes) the specified list of <literal>Permission</literal>s from the backend permission store. Returns true if the operation was successful."
msgstr "バックエンドのパーミッションストアから指定した複数の<literal>Permission</literal>sを取り除く（削除する）。　操作に成功した場合真を返す。"

#. Tag: para
#: Security.xml:3889
#, no-c-format
msgid "Returns a list of the available actions for the specified target object. The actions that this method returns are dependent on the <literal>@Permission</literal> annotations configured on the target object's class."
msgstr "対象ターゲットに対する適用可能なアクションのリストを返す。　返されるアクションはターゲットオブジェクトクラスに設定されている<literal>@Permission</literal> アノテーションに依存する。"

#. Tag: title
#: Security.xml:3904
#, no-c-format
msgid "Permission checks for PermissionManager operations"
msgstr "パーミッションマネージャー操作の為のパーミッションチェック"

#. Tag: para
#: Security.xml:3906
#, no-c-format
msgid "Invoking the methods of <literal>PermissionManager</literal> requires that the currently-authenticated user has the appropriate authorization to perform that management operation. The following table lists the required permissions that the current user must have."
msgstr "<literal>PermissionManager</literal>メソッドを起動する場合には現在の認証ユーザが当該管理操作をする為に必要な適切なパーミッションを持っている必要があります。　下の表に、現在のユーザが持っていなければならないパーミッションの一覧を示します。"

#. Tag: title
#: Security.xml:3913
#, no-c-format
msgid "Permission Management Security Permissions"
msgstr "パーミッション管理　セキュリティパーミッション"

#. Tag: literal
#: Security.xml:3937
#, no-c-format
msgid "listPermissions()"
msgstr "listPermissions()"

#. Tag: para
#: Security.xml:3941
#, no-c-format
msgid "The specified <literal>target</literal>"
msgstr "特定の<literal>target</literal>"

#. Tag: literal
#: Security.xml:3947
#, no-c-format
msgid "seam.read-permissions"
msgstr "seam.read-permissions"

#. Tag: literal
#: Security.xml:3955
#: Security.xml:3975
#, no-c-format
msgid "grantPermission()"
msgstr "grantPermission()"

#. Tag: para
#: Security.xml:3959
#, no-c-format
msgid "The target of the specified <literal>Permission</literal>, or each of the targets for the specified list of <literal>Permission</literal>s (depending on which method is called)."
msgstr "ターゲットの特定の<literal>Permission</literal>、或いは個別のターゲットの<literal>Permission</literal>sリスト（どちらのメソッドを呼ぶのかにより異なる）"

#. Tag: literal
#: Security.xml:3967
#: Security.xml:3985
#: Security.xml:4003
#, no-c-format
msgid "seam.grant-permission"
msgstr "seam.grant-permission"

#. Tag: para
#: Security.xml:3979
#: Security.xml:4015
#, no-c-format
msgid "The target of the specified <literal>Permission</literal>."
msgstr "ターゲットの特定の<literal>Permission</literal>"

#. Tag: literal
#: Security.xml:3993
#, no-c-format
msgid "grantPermissions()"
msgstr "grantPermissions()"

#. Tag: para
#: Security.xml:3997
#: Security.xml:4033
#, no-c-format
msgid "Each of the targets of the specified list of <literal>Permission</literal>s."
msgstr "それぞれのターゲットの特定の<literal>Permission</literal>s"

#. Tag: literal
#: Security.xml:4011
#, no-c-format
msgid "revokePermission()"
msgstr "revokePermission()"

#. Tag: literal
#: Security.xml:4021
#: Security.xml:4039
#, no-c-format
msgid "seam.revoke-permission"
msgstr "seam.revoke-permission"

#. Tag: literal
#: Security.xml:4029
#, no-c-format
msgid "revokePermissions()"
msgstr "revokePermissions()"

#. Tag: title
#: Security.xml:4052
#, no-c-format
msgid "SSL Security"
msgstr "SSLによるセキュリティ"

#. Tag: para
#: Security.xml:4054
#, no-c-format
msgid "Seam includes basic support for serving sensitive pages via the HTTPS protocol. This is easily configured by specifying a <literal>scheme</literal> for the page in <literal>pages.xml</literal>. The following example shows how the view <literal>/login.xhtml</literal> is configured to use HTTPS:"
msgstr "SeamはHTTPSプロトコルによるpageのセキュリティを基本的な部分についてサポートしています。 この機能は、<literal>pages.xml</literal>で必要なページについて<literal>scheme</literal>を指定することにより簡単に設定することができます。 下の例では<literal>/login.xhtml</literal>でHTTPSを使う様に設定しています。"

#. Tag: programlisting
#: Security.xml:4061
#, no-c-format
msgid "<![CDATA[<page view-id=\"/login.xhtml\" scheme=\"https\"/>]]>"
msgstr "<![CDATA[<page view-id=\"/login.xhtml\" scheme=\"https\"/>]]>"

#. Tag: para
#: Security.xml:4063
#, no-c-format
msgid "This configuration is automatically extended to both <literal>s:link</literal> and <literal>s:button</literal> JSF controls, which (when specifying the <literal>view</literal>) will also render the link using the correct protocol. Based on the previous example, the following link will use the HTTPS protocol because <literal>/login.xhtml</literal> is configured to use it:"
msgstr "また、この設定は自動的にJSFの<literal>s:link</literal>や<literal>s:button</literal>にも引き継がれ (<literal>view</literal>で指定した場合) 、リンクも正しいプロトコルで描画されます。前述の例の場合、下のようなリンクも<literal>/login.xhtml</literal>がHTTPSを使うように設定されているために、<literal>s:link</literal>先の<literal>login.xhmtl</literal>にもHTTPSがプロトコルとして使用されます。"

#. Tag: programlisting
#: Security.xml:4070
#, no-c-format
msgid "<![CDATA[<s:link view=\"/login.xhtml\" value=\"Login\"/>]]>"
msgstr "<![CDATA[<s:link view=\"/login.xhtml\" value=\"Login\"/>]]>"

#. Tag: para
#: Security.xml:4072
#, no-c-format
msgid "Browsing directly to a view when using the <emphasis>incorrect</emphasis> protocol will cause a redirect to the same view using the <emphasis>correct</emphasis> protocol. For example, browsing to a page that has <literal>scheme=\"https\"</literal> using HTTP will cause a redirect to the same page using HTTPS."
msgstr "指定されたプロトコル以外 (<emphasis>正しくない</emphasis>プロトコル) を使って、ページを見ようとすると、<emphasis>正しい</emphasis>プロトコルを使って、指定のページへリダイレクトされます。 <literal>schema=\"https\"</literal>が指定されているページにhttpでアクセスしようとすると、そのページにhttpsを使ってリダイレクトされます。"

#. Tag: para
#: Security.xml:4079
#, no-c-format
msgid "It is also possible to configure a <emphasis>default scheme</emphasis> for all pages. This is useful if you wish to use HTTPS for a only few pages. If no default scheme is specified then the normal behavior is to continue use the current scheme. So once the user accessed a page that required HTTPS, then HTTPS would continue to be used after the user navigated away to other non-HTTPS pages. (While this is good for security, it is not so great for performance!). To define HTTP as the default <literal>scheme</literal>, add this line to <literal>pages.xml</literal>:"
msgstr "全てのページに対して<emphasis>default scheme</emphasis>を設定することも可能で、一部のページに対してHTTPSを使用したい場合などに有効です。　デフォルトスキーマが設定されていない場合には、現在のスキーマを継承します。　従って、ユーザがHTTPSを必要とするページにアクセスすると、それ以降はHTTPSを必要としないページに対してもHTTPSを使ったアクセスとなります（これは、セキュリティ上は良いのですが、パフォーマンス上は問題があります）。　HTTPをデフォルトの<literal>scheme</literal>として指定する場合には次の一行を<literal>pages.xml</literal>に追加してください。"

#. Tag: programlisting
#: Security.xml:4088
#, no-c-format
msgid "<![CDATA[<page view-id=\"*\" scheme=\"http\" />]]>"
msgstr "<![CDATA[<page view-id=\"*\" scheme=\"http\" />]]>"

#. Tag: para
#: Security.xml:4090
#, no-c-format
msgid "Of course, if <emphasis>none</emphasis> of the pages in your application use HTTPS then it is not required to specify a default scheme."
msgstr "勿論、HTTPSを使う必要がなければ、デフォルトのschemaを指定する必要もありません。"

#. Tag: para
#: Security.xml:4095
#, no-c-format
msgid "You may configure Seam to automatically invalidate the current HTTP session each time the scheme changes. Just add this line to <literal>components.xml</literal>:"
msgstr "以下のように、<literal>components.xml</literal>に設定することにより、スキーマが変更になるたびに現在のHTTPセッションを自動的に無効にする事が出来ます。"

#. Tag: programlisting
#: Security.xml:4100
#, no-c-format
msgid "<![CDATA[<web:session invalidate-on-scheme-change=\"true\"/>]]>"
msgstr "<![CDATA[<web:session invalidate-on-scheme-change=\"true\"/>]]>"

#. Tag: para
#: Security.xml:4102
#, no-c-format
msgid "This option helps make your system less vulnerable to sniffing of the session id or leakage of sensitive data from pages using HTTPS to other pages using HTTP."
msgstr "このオプションはHTTPSのページから、HTTPのページへの重要データの漏れや、セッションIDの盗聴に対する脆弱性を減少させます。"

#. Tag: title
#: Security.xml:4108
#, no-c-format
msgid "Overriding the default ports"
msgstr "デフォルトのポートの上書き"

#. Tag: para
#: Security.xml:4110
#, no-c-format
msgid "If you wish to configure the HTTP and HTTPS ports manually, they may be configured in <literal>pages.xml</literal> by specifying the <literal>http-port</literal> and <literal>https-port</literal> attributes on the <literal>pages</literal> element:"
msgstr "もし個別にHTTPとHTTPSの使用を設定する必要があるのであれば、<literal>pages.xml</literal> の<literal>pages</literal> エレメントに<literal>http-port</literal> 或いは <literal>https-port</literal>を設定することにより行えます。"

#. Tag: programlisting
#: Security.xml:4116
#, no-c-format
msgid ""
"<![CDATA[\n"
"<pages xmlns=\"http://jboss.com/products/seam/pages\"\n"
"       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"       xsi:schemaLocation=\"http://jboss.com/products/seam/pages http://jboss.com/products/seam/pages-2.1.xsd\"\n"
"       no-conversation-view-id=\"/home.xhtml\"\n"
"       login-view-id=\"/login.xhtml\"\n"
"       http-port=\"8080\"\n"
"       https-port=\"8443\">      \n"
"      ]]>"
msgstr ""
"<![CDATA[\n"
"<pages xmlns=\"http://jboss.com/products/seam/pages\"\n"
"       xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n"
"       xsi:schemaLocation=\"http://jboss.com/products/seam/pages http://jboss.com/products/seam/pages-2.1.xsd\"\n"
"       no-conversation-view-id=\"/home.xhtml\"\n"
"       login-view-id=\"/login.xhtml\"\n"
"       http-port=\"8080\"\n"
"       https-port=\"8443\">      \n"
"      ]]>"

#. Tag: title
#: Security.xml:4122
#, no-c-format
msgid "CAPTCHA"
msgstr "キャプチャ"

#. Tag: para
#: Security.xml:4124
#, no-c-format
msgid "Though strictly not part of the security API, Seam provides a built-in CAPTCHA (<emphasis>C</emphasis>ompletely <emphasis>A</emphasis>utomated <emphasis>P</emphasis>ublic <emphasis>T</emphasis>uring test to tell <emphasis>C</emphasis>omputers and <emphasis>H</emphasis>umans <emphasis>A</emphasis>part) algorithm to prevent automated processes from interacting with your application."
msgstr "厳密にはセキュリティAPIの一部ではありませんが、SeamはCAPCHA(<emphasis>C</emphasis>ompletely <emphasis>A</emphasis>utomated <emphasis>P</emphasis>ublic <emphasis>T</emphasis>uring test to tell <emphasis>C</emphasis>omputers and <emphasis>H</emphasis>umans <emphasis>A</emphasis>part)アルゴリズムを内蔵しており、ウェブ上の自動システムによりアプリケーションが動作しないようにする事を可能にしています。"

#. Tag: title
#: Security.xml:4132
#, no-c-format
msgid "Configuring the CAPTCHA Servlet"
msgstr "キャプチャ　サーブレットの設定"

#. Tag: para
#: Security.xml:4133
#, no-c-format
msgid "To get up and running, it is necessary to configure the Seam Resource Servlet, which will provide the Captcha challenge images to your pages. This requires the following entry in <literal>web.xml</literal>:"
msgstr "キャプチャを起動して走らせる為には、Seamのリソースサーブレットを下のように、<literal>web.xml</literal>に設定する必要があります。これにより、アプリケーションのページにキャプチャチャレンジのイメージを提供するようになります。"

#. Tag: programlisting
#: Security.xml:4138
#, no-c-format
msgid ""
"<![CDATA[<servlet>\n"
"    <servlet-name>Seam Resource Servlet</servlet-name>\n"
"    <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>\n"
"</servlet>\n"
"\n"
"<servlet-mapping>\n"
"    <servlet-name>Seam Resource Servlet</servlet-name>\n"
"    <url-pattern>/seam/resource/*</url-pattern>\n"
"</servlet-mapping>]]>"
msgstr ""
"<![CDATA[<servlet>\n"
"    <servlet-name>Seam Resource Servlet</servlet-name>\n"
"    <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>\n"
"</servlet>\n"
"\n"
"<servlet-mapping>\n"
"    <servlet-name>Seam Resource Servlet</servlet-name>\n"
"    <url-pattern>/seam/resource/*</url-pattern>\n"
"</servlet-mapping>]]>"

#. Tag: title
#: Security.xml:4143
#, no-c-format
msgid "Adding a CAPTCHA to a form"
msgstr "キャプチャのフォームへの追加"

#. Tag: para
#: Security.xml:4145
#, no-c-format
msgid "Adding a CAPTCHA challenge to a form is extremely easy. Here's an example:"
msgstr "キャプチャチャレンジをフォームに追加するのは以下のようにいたって簡単です:"

#. Tag: programlisting
#: Security.xml:4149
#, no-c-format
msgid ""
"<![CDATA[<h:graphicImage value=\"/seam/resource/captcha\"/>\n"
"<h:inputText id=\"verifyCaptcha\" value=\"#{captcha.response}\" required=\"true\">\n"
"   <s:validate />\n"
"</h:inputText>\n"
"<h:message for=\"verifyCaptcha\"/>]]>"
msgstr ""
"<![CDATA[<h:graphicImage value=\"/seam/resource/captcha\"/>\n"
"<h:inputText id=\"verifyCaptcha\" value=\"#{captcha.response}\" required=\"true\">\n"
"   <s:validate />\n"
"</h:inputText>\n"
"<h:message for=\"verifyCaptcha\"/>]]>"

#. Tag: para
#: Security.xml:4151
#, no-c-format
msgid "That's all there is to it. The <literal>graphicImage</literal> control displays the CAPTCHA challenge, and the <literal>inputText</literal> receives the user's response. The response is automatically validated against the CAPTCHA when the form is submitted."
msgstr "これですべてです。　<literal>graphicImage</literal> がキャプチャチャレンジの表示を制御し、<literal>inputText</literal>がユーザからの入力を受け付けます。　ユーザの入力はフォームが送信された時に自動的にキャプチャと照合されます。"

#. Tag: title
#: Security.xml:4160
#, no-c-format
msgid "Customising the CAPTCHA algorithm"
msgstr "キャプチャアルゴリズムのカスタム化"

#. Tag: para
#: Security.xml:4162
#, no-c-format
msgid "You may customize the CAPTCHA algorithm by overriding the built-in component:"
msgstr "内蔵コンポーネントをオーバーライドする事により、キャプチャのアルゴリズムをカスタマイズすることが出来ます。"

#. Tag: programlisting
#: Security.xml:4166
#, no-c-format
msgid ""
"<![CDATA[@Name(\"org.jboss.seam.captcha.captcha\")\n"
"@Scope(SESSION)\n"
"public class HitchhikersCaptcha extends Captcha\n"
"{\n"
"   @Override @Create\n"
"   public void init()\n"
"   {\n"
"      setChallenge(\"What is the answer to life, the universe and everything?\");\n"
"      setCorrectResponse(\"42\");\n"
"   }\n"
"\n"
"   @Override\n"
"   public BufferedImage renderChallenge()\n"
"   {\n"
"       BufferedImage img = super.renderChallenge();\n"
"       img.getGraphics().drawOval(5, 3, 60, 14); //add an obscuring decoration\n"
"       return img;\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"org.jboss.seam.captcha.captcha\")\n"
"@Scope(SESSION)\n"
"public class HitchhikersCaptcha extends Captcha\n"
"{\n"
"   @Override @Create\n"
"   public void init()\n"
"   {\n"
"      setChallenge(\"What is the answer to life, the universe and everything?\");\n"
"      setCorrectResponse(\"42\");\n"
"   }\n"
"\n"
"   @Override\n"
"   public BufferedImage renderChallenge()\n"
"   {\n"
"       BufferedImage img = super.renderChallenge();\n"
"       img.getGraphics().drawOval(5, 3, 60, 14); //add an obscuring decoration\n"
"       return img;\n"
"   }\n"
"}]]>"

#. Tag: title
#: Security.xml:4173
#: Security.xml:4181
#, no-c-format
msgid "Security Events"
msgstr "セキュリティ　イベント"

#. Tag: para
#: Security.xml:4175
#, no-c-format
msgid "The following table describes a number of events (see <xref linkend=\"events\"/>) raised by Seam Security in response to certain security-related events."
msgstr "以下の表に、セキュリティ関連のイベントによりSeamのセキュリティで発生するイベント（<xref linkend=\"events\"/>）を一覧にしました。"

#. Tag: para
#: Security.xml:4190
#, no-c-format
msgid "Event Key"
msgstr "イベントキー"

#. Tag: literal
#: Security.xml:4203
#, no-c-format
msgid "org.jboss.seam.security.loginSuccessful"
msgstr "org.jboss.seam.security.loginSuccessful"

#. Tag: para
#: Security.xml:4207
#, no-c-format
msgid "Raised when a login attempt is successful."
msgstr "ログインに成功した時に発生"

#. Tag: literal
#: Security.xml:4215
#, no-c-format
msgid "org.jboss.seam.security.loginFailed"
msgstr "org.jboss.seam.security.loginFailed"

#. Tag: para
#: Security.xml:4219
#, no-c-format
msgid "Raised when a login attempt fails."
msgstr "ログインに失敗した時に発生"

#. Tag: literal
#: Security.xml:4227
#, no-c-format
msgid "org.jboss.seam.security.alreadyLoggedIn"
msgstr "org.jboss.seam.security.alreadyLoggedIn"

#. Tag: para
#: Security.xml:4231
#, no-c-format
msgid "Raised when a user that is already authenticated attempts to log in again."
msgstr "ユーザがすでに認証されていて再度ログインした時に発生"

#. Tag: literal
#: Security.xml:4239
#, no-c-format
msgid "org.jboss.seam.security.notLoggedIn"
msgstr "org.jboss.seam.security.notLoggedIn"

#. Tag: para
#: Security.xml:4243
#, no-c-format
msgid "Raised when a security check fails when the user is not logged in."
msgstr "ユーザがログインしていない為にセキュリティチェックに失敗した時に発生"

#. Tag: literal
#: Security.xml:4251
#, no-c-format
msgid "org.jboss.seam.security.notAuthorized"
msgstr "org.jboss.seam.security.notAuthorized"

#. Tag: para
#: Security.xml:4255
#, no-c-format
msgid "Raised when a security check fails when the user is logged in however doesn't have sufficient privileges."
msgstr "ユーザがログイン出来ても十分な特権が無くセキュリティチェックに失敗した時に発生"

#. Tag: literal
#: Security.xml:4263
#, no-c-format
msgid "org.jboss.seam.security.preAuthenticate"
msgstr "org.jboss.seam.security.preAuthenticate"

#. Tag: para
#: Security.xml:4267
#, no-c-format
msgid "Raised just prior to user authentication."
msgstr "ユーザが認証される直前に発生"

#. Tag: literal
#: Security.xml:4275
#, no-c-format
msgid "org.jboss.seam.security.postAuthenticate"
msgstr "org.jboss.seam.security.postAuthenticate"

#. Tag: para
#: Security.xml:4279
#, no-c-format
msgid "Raised just after user authentication."
msgstr "ユーザが認証された直後に発生"

#. Tag: literal
#: Security.xml:4287
#, no-c-format
msgid "org.jboss.seam.security.loggedOut"
msgstr "org.jboss.seam.security.loggedOut"

#. Tag: para
#: Security.xml:4291
#, no-c-format
msgid "Raised after the user has logged out."
msgstr "ユーザがログアウトした後に発生"

#. Tag: literal
#: Security.xml:4299
#, no-c-format
msgid "org.jboss.seam.security.credentialsUpdated"
msgstr "org.jboss.seam.security.credentialsUpdated"

#. Tag: para
#: Security.xml:4303
#, no-c-format
msgid "Raised when the user's credentials have been changed."
msgstr "ユーザの資格情報が変更された時に発生"

#. Tag: literal
#: Security.xml:4311
#, no-c-format
msgid "org.jboss.seam.security.rememberMe"
msgstr "org.jboss.seam.security.rememberMe"

#. Tag: para
#: Security.xml:4315
#, no-c-format
msgid "Raised when the Identity's rememberMe property is changed."
msgstr "IdentityのrememberMeプロパティが変更された時に発生"

#. Tag: title
#: Security.xml:4328
#, no-c-format
msgid "Run As"
msgstr "自分とは別の権限での実行"

#. Tag: para
#: Security.xml:4330
#, no-c-format
msgid "Sometimes it may be necessary to perform certain operations with elevated privileges, such as creating a new user account as an unauthenticated user. Seam Security supports such a mechanism via the <literal>RunAsOperation</literal> class. This class allows either the <literal>Principal</literal> or <literal>Subject</literal>, or the user's roles to be overridden for a single set of operations."
msgstr "場合により、上位権限で処理することが必要な場合があります（たとえば、認証されていないユーザが、新しいユーザアカウントを作成する場合）。　Seamはこのような機能を<literal>RunAsOperation</literal>クラスで提供しています。　このクラスは、限定された一組の操作に対して <literal>Principal</literal>、<literal>Subject</literal>、或いはユーザのロールを一時的に上書きする事を可能にします。"

#. Tag: para
#: Security.xml:4338
#, no-c-format
msgid "The following code example demonstrates how <literal>RunAsOperation</literal> is used, by calling its <literal>addRole()</literal> method to provide a set of roles to masquerade as for the duration of the operation. The <literal>execute()</literal> method contains the code that will be executed with the elevated privileges."
msgstr "以下のコード例では<literal>RunAsOperation</literal>の使われ方について、<literal>addRole()</literal> メソッドを呼び出して操作終了まで特定のロールを付与する方法を示します。　<literal>execute()</literal> メソッドはより上位の特権で実行する為のコードを持っています。"

#. Tag: programlisting
#: Security.xml:4345
#, no-c-format
msgid ""
"<![CDATA[    new RunAsOperation() {       \n"
"       public void execute() {\n"
"          executePrivilegedOperation();\n"
"       }         \n"
"    }.addRole(\"admin\")\n"
"     .run();]]>"
msgstr ""
"<![CDATA[    new RunAsOperation() {       \n"
"       public void execute() {\n"
"          executePrivilegedOperation();\n"
"       }         \n"
"    }.addRole(\"admin\")\n"
"     .run();]]>"

#. Tag: para
#: Security.xml:4347
#, no-c-format
msgid "In a similar way, the <literal>getPrincipal()</literal> or <literal>getSubject()</literal> methods can also be overriden to specify the <literal>Principal</literal> and <literal>Subject</literal> instances to use for the duration of the operation. Finally, the <literal>run()</literal> method is used to carry out the <literal>RunAsOperation</literal>."
msgstr "同様に<literal>getPrincipal()</literal> や <literal>getSubject()</literal>メソッドは<literal>Principal</literal>インスタンスおよび <literal>Subject</literal>インスタンスを実行中に上書きする事が出来ます。　最終的に<literal>RunAsOperation</literal>を実行する為に<literal>run()</literal>メソッドを使用します。"

#. Tag: title
#: Security.xml:4358
#, no-c-format
msgid "Extending the Identity component"
msgstr "IDコンポーネント（Identity component）の拡張"

#. Tag: para
#: Security.xml:4360
#, no-c-format
msgid "Sometimes it might be necessary to extend the Identity component if your application has special security requirements. The following example (contrived, as credentials would normally be handled by the <literal>Credentials</literal> component instead) shows an extended Identity component with an additional <literal>companyCode</literal> field. The install precendence of <literal>APPLICATION</literal> ensures that this extended Identity gets installed in preference to the built-in Identity."
msgstr "アプリケーションが特別なセキュリティを要求する場合には、Identityコンポーネントを拡張する必要がある場合があります。以下の例（説明の為のもので、通常、資格情報（クレデンシャル）は<literal>Credentials</literal>コンポーネントにより処理されます）では<literal>companyCode</literal> フィールドを追加した拡張Identityコンポーネントを示しています。<literal>APPLICATION</literal>により、拡張Identityが内蔵Identityよりも優先されてインストールされることを保証しています。"

#. Tag: programlisting
#: Security.xml:4368
#, no-c-format
msgid ""
"<![CDATA[@Name(\"org.jboss.seam.security.identity\")\n"
"@Scope(SESSION)\n"
"@Install(precedence = APPLICATION)\n"
"@BypassInterceptors\n"
"@Startup\n"
"public class CustomIdentity extends Identity\n"
"{\n"
"   private static final LogProvider log = Logging.getLogProvider(CustomIdentity.class);\n"
"\n"
"   private String companyCode;\n"
"\n"
"   public String getCompanyCode()\n"
"   {\n"
"      return companyCode;\n"
"   }\n"
"\n"
"   public void setCompanyCode(String companyCode)\n"
"   {\n"
"      this.companyCode = companyCode;\n"
"   }\n"
"\n"
"   @Override\n"
"   public String login()\n"
"   {\n"
"      log.info(\"###### CUSTOM LOGIN CALLED ######\");\n"
"      return super.login();\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"org.jboss.seam.security.identity\")\n"
"@Scope(SESSION)\n"
"@Install(precedence = APPLICATION)\n"
"@BypassInterceptors\n"
"@Startup\n"
"public class CustomIdentity extends Identity\n"
"{\n"
"   private static final LogProvider log = Logging.getLogProvider(CustomIdentity.class);\n"
"\n"
"   private String companyCode;\n"
"\n"
"   public String getCompanyCode()\n"
"   {\n"
"      return companyCode;\n"
"   }\n"
"\n"
"   public void setCompanyCode(String companyCode)\n"
"   {\n"
"      this.companyCode = companyCode;\n"
"   }\n"
"\n"
"   @Override\n"
"   public String login()\n"
"   {\n"
"      log.info(\"###### CUSTOM LOGIN CALLED ######\");\n"
"      return super.login();\n"
"   }\n"
"}]]>"

#. Tag: warning
#: Security.xml:4370
#, no-c-format
msgid "Note that an <literal>Identity</literal> component must be marked <literal>@Startup</literal>, so that it is available immediately after the <literal>SESSION</literal> context begins. Failing to do this may render certain Seam functionality inoperable in your application."
msgstr " <literal>SESSION</literal>コンテキストが開始されると同時に利用可能とする為に、<literal>Identity</literal>コンポーネントは<literal>@Startup</literal>とアノテートされている必要があることに留意してください。　これが行われていないと、Seamの幾つかの機能が動作しないことがあります。"

