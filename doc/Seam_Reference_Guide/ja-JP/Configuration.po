# translation of Configuration.po to Japanese
# Noriko Mizumoto <noriko@redhat.com>, 2007, 2008, 2009.
msgid ""
msgstr ""
"Project-Id-Version: Configuration\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2008-11-06 06:41+0000\n"
"PO-Revision-Date: 2009-03-09 10:38+1000\n"
"Last-Translator: Noriko Mizumoto <noriko@redhat.com>\n"
"Language-Team: Japanese <fedora-trans-ja@redhat.com>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: KBabel 1.11.4\n"

#. Tag: title
#: Configuration.xml:5
#, no-c-format
msgid "Configuring Seam and packaging Seam applications"
msgstr "Seam の設定と Seam アプリケーションのパッケージング"

#. Tag: para
#: Configuration.xml:6
#, no-c-format
msgid ""
"Configuration is a very boring topic and an extremely tedious pastime. "
"Unfortunately, several lines of XML are required to integrate Seam into your "
"JSF implementation and servlet container. There's no need to be too put off "
"by the following sections; you'll never need to type any of this stuff "
"yourself, since you can just copy and paste from the example applications!"
msgstr "設定とは非常につまらないトピックであり極めて退屈な作業でもあります。 残念ながら XML の数行が JSF 実装およびサーブレットコンテナへの Seam の統合に必要となります。 ただし、 次のセクションにあるようなものを独自に入力する必要はなくサンプルのアプリケーションからコピーして貼り付けるだけの作業になりますので、 それほど心配することもありません。"

#. Tag: title
#: Configuration.xml:12
#, no-c-format
msgid "Basic Seam configuration"
msgstr "Seam の基本設定"

#. Tag: para
#: Configuration.xml:14
#, no-c-format
msgid ""
"First, let's look at the basic configuration that is needed whenever we use "
"Seam with JSF."
msgstr "最初に JSF と Seam を併用する場合に常に必要となる基本の設定について見ていくことにします。"

#. Tag: title
#: Configuration.xml:17
#, no-c-format
msgid "Integrating Seam with JSF and your servlet container"
msgstr "Seam と JSF、 サーブレットコンテナとの統合"

#. Tag: para
#: Configuration.xml:19
#, no-c-format
msgid "Of course, you need a faces servlet!"
msgstr "当然 faces サーブレットが必要になります。"

#. Tag: programlisting
#: Configuration.xml:21
#, no-c-format
msgid ""
"<![CDATA[<servlet>\n"
"    <servlet-name>Faces Servlet</servlet-name>\n"
"    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"    <load-on-startup>1</load-on-startup>\n"
"</servlet>\n"
"\n"
"<servlet-mapping>\n"
"    <servlet-name>Faces Servlet</servlet-name>\n"
"    <url-pattern>*.seam</url-pattern>\n"
"</servlet-mapping>]]>"
msgstr ""
"<![CDATA[<servlet>\n"
"    <servlet-name>Faces Servlet</servlet-name>\n"
"    <servlet-class>javax.faces.webapp.FacesServlet</servlet-class>\n"
"    <load-on-startup>1</load-on-startup>\n"
"</servlet>\n"
"\n"
"<servlet-mapping>\n"
"    <servlet-name>Faces Servlet</servlet-name>\n"
"    <url-pattern>*.seam</url-pattern>\n"
"</servlet-mapping>]]>"

#. Tag: para
#: Configuration.xml:23
#, no-c-format
msgid "(You can adjust the URL pattern to suit your taste.)"
msgstr "(適宜 URL パターンを調整することができます。)"

#. Tag: para
#: Configuration.xml:25
#, no-c-format
msgid ""
"In addition, Seam requires the following entry in your <literal>web.xml</"
"literal> file:"
msgstr "また、 Seam には <literal>web.xml</literal>ファイルに次の記述も必要になります。"

#. Tag: programlisting
#: Configuration.xml:27
#, no-c-format
msgid ""
"<![CDATA[<listener>\n"
"    <listener-class>org.jboss.seam.servlet.SeamListener</listener-class>\n"
"</listener>]]>"
msgstr ""
"<![CDATA[<listener>\n"
"    <listener-class>org.jboss.seam.servlet.SeamListener</listener-class>\n"
"</listener>]]>"

#. Tag: para
#: Configuration.xml:29
#, no-c-format
msgid ""
"This listener is responsible for bootstrapping Seam, and for destroying "
"session and application contexts."
msgstr "このリスナーは Seam のブートストラップおよびセッションとアプリケーションコンテキストの破棄を行います。"

#. Tag: para
#: Configuration.xml:32
#, no-c-format
msgid ""
"Some JSF implementations have a broken implementation of server-side state "
"saving that interferes with Seam's conversation propagation. If you have "
"problems with conversation propagation during form submissions, try "
"switching to client-side state saving. You'll need this in <literal>web.xml</"
"literal>:"
msgstr ""
"JSF 実装の中には Seam の対話伝播と動作するサーバー側状態保存の実装が破損しているものがあります。 フォームサブミット中の対話伝播に関する問題が見られる場合はクライアント側状態保存に切り替えて見てください。 <literal>web.xml</"
"literal> に次が必要となります。"

#. Tag: programlisting
#: Configuration.xml:36
#, no-c-format
msgid ""
"<![CDATA[<context-param>\n"
"    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>\n"
"    <param-value>client</param-value>\n"
"</context-param>]]>"
msgstr ""
"<![CDATA[<context-param>\n"
"    <param-name>javax.faces.STATE_SAVING_METHOD</param-name>\n"
"    <param-value>client</param-value>\n"
"</context-param>]]>"

#. Tag: para
#: Configuration.xml:38
#, no-c-format
msgid ""
"There is a minor gray area in the JSF specification regarding the mutability "
"of view state values. Since Seam uses the JSF view state to back its PAGE "
"scope this can become an issue in some cases. If you're using server side "
"state saving with the JSF-RI and you want a PAGE scoped bean to keep its "
"exact value for a given view of a page you will need to specify the "
"following context-param. Otherwise if a user uses the \"back\" button a PAGE "
"scoped component will have the latest value if it has changed not the value "
"of the \"back\" page. (see <ulink url=\"https://javaserverfaces-spec-public."
"dev.java.net/issues/show_bug.cgi?id=295\"> Spec Issue </ulink> ). This "
"setting is not enabled by default because of the performance hit of "
"serializing the JSF view with every request."
msgstr ""
"ビュー状態値の変異性に関する JSF 仕様には不明瞭な部分があります。 Seam は JSF ビュー状態を使用してその PAGE スコープを支えるため、 特定の場合に問題となる可能性があります。 JSF-RI でサーバー側状態保存を使用し PAGE スコープの Bean に任意のページの特定ビューに対するその正確な値を維持させたい場合には次のコンテキストパラメータを指定する必要があります。 そうしなければ、 ユーザー−が「戻る」ボタンを使用したときに PAGE スコープのコンポーネントは最新の値を持つことになります。 つまり「戻る」ページの値から変えていればその値が使われます。  (<ulink url=\"https://javaserverfaces-spec-public."
"dev.java.net/issues/show_bug.cgi?id=295\"> 仕様に関する問題 </ulink> を参照)。 要求ごとに JSFビューのシリアライズが発生し性能に影響するため、 この設定はデフォルトでは有効にされません。"

#. Tag: programlisting
#: Configuration.xml:52
#, no-c-format
msgid ""
"<![CDATA[<context-param>\n"
"        <param-name>com.sun.faces.serializeServerState</param-name>\n"
"        <param-value>true</param-value>\n"
"</context-param>]]>"
msgstr ""
"<![CDATA[<context-param>\n"
"        <param-name>com.sun.faces.serializeServerState</param-name>\n"
"        <param-value>true</param-value>\n"
"</context-param>]]>"

#. Tag: title
#: Configuration.xml:56
#, no-c-format
msgid "Using facelets"
msgstr "facelet を使用する"

#. Tag: para
#: Configuration.xml:58
#, no-c-format
msgid ""
"If you want follow our advice and use facelets instead of JSP, add the "
"following lines to <literal>faces-config.xml</literal>:"
msgstr ""
"私たちの意見を聞き入れていただいて、JSPの替わりに faceletを使っていただけるとし"
"たら、<literal>faces-config.xml</literal>に以下の設定が必要です。"

#. Tag: programlisting
#: Configuration.xml:61
#, no-c-format
msgid ""
"<![CDATA[<application>\n"
"    <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"</application>]]>"
msgstr ""
"<![CDATA[<application>\n"
"    <view-handler>com.sun.facelets.FaceletViewHandler</view-handler>\n"
"</application>]]>"

#. Tag: para
#: Configuration.xml:63
#, no-c-format
msgid "And the following lines to <literal>web.xml</literal>:"
msgstr "そして、 <literal>web.xml</literal>に下の記述も必要です。"

#. Tag: programlisting
#: Configuration.xml:65
#, no-c-format
msgid ""
"<![CDATA[<context-param>\n"
"    <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"    <param-value>.xhtml</param-value>\n"
"</context-param>]]>"
msgstr ""
"<![CDATA[<context-param>\n"
"    <param-name>javax.faces.DEFAULT_SUFFIX</param-name>\n"
"    <param-value>.xhtml</param-value>\n"
"</context-param>]]>"

#. Tag: para
#: Configuration.xml:67
#, no-c-format
msgid ""
"If you are using facelets in JBoss AS, you'll find that facelets logging is "
"broken. Seam provides a bridge to fix this, to use it copy <literal>lib/"
"interop/jboss-seam-jul.jar</literal> to <literal>$JBOSS_HOME/server/default/"
"deploy/jboss-web.deployer/jsf-libs/</literal> and include the <literal>jboss-"
"seam-ui.jar</literal> in the <literal>WEB-INF/lib</literal> of your "
"application."
msgstr ""
"JBoss AS で facelets を使用している場合は facelets のログ機能が破損しているのに気づかれるでしょう。 Seam はこれを修正するための橋渡しを提供しています。 これを使用するには <literal>lib/"
"interop/jboss-seam-jul.jar</literal> を <literal>$JBOSS_HOME/server/default/"
"deploy/jboss-web.deployer/jsf-libs/</literal> にコピーしてから使用するアプリケーションの <literal>WEB-INF/lib</literal> に <literal>jboss-"
"seam-ui.jar</literal> を含めます。"

#. Tag: title
#: Configuration.xml:79
#, no-c-format
msgid "Seam Resource Servlet"
msgstr "Seam リソースサーブレット"

#. Tag: para
#: Configuration.xml:81
#, no-c-format
msgid ""
"The Seam Resource Servlet provides resources used by Seam Remoting, captchas "
"(see the security chapter) and some JSF UI controls. Configuring the Seam "
"Resource Servlet requires the following entry in <literal>web.xml</literal>:"
msgstr ""
"Seam リソースサーブレットは Seam Remoting 、キャプチャ (セキュリティの章を参照) "
"や JSF の UI コントロールで使用されるリソースを提供します。 Seam リソースサーブレット"
"の設定には <literal>web.xml</literal> に以下の記述が必要です。"

#. Tag: programlisting
#: Configuration.xml:85
#, no-c-format
msgid ""
"<![CDATA[<servlet>\n"
"  <servlet-name>Seam Resource Servlet</servlet-name>\n"
"  <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>\n"
"</servlet>\n"
"    \n"
"<servlet-mapping>\n"
"  <servlet-name>Seam Resource Servlet</servlet-name>\n"
"  <url-pattern>/seam/resource/*</url-pattern>\n"
"</servlet-mapping>]]>"
msgstr ""
"<![CDATA[<servlet>\n"
"  <servlet-name>Seam Resource Servlet</servlet-name>\n"
"  <servlet-class>org.jboss.seam.servlet.SeamResourceServlet</servlet-class>\n"
"</servlet>\n"
"    \n"
"<servlet-mapping>\n"
"  <servlet-name>Seam Resource Servlet</servlet-name>\n"
"  <url-pattern>/seam/resource/*</url-pattern>\n"
"</servlet-mapping>]]>"

#. Tag: title
#: Configuration.xml:89
#, no-c-format
msgid "Seam servlet filters"
msgstr "Seamサーブレットフィルタ"

#. Tag: para
#: Configuration.xml:91
#, no-c-format
msgid ""
"Seam doesn't need any servlet filters for basic operation. However, there "
"are several features which depend upon the use of filters. To make things "
"easier, Seam lets you add and configure servlet filters just like you would "
"configure other built-in Seam components. To take advantage of this feature, "
"we must first install a master filter in <literal>web.xml</literal>:"
msgstr "Seam は基本的な操作の場合はサーブレットフィルタを必要としません。 ただし、 フィルタの使用に依存する機能がいくつかあります。 Seam ではわかりやすいように他の組み込み Seam コンポーネントを設定する場合と同じようにしてサーブレットフィルタを追加したり設定することができます。 この機能を利用するにはまず <literal>web.xml</literal> にマスターフィルタをインストールする必要があります。"

#. Tag: programlisting
#: Configuration.xml:96
#, no-c-format
msgid ""
"<![CDATA[<filter>\n"
"    <filter-name>Seam Filter</filter-name>\n"
"    <filter-class>org.jboss.seam.servlet.SeamFilter</filter-class>\n"
"</filter>\n"
"\n"
"<filter-mapping>\n"
"    <filter-name>Seam Filter</filter-name>\n"
"    <url-pattern>/*</url-pattern>\n"
"</filter-mapping>]]>"
msgstr ""
"<![CDATA[<filter>\n"
"    <filter-name>Seam Filter</filter-name>\n"
"    <filter-class>org.jboss.seam.servlet.SeamFilter</filter-class>\n"
"</filter>\n"
"\n"
"<filter-mapping>\n"
"    <filter-name>Seam Filter</filter-name>\n"
"    <url-pattern>/*</url-pattern>\n"
"</filter-mapping>]]>"

#. Tag: para
#: Configuration.xml:98
#, no-c-format
msgid ""
"The Seam master filter <emphasis>must</emphasis> be the first filter "
"specified in <literal>web.xml</literal>. This ensures it is run first."
msgstr "Seam マスターフィルタは <literal>web.xml</literal> で指定される<emphasis> 一番目のフィルタでなければなりません</emphasis>。 これによりマスターフィルタが一番最初に実行されるようになります。"

#. Tag: para
#: Configuration.xml:101
#, no-c-format
msgid ""
"The Seam filters share a number of common attributes, you can set these in "
"<literal>components.xml</literal> in addition to any parameters discussed "
"below:"
msgstr "Seam フィルタはいくつかの共通の属性を持ちます。 これらに加えて以降で説明するパラメータを <literal>components.xml</literal> に設定することができます。"

#. Tag: para
#: Configuration.xml:109
#, no-c-format
msgid ""
"<literal>url-pattern</literal> &#8212; Used to specify which requests are "
"filtered, the default is all requests. <literal>url-pattern</literal> is a "
"Tomcat style pattern which allows a wildcard suffix."
msgstr "<literal>url-pattern</literal> &#8212; フィルタされる要求を指定するのに使用します。 デフォルトは全要求です。 <literal>url-pattern</literal> はワイルドカードサフィックスを許可する Tomcat スタイルのパターンになります。"

#. Tag: para
#: Configuration.xml:116
#, no-c-format
msgid ""
"<literal>regex-url-pattern</literal> &#8212; Used to specify which requests "
"are filtered, the default is all requests. <literal>regex-url-pattern</"
"literal> is a true regular expression match for request path."
msgstr ""
"<literal>regex-url-pattern</literal> &#8212; フィルタされる要求を指定するのに使用します。 デフォルトは全要求です。 <literal>regex-url-pattern</"
"literal> は要求パスにマッチする正規表現になります。"

#. Tag: para
#: Configuration.xml:123
#, no-c-format
msgid "<literal>disabled</literal> &#8212; Used to disable a built in filter."
msgstr "<literal>disabled</literal> &#8212; 組み込みのフィルタの無効化に使用します。"

#. Tag: para
#: Configuration.xml:129
#, no-c-format
msgid ""
"Note that the patterns are matched against the URI path of the request (see "
"<literal>HttpServletRequest.getURIPath()</literal>) and that the name of the "
"servlet context is removed before matching."
msgstr "パターンは要求の URI パスに対してマッチングが行われる点 (<literal>HttpServletRequest.getURIPath()</literal> を参照)、 およびサーブレットコンテキスト名はマッチングが行われる前に削除される点に注意してください。"

#. Tag: para
#: Configuration.xml:135
#, no-c-format
msgid "Adding the master filter enables the following built-in filters."
msgstr ""
"マスターフィルタを組み込むことにより、以下の組み込みフィルタを使用できるよう"
"になります。"

#. Tag: title
#: Configuration.xml:138
#, no-c-format
msgid "Exception handling"
msgstr "例外処理"

#. Tag: para
#: Configuration.xml:139
#, no-c-format
msgid ""
"This filter provides the exception mapping functionality in <literal>pages."
"xml</literal> (almost all applications will need this). It also takes care "
"of rolling back uncommitted transactions when uncaught exceptions occur. "
"(According to the Java EE specification, the web container should do this "
"automatically, but we've found that this behavior cannot be relied upon in "
"all application servers. And it is certainly not required of plain servlet "
"engines like Tomcat.)"
msgstr "このフィルタは <literal>pages.xml</literal> で例外マッピングの機能を提供します (ほぼすべてのアプリケーションでこの機能が必要とされます)。 また、 捕捉されなかった例外が発生した場合にコミットされていないトランザクションのロールバックも行います。 (Java EE 仕様によるとこれは Web コンテナによって自動的に行われるはずですが、 すべてのアプリケーションサーバーでこの動作をあてにできるわけではないことが判明しています。 また、 Tomcat のようなプレーンなサーブレットエンジンには必要ありません。)"

#. Tag: para
#: Configuration.xml:145
#, no-c-format
msgid ""
"By default, the exception handling filter will process all requests, however "
"this behavior may be adjusted by adding a <literal>&lt;web:exception-"
"filter&gt;</literal> entry to <literal>components.xml</literal>, as shown in "
"this example:"
msgstr ""
"デフォルトで、すべての要求に対して例外処理フィルタが適用されますが、下"
"のように、 <literal>components.xml</literal>に<literal>&lt;web:exception-"
"filter&gt;</literal>を記述して、 これを変更することもできます。"

#. Tag: programlisting
#: Configuration.xml:149
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:web=\"http://jboss.com/products/seam/web\">\n"
"\n"
"    <web:exception-filter url-pattern=\"*.seam\"/>\n"
"\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:web=\"http://jboss.com/products/seam/web\">\n"
"\n"
"    <web:exception-filter url-pattern=\"*.seam\"/>\n"
"\n"
"</components>]]>"

#. Tag: title
#: Configuration.xml:155
#, no-c-format
msgid "Conversation propagation with redirects"
msgstr "リダイレクトによる対話の伝搬"

#. Tag: para
#: Configuration.xml:156
#, no-c-format
msgid ""
"This filter allows Seam to propagate the conversation context across browser "
"redirects. It intercepts any browser redirects and adds a request parameter "
"that specifies the Seam conversation identifier."
msgstr ""
"このフィルタはSeamがブラウザのリダイレクトにより対話コンテキストを伝搬する事"
"を可能にします。 ブラウザリダイレクトをインタセプトし、 Seam の対話 ID "
"をパラメータに追加することにより、実現しています。"

#. Tag: para
#: Configuration.xml:160
#, no-c-format
msgid ""
"The redirect filter will process all requests by default, but this behavior "
"can also be adjusted in <literal>components.xml</literal>:"
msgstr ""
"リダイレクトフィルタも、デフォルトですべての要求を対象としますが、 "
"<literal>components.xml</literal>の記述を以下のようにして変更することが可能で"
"す。"

#. Tag: programlisting
#: Configuration.xml:163
#, no-c-format
msgid "<![CDATA[<web:redirect-filter url-pattern=\"*.seam\"/>]]>"
msgstr "<![CDATA[<web:redirect-filter url-pattern=\"*.seam\"/>]]>"

#. Tag: title
#: Configuration.xml:168
#, no-c-format
msgid "URL rewriting"
msgstr "URL のリライト"

#. Tag: para
#: Configuration.xml:169
#, no-c-format
msgid ""
"This filter allows Seam to apply URL rewriting for views based on "
"configuration in the <literal>pages.xml</literal> file. This filter is not "
"activate by default, but can be activated by adding the configuration to "
"<literal>components.xml</literal>:"
msgstr "このフィルタにより Seam は <literal>pages.xml</literal> ファイルの設定をベースとしたビューの URL 書き換えを適用することができるようになります。 このフィルタはデフォルトではアクティブにはなっていませんが、 <literal>components.xml</literal> に設定を追加することでアクティブにすることができます。"

#. Tag: programlisting
#: Configuration.xml:174
#, no-c-format
msgid "<![CDATA[<web:rewrite-filter view-mapping=\"*.seam\"/>]]>"
msgstr "<![CDATA[<web:rewrite-filter view-mapping=\"*.seam\"/>]]>"

#. Tag: para
#: Configuration.xml:177
#, no-c-format
msgid ""
"The <literal>view-mapping</literal> parameter must match the servlet mapping "
"defined for the Faces Servlet in the <literal>web.xml</literal> file. If "
"ommitted, the rewrite filter assumes the pattern <literal>*.seam</literal>."
msgstr "<literal>view-mapping</literal> パラメータは <literal>web.xml</literal> ファイルにある Faces サーブレット用に定義されたサーブレットマッピングに合致しなければなりません。 省略するとリライトフィルタはパターンが <literal>*.seam</literal> であるとみなします。"

#. Tag: title
#: Configuration.xml:184
#, no-c-format
msgid "Multipart form submissions"
msgstr "マルチパートフォームの送信"

#. Tag: para
#: Configuration.xml:185
#, no-c-format
msgid ""
"This feature is necessary when using the Seam file upload JSF control. It "
"detects multipart form requests and processes them according to the "
"multipart/form-data specification (RFC-2388). To override the default "
"settings, add the following entry to <literal>components.xml</literal>:"
msgstr ""
"この機能は Seam のファイルアップロード JSF コントロールを使用するときに必要となります。 マルチパート"
"フォームの要求を検出すると、 RFC-2388 (multipart/form-data 仕様) に従い"
"処理を行います。 デフォルトの設定をオーバーライドするためには "
"<literal>components.xml</literal>に以下の設定を追加します。"

#. Tag: programlisting
#: Configuration.xml:189
#, no-c-format
msgid ""
"<![CDATA[<web:multipart-filter create-temp-files=\"true\" \n"
"                      max-request-size=\"1000000\" \n"
"                      url-pattern=\"*.seam\"/>]]>"
msgstr ""
"<![CDATA[<web:multipart-filter create-temp-files=\"true\" \n"
"                      max-request-size=\"1000000\" \n"
"                      url-pattern=\"*.seam\"/>]]>"

#. Tag: para
#: Configuration.xml:193
#, no-c-format
msgid ""
"<literal>create-temp-files</literal> &#8212; If set to <literal>true</"
"literal>, uploaded files are written to a temporary file (instead of held in "
"memory). This may be an important consideration if large file uploads are "
"expected. The default setting is <literal>false</literal>."
msgstr ""
"<literal>create-temp-files</literal> &#8212; <literal>true</"
"literal> にセットするとアップロードされたファイルがメモリに維持される代わりにテンポラリファイルに書き込まれます。 大容量ファイルのアップロードが予期される場合は考慮すべき重要な点となるかもしれません。 デフォルト設定は <literal>false</literal> です。"

#. Tag: para
#: Configuration.xml:200
#, no-c-format
msgid ""
"<literal>max-request-size</literal> &#8212; If the size of a file upload "
"request (determined by reading the <literal>Content-Length</literal> header "
"in the request) exceeds this value, the request will be aborted. The default "
"setting is 0 (no size limit)."
msgstr "<literal>max-request-size</literal> &#8212; ファイルのアップロード要求サイズがこの値を越えると (要求内の <literal>Content-Length</literal> ヘッダーを読み取り判定される) その要求は中断されます。 デフォルト設定は 0 です (サイズ制限なし)。"

#. Tag: title
#: Configuration.xml:209
#, no-c-format
msgid "Character encoding"
msgstr "キャラクタエンコーディング"

#. Tag: para
#: Configuration.xml:210
#, no-c-format
msgid "Sets the character encoding of submitted form data."
msgstr "送信されたフォームデータのキャラクターエンコーディングをセットします。"

#. Tag: para
#: Configuration.xml:212 Configuration.xml:307
#, no-c-format
msgid ""
"This filter is not installed by default and requires an entry in "
"<literal>components.xml</literal> to enable it:"
msgstr ""
"デフォルトではこのフィルタはインストールされていませんので、"
"<literal>components.xml</literal> に以下の記述が必要です。"

#. Tag: programlisting
#: Configuration.xml:215
#, no-c-format
msgid ""
"<![CDATA[<web:character-encoding-filter encoding=\"UTF-16\" \n"
"                               override-client=\"true\" \n"
"                               url-pattern=\"*.seam\"/>]]>"
msgstr ""
"<![CDATA[<web:character-encoding-filter encoding=\"UTF-16\" \n"
"                               override-client=\"true\" \n"
"                               url-pattern=\"*.seam\"/>]]>"

#. Tag: para
#: Configuration.xml:219
#, no-c-format
msgid "<literal>encoding</literal> &#8212; The encoding to use."
msgstr "<literal>encoding</literal> &#8212; 使用するエンコーディングです。"

#. Tag: para
#: Configuration.xml:223
#, no-c-format
msgid ""
"<literal>override-client</literal> &#8212; If this is set to <literal>true</"
"literal>, the request encoding will be set to whatever is specified by "
"<literal>encoding</literal> no matter whether the request already specifies "
"an encoding or not. If set to <literal>false</literal>, the request encoding "
"will only be set if the request doesn't already specify an encoding. The "
"default setting is <literal>false</literal>."
msgstr ""
"<literal>override-client</literal> &#8212; <literal>true</"
"literal> にセットすると要求エンコーディングはその要求がすでにエンコーディングを指定しているか否かにかかわらず <literal>encoding</literal> で指定されているものにセットされます。 <literal>false</literal> にセットすると要求エンコーディングは要求がまだエンコーディングを指定していない場合にのみセットされます。 デフォルト設定は <literal>false</literal> です。"

#. Tag: title
#: Configuration.xml:234
#, no-c-format
msgid "RichFaces"
msgstr "RichFaces"

#. Tag: para
#: Configuration.xml:236
#, no-c-format
msgid ""
"If RichFaces is used in your project, Seam will install the RichFaces Ajax "
"filter for you, making sure to install it before all other built-in filters. "
"You don't need to install the RichFaces Ajax filter in <literal>web.xml</"
"literal> yourself."
msgstr "RichFaces をプロジェクトに使用すると Seam は RichFaces Ajax フィルタをインストールしてその他すべての組み込みフィルタより先にこのフィルタがインストールされるようにします。 <literal>web.xml</literal> に手作業で RichFaces Ajax をインストールする必要はありません。"

#. Tag: para
#: Configuration.xml:244
#, no-c-format
msgid ""
"The RichFaces Ajax filter is only installed if the RichFaces jars are "
"present in your project."
msgstr "RichFaces Ajax フィルタは RichFaces jar 群がプロジェクトにある場合にのみインストールされます。"

#. Tag: para
#: Configuration.xml:249
#, no-c-format
msgid ""
"To override the default settings, add the following entry to "
"<literal>components.xml</literal>. The options are the same as those "
"specified in the RichFaces Developer Guide:"
msgstr "デフォルトの設定を上書きするには次のエントリを <literal>components.xml</literal> に追加します。 オプションは RichFaces Developer Guide に記載されているものと同じです。"

#. Tag: programlisting
#: Configuration.xml:252
#, no-c-format
msgid ""
"<![CDATA[<web:ajax4jsf-filter force-parser=\"true\" \n"
"                     enable-cache=\"true\" \n"
"                     log4j-init-file=\"custom-log4j.xml\"\n"
"                     url-pattern=\"*.seam\"/>]]>"
msgstr ""
"<![CDATA[<web:ajax4jsf-filter force-parser=\"true\" \n"
"                     enable-cache=\"true\" \n"
"                     log4j-init-file=\"custom-log4j.xml\"\n"
"                     url-pattern=\"*.seam\"/>]]>"

#. Tag: para
#: Configuration.xml:255
#, no-c-format
msgid ""
"<literal>force-parser</literal> &#8212; forces all JSF pages to be validated "
"by Richfaces's XML syntax checker. If <literal>false</literal>, only AJAX "
"responses are validated and converted to well-formed XML. Setting "
"<literal>force-parser</literal> to <literal>false</literal> improves "
"performance, but can provide visual artifacts on AJAX updates."
msgstr "<literal>force-parser</literal> &#8212; JSF の全ページが Richfaces の XML 構文チェッカーにより強制的に検証されるようにします。 <literal>false</literal> なら AJAX の応答のみが検証され整形式の XML に変換されます。 <literal>force-parser</literal> を <literal>false</literal> に設定するとパフォーマンスは向上しますが AJAX 更新でおかしな結果が見えてしまう可能性があります。"

#. Tag: para
#: Configuration.xml:263
#, no-c-format
msgid ""
"<literal>enable-cache</literal> &#8212; enables caching of framework-"
"generated resources (e.g. javascript, CSS, images, etc). When developing "
"custom javascript or CSS, setting to true prevents the browser from caching "
"the resource."
msgstr "<literal>enable-cache</literal> &#8212; フレームワーク生成のリソースのキャッシュ化を有効にします (javascript、 CSS、 イメージなど)。 カスタムの javascript や  CSS を開発している場合は true に設定するとブラウザにリソースをキャッシュさせないようにします。"

#. Tag: para
#: Configuration.xml:269
#, no-c-format
msgid ""
"<literal>log4j-init-file</literal> &#8212; is used to setup per-application "
"logging. A path, relative to web application context, to the log4j.xml "
"configuration file should be provided."
msgstr "<literal>log4j-init-file</literal> &#8212; アプリケーションごとのログ記録のセットアップに使用されます。 log4j.xml 設定ファイルへのパスをウェブアプリケーションコンテキストからの相対パスで与えてください。"

#. Tag: title
#: Configuration.xml:279
#, no-c-format
msgid "Identity Logging"
msgstr "アイデンティティロギング"

#. Tag: para
#: Configuration.xml:281
#, no-c-format
msgid ""
"This filter adds the authenticated user name to the log4j mapped diagnostic "
"context so that it can be included in formatted log output if desired, by "
"adding %X{username} to the pattern."
msgstr "このフィルタは認証されたユーザー名を log4j マップ診断コンテキストに追加するため、 パターンに %X{username} を追加することで必要に応じてユーザー名をフォーマット化されたログ出力に含めることができます。"

#. Tag: para
#: Configuration.xml:287
#, no-c-format
msgid ""
"By default, the logging filter will process all requests, however this "
"behavior may be adjusted by adding a <literal>&lt;web:logging-filter&gt;</"
"literal> entry to <literal>components.xml</literal>, as shown in this "
"example:"
msgstr "デフォルトではロギングフィルタは全要求を処理しますが、 以下の例で示すように <literal>&lt;web:logging-filter&gt;</literal> のエントリを <literal>components.xml</literal> に追加してこの動作を調整することができます。"

#. Tag: programlisting
#: Configuration.xml:291
#, no-c-format
msgid ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:web=\"http://jboss.com/products/seam/web\">\n"
"    <web:logging-filter url-pattern=\"*.seam\"/>\n"
"</components>]]>"
msgstr ""
"<![CDATA[<components xmlns=\"http://jboss.com/products/seam/components\"\n"
"            xmlns:web=\"http://jboss.com/products/seam/web\">\n"
"    <web:logging-filter url-pattern=\"*.seam\"/>\n"
"</components>]]>"

#. Tag: title
#: Configuration.xml:296
#, no-c-format
msgid "Context management for custom servlets"
msgstr "カスタムなサーブレットのコンテキスト管理"

#. Tag: para
#: Configuration.xml:297
#, no-c-format
msgid ""
"Requests sent direct to some servlet other than the JSF servlet are not "
"processed through the JSF lifecycle, so Seam provides a servlet filter that "
"can be applied to any other servlet that needs access to Seam components."
msgstr ""
"JSF サーブレット以外のサーブレットに直接送信される要求は、JSFのライフサイクルで"
"は処理されません。 そこで、Seamは Seamのコンポーネントにアクセスする必要の有"
"る その他のサーブレットに対してサーブレットフィルタを提供しています。"

#. Tag: para
#: Configuration.xml:301
#, no-c-format
msgid ""
"This filter allows custom servlets to interact with the Seam contexts. It "
"sets up the Seam contexts at the beginning of each request, and tears them "
"down at the end of the request. You should make sure that this filter is "
"<emphasis>never</emphasis> applied to the JSF <literal>FacesServlet</"
"literal>. Seam uses the phase listener for context management in a JSF "
"request."
msgstr ""
"このフィルタを適用することにより、カスタムなサーブレットが Seamコンテキストと相互に"
"作用することを可能にします。 個々の要求の最初にSeamコンテキストをセット"
"アップし、要求の終了畤にこれを破棄します。このフィルタは JSFの "
"<literal>FacesServlet</literal> には<emphasis>決して</emphasis>適用されないようにしてください。 Seam はJSFの要求のコンテキスト管理には phase "
"listenerを使用します。"

#. Tag: programlisting
#: Configuration.xml:310
#, no-c-format
msgid "<![CDATA[<web:context-filter url-pattern=\"/media/*\"/>]]>"
msgstr "<![CDATA[<web:context-filter url-pattern=\"/media/*\"/>]]>"

#. Tag: para
#: Configuration.xml:312
#, no-c-format
msgid ""
"The context filter expects to find the conversation id of any conversation "
"context in a request parameter named <literal>conversationId</literal>. You "
"are responsible for ensuring that it gets sent in the request."
msgstr ""
"コンテキストフィルタは<literal>conversationId</literal>という名前で要求"
"パラメータ中に対話 ID を探そうとします。必ず、要求パラメータに対話 IDを"
"含めるようにしてください。"

#. Tag: para
#: Configuration.xml:316
#, no-c-format
msgid ""
"You are also responsible for ensuring propagation of any new conversation id "
"back to the client. Seam exposes the conversation id as a property of the "
"built in component <literal>conversation</literal>."
msgstr ""
"また、新たな対話 IDをクライアント側に確実に伝える必要があります。 Seamは組み"
"込みコンポーネント <literal>conversation</literal>のプロパティとして対話 IDを"
"公開しています。"

#. Tag: title
#: Configuration.xml:324
#, no-c-format
msgid "Adding custom filters"
msgstr "カスタムのフィルタを追加する"

#. Tag: para
#: Configuration.xml:325
#, no-c-format
msgid ""
"Seam can install your filters for you, allowing you to specify "
"<emphasis>where</emphasis> in the chain your filter is placed (the servlet "
"specification doesn't provide a well defined order if you specify your "
"filters in a <literal>web.xml</literal>). Just add the <literal>@Filter</"
"literal> annotation to your Seam component (which must implement "
"<literal>javax.servlet.Filter</literal>):"
msgstr "Seam はカスタムのフィルタをインストールすることができ、 チェーン内にフィルタを配置する <emphasis>場所</emphasis> を指定できます (サーブレットの仕様はフィルタを <literal>web.xml</literal> に指定したときの明確な順序を提供しません)。 <literal>@Filter</literal> アノテーションを Seam コンポーネント (<literal>javax.servlet.Filter</literal> を実装しなければなりません) に追加するだけです。"

#. Tag: programlisting
#: Configuration.xml:330
#, no-c-format
msgid ""
"<![CDATA[@Startup\n"
"@Scope(APPLICATION)\n"
"@Name(\"org.jboss.seam.web.multipartFilter\")\n"
"@BypassInterceptors\n"
"@Filter(within=\"org.jboss.seam.web.ajax4jsfFilter\")\n"
"public class MultipartFilter extends AbstractFilter {]]>"
msgstr ""
"<![CDATA[@Startup\n"
"@Scope(APPLICATION)\n"
"@Name(\"org.jboss.seam.web.multipartFilter\")\n"
"@BypassInterceptors\n"
"@Filter(within=\"org.jboss.seam.web.ajax4jsfFilter\")\n"
"public class MultipartFilter extends AbstractFilter {]]>"

#. Tag: para
#: Configuration.xml:332
#, no-c-format
msgid ""
"Adding the <literal>@Startup</literal> annotation means thar the component "
"is available during Seam startup; bijection isn't available here "
"(<literal>@BypassInterceptors</literal>); and the filter should be further "
"down the chain than the RichFaces filter (<literal>@Filter(within=\"org."
"jboss.seam.web.ajax4jsfFilter\")</literal>)."
msgstr ""
"<literal>@Startup</literal> アノテーションを追加すると Seam 起動時にコンポーネントが使用可能となります。 バイジェクションはここでは使用できません (<literal>@BypassInterceptors</literal>)。 フィルタは RichFaces フィルタよりチェーンの下方になります (<literal>@Filter(within=\"org."
"jboss.seam.web.ajax4jsfFilter\")</literal>)。"

#. Tag: title
#: Configuration.xml:341
#, no-c-format
msgid "Integrating Seam with your EJB container"
msgstr "EJB コンテナと Seam の統合"

#. Tag: para
#: Configuration.xml:343
#, no-c-format
msgid ""
"We need to apply the <literal>SeamInterceptor</literal> to our Seam "
"components. The simplest way to do this across an entire application is to "
"add the following interceptor configuration in <literal>ejb-jar.xml</"
"literal>:"
msgstr "<literal>SeamInterceptor</literal> を Seam コンポーネントに適用する必要があります。 アプリケーション全体に渡りこれを最も容易に行う方法は次のインタセプタ設定を <literal>ejb-jar.xml</literal> に追加する方法です。"

#. Tag: programlisting
#: Configuration.xml:347
#, no-c-format
msgid ""
"<![CDATA[<interceptors>\n"
"    <interceptor>\n"
"        <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-"
"class>\n"
"    </interceptor>\n"
"</interceptors>\n"
"   \n"
"<assembly-descriptor>\n"
"    <interceptor-binding>\n"
"        <ejb-name>*</ejb-name>\n"
"        <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-"
"class>\n"
"    </interceptor-binding>\n"
"</assembly-descriptor>\n"
"]]>"
msgstr ""
"<![CDATA[<interceptors>\n"
"    <interceptor>\n"
"        <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-"
"class>\n"
"    </interceptor>\n"
"</interceptors>\n"
"   \n"
"<assembly-descriptor>\n"
"    <interceptor-binding>\n"
"        <ejb-name>*</ejb-name>\n"
"        <interceptor-class>org.jboss.seam.ejb.SeamInterceptor</interceptor-"
"class>\n"
"    </interceptor-binding>\n"
"</assembly-descriptor>\n"
"]]>"

#. Tag: para
#: Configuration.xml:349
#, no-c-format
msgid ""
"Seam needs to know where to go to find session beans in JNDI. One way to do "
"this is specify the <literal>@JndiName</literal> annotation on every session "
"bean Seam component. However, this is quite tedious. A better approach is to "
"specify a pattern that Seam can use to calculate the JNDI name from the EJB "
"name. Unfortunately, there is no standard mapping to global JNDI defined in "
"the EJB3 specification, so this mapping is vendor-specific. We usually "
"specify this option in <literal>components.xml</literal>."
msgstr ""
"Seam は、セッション Bean が JNDI においてどこにあるかを知る必要があります。 このた"
"めの方法の一つは、 それぞれの Session Bean コンポーネントに、"
"<literal>@JndiName</literal> を指定することです。 しかし、 これではつまらな過"
"ぎます。 もっと良い方法は、 EJB 名から JNDI 名を判断するために、 Seam が使用"
"するパターンを指定することです。 あいにく、EJB3 仕様にはグローバル JNDI をマッピングする標準が定義されていないため、 このマッピングはベンダー固有になり"
"ます。 通常、<literal>components.xml</literal>にこのオプションを指定します。"

#. Tag: para
#: Configuration.xml:355
#, no-c-format
msgid "For JBoss AS, the following pattern is correct:"
msgstr "JBossアプリケーションサーバーでは、次のパターンが正しいです。"

#. Tag: programlisting
#: Configuration.xml:357
#, no-c-format
msgid "<![CDATA[<core:init jndi-name=\"myEarName/#{ejbName}/local\" />]]>"
msgstr "<![CDATA[<core:init jndi-name=\"myEarName/#{ejbName}/local\" />]]>"

#. Tag: para
#: Configuration.xml:359
#, no-c-format
msgid ""
"Where <literal>myEarName</literal> is the name of the EAR in which the bean "
"is deployed."
msgstr ""
"ここで、<literal>myEarName</literal>は、Bean がデプロイされた EAR の名前で"
"す。"

#. Tag: para
#: Configuration.xml:361
#, no-c-format
msgid ""
"Outside the context of an EAR (when using the JBoss Embeddable EJB3 "
"container), the following pattern is the one to use:"
msgstr ""
"EAR のコンテキストの外側では (JBoss 組み込み可能 EJB3 コンテナを使用すると"
"き)、 次のパターンを使います。"

#. Tag: programlisting
#: Configuration.xml:364
#, no-c-format
msgid "<![CDATA[<core:init jndi-name=\"#{ejbName}/local\" />]]>"
msgstr "<![CDATA[<core:init jndi-name=\"#{ejbName}/local\" />]]>"

#. Tag: para
#: Configuration.xml:366
#, no-c-format
msgid ""
"You'll have to experiment to find the right setting for other application "
"servers. Note that some servers (such as GlassFish) require you to specify "
"JNDI names for all EJB components explicitly (and tediously). In this case, "
"you can pick your own pattern ;-)"
msgstr "他のアプリケーションサーバーに対しては、正しい設定を見つけるため実験を行う必要があるでしょう。 サーバーのなかにはすべての EJB コンポーネントにいちいち明示的に JNDI 名を指定する必要があるものもあるので注意してください。 この場合は独自のパターンを選択できます。"

#. Tag: para
#: Configuration.xml:370
#, no-c-format
msgid ""
"In an EJB3 environment, we recommend the use of a special built-in component "
"for transaction management, that is fully aware of container transactions, "
"and can correctly process transaction success events registered with the "
"<literal>Events</literal> component. If you don't add this line to your "
"<literal>components.xml</literal> file, Seam won't know when container-"
"managed transactions end:"
msgstr "EJB3 環境ではトランザクション管理にある特殊な組み込みコンポーネントを使用することをお勧めします。 コンテナのトランザクションを完全に認識し、 <literal>Events</literal> コンポーネントに登録されるトランザクションの成功イベントを正しく処理することができます。 この行を <literal>components.xml</literal> ファイルに追加しないと Seam はコンテナ管理トランザクションがいつ終了するのかを認識しません。"

#. Tag: programlisting
#: Configuration.xml:377
#, no-c-format
msgid "<![CDATA[<transaction:ejb-transaction/>]]>"
msgstr "<![CDATA[<transaction:ejb-transaction/>]]>"

#. Tag: title
#: Configuration.xml:382
#, no-c-format
msgid "Don't forget!"
msgstr "忘れないようにしてください。"

#. Tag: para
#: Configuration.xml:384
#, no-c-format
msgid ""
"There is one final item you need to know about. You must place a "
"<literal>seam.properties</literal>, <literal>META-INF/seam.properties</"
"literal> or <literal>META-INF/components.xml</literal> file in any archive "
"in which your Seam components are deployed (even an empty properties file "
"will do). At startup, Seam will scan any archives with <literal>seam."
"properties</literal> files for seam components."
msgstr ""
"最後にもう一つ理解しておくことがあります。 Seamコンポーネントがデプロイされるどの"
"ようなアーカイブにも、 <literal>seam.properties</literal>、<literal>META-INF/"
"seam.properties</literal> あるいは <literal>META-INF/components.xml</literal>"
"を作成しておく必要があります (空のファイルであってもかまいません)。 Seamは起"
"動時に Seamコンポーネントを探すために、すべてのアーカイブで<literal>seam."
"properties</literal>をスキャンします。"

#. Tag: para
#: Configuration.xml:389
#, no-c-format
msgid ""
"In a web archive (WAR) file, you must place a <literal>seam.properties</"
"literal> file in the <literal>WEB-INF/classes</literal> directory if you "
"have any Seam components included here."
msgstr ""
"Seamコンポーネントがある場合には、webアーカイブ (WAR) の<literal>WEB-INF/"
"classes</literal>ディレクトリに <literal>seam.properties</literal>ファイルを"
"作成する必要があります。"

#. Tag: para
#: Configuration.xml:392
#, no-c-format
msgid ""
"That's why all the Seam examples have an empty <literal>seam.properties</"
"literal> file. You can't just delete this file and expect everything to "
"still work!"
msgstr "すべての Seam サンプルに空白の <literal>seam.properties</literal> ファイルがあるのはこのためです。 このファイルを削除してしまうだけですべてが動作しなくなります。"

#. Tag: para
#: Configuration.xml:395
#, no-c-format
msgid ""
"You might think this is silly and what kind of idiot framework designers "
"would make an empty file affect the behavior of their software?? Well, this "
"is a workaround for a limitation of the JVM&#8212;if we didn't use this "
"mechanism, our next best option would be to force you to list every "
"component explicitly in <literal>components.xml</literal>, just like some "
"other competing frameworks do! I think you'll like our way better."
msgstr "なぜ設計者は空白のファイルがソフトウェアの動作に影響するよう設計したのだろうと不思議に思うかもしれません。 これは JVM の制限を回避する方法なのです。 このメカニズムを使用しなかったとしたら、 他のフレームワーク同様に <literal>components.xml</literal> に明示的にすべてのコンポーネントをすべて記載せざるをえなくなります。 空白ファイルの方がいいでしょう?"

#. Tag: title
#: Configuration.xml:406
#, no-c-format
msgid "Using Alternate JPA Providers"
msgstr "代替の JPA プロバイダを使用する"

#. Tag: para
#: Configuration.xml:408
#, no-c-format
msgid ""
"Seam comes packaged and configured with Hibernate as the default JPA "
"provider. If you require using a different JPA provider you must tell "
"<literal>seam</literal> about it."
msgstr "Seam ではデフォルトの JPA プロバイダとして Hibernate がパッケージ化され、設定されています。 別の JPA プロバイダを使用する必要がある場合は <literal>seam</literal> に指示しなければなりません。"

#. Tag: title
#: Configuration.xml:414
#, no-c-format
msgid "This is a workaround"
msgstr "これは暫定の方策です。"

#. Tag: para
#: Configuration.xml:415
#, no-c-format
msgid ""
"Configuration of the JPA provider will be easier in the future and will not "
"require configuration changes, unless you are adding a custom persistence "
"provider implementation."
msgstr "JPA プロバイダの設定は将来的にはより簡単になり、 カスタムの永続プロバイダ実装を追加しない限り設定変更を必要としなくなります。"

#. Tag: para
#: Configuration.xml:422
#, no-c-format
msgid ""
"Telling seam about a different JPA provider can be be done in one of two "
"ways:"
msgstr "Seam への別の JPA プロバイダ情報の指示は 2 種類いずれかの方法で行うことができます。"

#. Tag: para
#: Configuration.xml:423
#, no-c-format
msgid ""
"Update your application's <literal>components.xml</literal> so that the "
"generic <literal>PersistenceProvider</literal> takes precedence over the "
"hibernate version. Simply add the following to the file:"
msgstr "アプリケーションの <literal>components.xml</literal> を更新します。 これにより汎用 <literal>PersistenceProvider</literal> は hibernate バージョンより優先となります。 次をこのファイルに追加するだけです。"

#. Tag: programlisting
#: Configuration.xml:428
#, no-c-format
msgid ""
"<![CDATA[<component name=\"org.jboss.seam.persistence.persistenceProvider"
"\" \n"
"           class=\"org.jboss.seam.persistence.PersistenceProvider\"\n"
"           scope=\"stateless\">\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"org.jboss.seam.persistence.persistenceProvider"
"\" \n"
"           class=\"org.jboss.seam.persistence.PersistenceProvider\"\n"
"           scope=\"stateless\">\n"
"</component>]]>"

#. Tag: para
#: Configuration.xml:429
#, no-c-format
msgid ""
"If you want to take advantage of your JPA provider's non-standard features "
"you will need to write you own implementation of the "
"<literal>PersistenceProvider</literal>. Use "
"<literal>HibernatePersistenceProvider</literal> as a starting point (don't "
"forget to give back to the community :). Then you will need to tell "
"<literal>seam</literal> to use it as before."
msgstr "JPA プロバイダの非標準の機能を利用したい場合は <literal>PersistenceProvider</literal> の独自の実装を書く必要があります。 <literal>HibernatePersistenceProvider</literal> を起点として使用します (コミュニティに貢献するのも忘れないでくださいね)。 つぎに前述した通り <literal>seam</literal> にそれを使うよう指示する必要があります。"

#. Tag: programlisting
#: Configuration.xml:436
#, no-c-format
msgid ""
"<![CDATA[<component name=\"org.jboss.seam.persistence.persistenceProvider"
"\" \n"
"           class=\"org.your.package.YourPersistenceProvider\">\n"
"</component>]]>"
msgstr ""
"<![CDATA[<component name=\"org.jboss.seam.persistence.persistenceProvider"
"\" \n"
"           class=\"org.your.package.YourPersistenceProvider\">\n"
"</component>]]>"

#. Tag: para
#: Configuration.xml:437
#, no-c-format
msgid ""
"All that is left is updating the <literal>persistence.xml</literal> file "
"with the correct provider class, and what ever properties your provider "
"needs. Don't forget to package your new provider's jar files in the "
"application if they are needed."
msgstr "あとは正しいプロバイダクラスおよび使用するプロバイダが必要とするプロパティで <literal>persistence.xml</literal> を更新するだけです。 新しいプロバイダの jar ファイル群をアプリケーションでパッケージ化する必要があればそれも忘れないようにしてください。"

#. Tag: title
#: Configuration.xml:445
#, no-c-format
msgid "Configuring Seam in Java EE 5"
msgstr "Java EE 5 で Seam を設定"

#. Tag: para
#: Configuration.xml:456
#, no-c-format
msgid ""
"If you're running in a Java EE 5 environment, this is all the configuration "
"required to start using Seam!"
msgstr "Java EE 5 環境で実行している場合は Seam を使いはじめるのに必要な設定はこれだけです。"

#. Tag: title
#: Configuration.xml:459 Configuration.xml:554 Configuration.xml:682
#: Configuration.xml:715
#, no-c-format
msgid "Packaging"
msgstr "パッケージング"

#. Tag: para
#: Configuration.xml:461
#, no-c-format
msgid ""
"Once you've packaged all this stuff together into an EAR, the archive "
"structure will look something like this:"
msgstr "EAR にこれらすべてをパッケージ化したらアーカイブの構造は以下のようになります。"

#. Tag: programlisting
#: Configuration.xml:464
#, no-c-format
msgid ""
"<![CDATA[my-application.ear/\n"
"    jboss-seam.jar\n"
"    lib/\n"
"        jboss-el.jar\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"        application.xml\n"
"    my-application.war/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"        WEB-INF/\n"
"            web.xml\n"
"            components.xml\n"
"            faces-config.xml\n"
"            lib/\n"
"                jsf-facelets.jar\n"
"                jboss-seam-ui.jar\n"
"        login.jsp\n"
"        register.jsp\n"
"        ...\n"
"    my-application.jar/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"            persistence.xml\n"
"        seam.properties\n"
"        org/\n"
"            jboss/\n"
"                myapplication/\n"
"                    User.class\n"
"                    Login.class\n"
"                    LoginBean.class\n"
"                    Register.class\n"
"                    RegisterBean.class\n"
"                    ...]]>"
msgstr ""
"<![CDATA[my-application.ear/\n"
"    jboss-seam.jar\n"
"    lib/\n"
"        jboss-el.jar\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"        application.xml\n"
"    my-application.war/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"        WEB-INF/\n"
"            web.xml\n"
"            components.xml\n"
"            faces-config.xml\n"
"            lib/\n"
"                jsf-facelets.jar\n"
"                jboss-seam-ui.jar\n"
"        login.jsp\n"
"        register.jsp\n"
"        ...\n"
"    my-application.jar/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"            persistence.xml\n"
"        seam.properties\n"
"        org/\n"
"            jboss/\n"
"                myapplication/\n"
"                    User.class\n"
"                    Login.class\n"
"                    LoginBean.class\n"
"                    Register.class\n"
"                    RegisterBean.class\n"
"                    ...]]>"

#. Tag: para
#: Configuration.xml:466
#, no-c-format
msgid ""
"You should declare <literal>jboss-seam.jar</literal> as an ejb module in "
"<literal>META-INF/application.xml</literal>; <literal>jboss-el.jar</literal> "
"should be placed in the EAR's lib directory (putting it in the EAR classpath."
msgstr "<literal>jboss-seam.jar</literal> を ejb モジュールとして <literal>META-INF/application.xml</literal> で宣言しなければなりません。 <literal>jboss-el.jar</literal> は EAR の lib ディレクトリに配置されるはずです (EAR クラスパスに配置します)。"

#. Tag: para
#: Configuration.xml:471
#, no-c-format
msgid ""
"If you want to use jBPM or Drools, you must include the needed jars in the "
"EAR's lib directory."
msgstr "jBPM または Drools を使用したい場合は EAR の lib ディレクトリに必要な jar 群を含ませなければなりません。"

#. Tag: para
#: Configuration.xml:473
#, no-c-format
msgid ""
"If you want to use facelets (our recommendation), you must include "
"<literal>jsf-facelets.jar</literal> in the <literal>WEB-INF/lib</literal> "
"directory of the WAR."
msgstr ""
"facelets を使用する場合 (推奨) は WARの<literal>WEB-INF/lib</literal>ディレク"
"トリに <literal>jsf-facelets.jar</literal>を含める必要があります。"

#. Tag: para
#: Configuration.xml:476
#, no-c-format
msgid ""
"If you want to use the Seam tag library (most Seam applications do), you "
"must include <literal>jboss-seam-ui.jar</literal> in the <literal>WEB-INF/"
"lib</literal> directory of the WAR. If you want to use the PDF or email tag "
"libraries, you need to put <literal>jboss-seam-pdf.jar</literal> or "
"<literal>jboss-seam-mail.jar</literal> in <literal>WEB-INF/lib</literal>."
msgstr ""
"Seam のタグライブラリを使用する場合には (ほとんどの Seam アプリケーションで使用されます)、 WAR ファイルの <literal>WEB-INF/lib</literal> ディレクトリに "
"<literal>jboss-seam-ui.jar</literal> を含める必要があります。 PDFや email の"
"タグライブラリを使用する場合には、 <literal>WEB-INF/lib</literal> に "
"<literal>jboss-seam-pdf.jar</literal> または <literal>jboss-seam-mail.jar</"
"literal> を含める必要があります。"

#. Tag: para
#: Configuration.xml:481
#, no-c-format
msgid ""
"If you want to use the Seam debug page (only works for applications using "
"facelets), you must include <literal>jboss-seam-debug.jar</literal> in the "
"<literal>WEB-INF/lib</literal> directory of the WAR."
msgstr ""
"Seam デバッグページを使用する (facelets を使用している場合のみ利用可能) 場合"
"には WARの <literal>WEB-INF/lib</literal>ディレクトリに<literal>jboss-seam-"
"debug.jar</literal>を含めます。"

#. Tag: para
#: Configuration.xml:484
#, no-c-format
msgid ""
"Seam ships with several example applications that are deployable in any Java "
"EE container that supports EJB 3.0."
msgstr ""
"サンプルアプリケーションには EJB 3.0をサポートする Java EEコンテナにデプロイ可能"
"ないくつかの Seam アプリケーションがふくまれています。"

#. Tag: para
#: Configuration.xml:487
#, no-c-format
msgid ""
"I really wish that was all there was to say on the topic of configuration "
"but unfortunately we're only about a third of the way there. If you're too "
"overwhelmed by all this tedious configuration stuff, feel free to skip over "
"the rest of this section and come back to it later."
msgstr "設定に関するトピックはこれですべてですと言いたいところなんですが、 実はまた3 分の一しか説明していません。 退屈な設定の説明ばかりであきてしまった場合は残りのセクションは飛ばしてあとでもう一度読み直して頂いても構いません。"

#. Tag: title
#: Configuration.xml:496
#, no-c-format
msgid "Configuring Seam in J2EE"
msgstr "J2EEでの Seam の設定"

#. Tag: para
#: Configuration.xml:498
#, no-c-format
msgid ""
"Seam is useful even if you're not yet ready to take the plunge into EJB 3.0. "
"In this case you would use Hibernate3 or JPA instead of EJB 3.0 persistence, "
"and plain JavaBeans instead of session beans. You'll miss out on some of the "
"nice features of session beans but it will be very easy to migrate to EJB "
"3.0 when you're ready and, in the meantime, you'll be able to take advantage "
"of Seam's unique declarative state management architecture."
msgstr "Seam は EJB 3.0 の使用にまだ思い切りがつかない方にも便利です。 このような場合には EJB 3.0 永続性ではなく Hibernate3 か JPA を使用し、 セッション Bean の代わりにプレーン JavaBean を使用するとよいでしょう。 セッション Bean のいくつかの優れた機能は使用できませんが、 一旦決心がついたら EJB 3.0 への移行が非常に簡単になりますし、 それまでの間は Seam 固有の宣言的な状態管理アーキテクチャを利用することができます。"

#. Tag: para
#: Configuration.xml:513
#, no-c-format
msgid ""
"Seam JavaBean components do not provide declarative transaction demarcation "
"like session beans do. You <emphasis>could</emphasis> manage your "
"transactions manually using the JTA <literal>UserTransaction</literal> or "
"declaratively using Seam's <literal>@Transactional</literal> annotation. But "
"most applications will just use Seam managed transactions when using "
"Hibernate with JavaBeans."
msgstr "Seam JavaBean コンポーネントはセッション Bean のような宣言的トランザクション境界設定は提供しません。 手作業で JTA <literal>UserTransaction</literal> を使用するか、 宣言的に Seam の <literal>@Transactional</literal> アノテーションを使って管理することが <emphasis>できます</emphasis>。 ただし JavaBean と Hibernate を使用する場合、ほとんどのアプリケーションは Seam 管理のトランザクションを使用します。"

#. Tag: para
#: Configuration.xml:519
#, no-c-format
msgid ""
"The Seam distribution includes a version of the booking example application "
"that uses Hibernate3 and JavaBeans instead of EJB3, and another version that "
"uses JPA and JavaBeans. These example applications are ready to deploy into "
"any J2EE application server."
msgstr ""
"Seam ディストリビューションには、EJB3 の代わりに Hibernate や JavaBean を使用した 予約サンプ"
"ルアプリケーションが含まれています。 このサンプルアプリケーションはどんなJ2EE"
"アプリケーションサーバーでも すぐにデプロイ可能です。"

#. Tag: title
#: Configuration.xml:524
#, no-c-format
msgid "Boostrapping Hibernate in Seam"
msgstr "Seam での Hibernateのブートストラップ"

#. Tag: para
#: Configuration.xml:526
#, no-c-format
msgid ""
"Seam will bootstrap a Hibernate <literal>SessionFactory</literal> from your "
"<literal>hibernate.cfg.xml</literal> file if you install a built-in "
"component:"
msgstr ""
"Seam は組み込みコンポーネントがインストールされていれば、 <literal>hibernate.cfg.xml</literal> ファイルから Hibernate の"
" <literal>SessionFactory</literal> をブートストラップします。"

#. Tag: programlisting
#: Configuration.xml:529
#, no-c-format
msgid ""
"<![CDATA[<persistence:hibernate-session-factory name="
"\"hibernateSessionFactory\"/>]]>"
msgstr ""
"<![CDATA[<persistence:hibernate-session-factory name="
"\"hibernateSessionFactory\"/>]]>"

#. Tag: para
#: Configuration.xml:531
#, no-c-format
msgid ""
"You will also need to configure a <emphasis>managed session</emphasis> if "
"you want a Seam managed Hibernate <literal>Session</literal> to be available "
"via injection."
msgstr ""
"この時、インジェクションを使って、Seamの管理する Hibernateの"
"<literal>Session</literal>を利用するのであれば、 <emphasis>managed session</"
"emphasis>を設定する必要があります。"

#. Tag: programlisting
#: Configuration.xml:534
#, no-c-format
msgid ""
"<![CDATA[<persistence:managed-hibernate-session name=\"hibernateSession\"\n"
"                            session-factory=\"#{hibernateSessionFactory}\"/"
">]]>"
msgstr ""
"<![CDATA[<persistence:managed-hibernate-session name=\"hibernateSession\"\n"
"                            session-factory=\"#{hibernateSessionFactory}\"/"
">]]>"

#. Tag: title
#: Configuration.xml:539
#, no-c-format
msgid "Boostrapping JPA in Seam"
msgstr "Seam での JPAのブートストラップ"

#. Tag: para
#: Configuration.xml:541
#, no-c-format
msgid ""
"Seam will bootstrap a JPA <literal>EntityManagerFactory</literal> from your "
"<literal>persistence.xml</literal> file if you install this built-in "
"component:"
msgstr ""
"Seam はもし組み込みコンポーネントがインストールされていれば、"
"<literal>persistence.xml</literal> から<literal>EntityManagerFactory</"
"literal> JPAをブートストラップします。"

#. Tag: programlisting
#: Configuration.xml:544
#, no-c-format
msgid ""
"<![CDATA[<persistence:entity-manager-factory name=\"entityManagerFactory\"/"
">]]>"
msgstr ""
"<![CDATA[<persistence:entity-manager-factory name=\"entityManagerFactory\"/"
">]]>"

#. Tag: para
#: Configuration.xml:546
#, no-c-format
msgid ""
"You will also need to configure a <emphasis>managed persistence context</"
"emphasis> if you want a Seam managed JPA <literal>EntityManager</literal> to "
"be available via injection."
msgstr "インジェクションで Seam 管理のJPA <literal>EntityManager</literal> を使用可能にしたい場合は <emphasis>管理永続コンテキスト</emphasis> を設定する必要があります。"

#. Tag: programlisting
#: Configuration.xml:549
#, no-c-format
msgid ""
"<![CDATA[<persistence:managed-persistence-context name=\"entityManager\"\n"
"                            entity-manager-factory=\"#{entityManagerFactory}"
"\"/>]]>"
msgstr ""
"<![CDATA[<persistence:managed-persistence-context name=\"entityManager\"\n"
"                            entity-manager-factory=\"#{entityManagerFactory}"
"\"/>]]>"

#. Tag: para
#: Configuration.xml:556
#, no-c-format
msgid "We can package our application as a WAR, in the following structure:"
msgstr ""
"アプリケーションは WARとしてパッケージすることができ、その構成は以下の様にな"
"ります。"

#. Tag: programlisting
#: Configuration.xml:558
#, no-c-format
msgid ""
"<![CDATA[my-application.war/\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"    WEB-INF/\n"
"        web.xml\n"
"        components.xml\n"
"        faces-config.xml\n"
"        lib/\n"
"            jboss-seam.jar\n"
"            jboss-seam-ui.jar\n"
"            jboss-el.jar\n"
"            jsf-facelets.jar\n"
"            hibernate3.jar\n"
"            hibernate-annotations.jar\n"
"            hibernate-validator.jar\n"
"            ...\n"
"            my-application.jar/\n"
"                META-INF/\n"
"                   MANIFEST.MF\n"
"                seam.properties\n"
"                hibernate.cfg.xml\n"
"                org/\n"
"                    jboss/\n"
"                        myapplication/\n"
"                            User.class\n"
"                            Login.class\n"
"                            Register.class\n"
"                            ...\n"
"    login.jsp\n"
"    register.jsp\n"
"    ...]]>"
msgstr ""
"<![CDATA[my-application.war/\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"    WEB-INF/\n"
"        web.xml\n"
"        components.xml\n"
"        faces-config.xml\n"
"        lib/\n"
"            jboss-seam.jar\n"
"            jboss-seam-ui.jar\n"
"            jboss-el.jar\n"
"            jsf-facelets.jar\n"
"            hibernate3.jar\n"
"            hibernate-annotations.jar\n"
"            hibernate-validator.jar\n"
"            ...\n"
"            my-application.jar/\n"
"                META-INF/\n"
"                   MANIFEST.MF\n"
"                seam.properties\n"
"                hibernate.cfg.xml\n"
"                org/\n"
"                    jboss/\n"
"                        myapplication/\n"
"                            User.class\n"
"                            Login.class\n"
"                            Register.class\n"
"                            ...\n"
"    login.jsp\n"
"    register.jsp\n"
"    ...]]>"

#. Tag: para
#: Configuration.xml:560
#, no-c-format
msgid ""
"If we want to deploy Hibernate in a non-EE environment like Tomcat or "
"TestNG, we need to do a little bit more work."
msgstr "Hibernate を Tomcat や TestNG のような EE 以外の環境にデプロイしたい場合はもう少し作業が必要となります。"

#. Tag: title
#: Configuration.xml:567
#, no-c-format
msgid "Configuring Seam in Java SE, without JBoss Embedded"
msgstr "JBoss Embedded なしの Java SE で Seam を設定する"

#. Tag: para
#: Configuration.xml:569
#, no-c-format
msgid ""
"It is possible to use Seam completely outside of an EE environment. In this "
"case, you need to tell Seam how to manage transactions, since there will be "
"no JTA available. If you're using JPA, you can tell Seam to use JPA resource-"
"local transactions, ie. <literal>EntityTransaction</literal>, like so:"
msgstr "Seam を完全に EE 環境の外側で使用することが可能です。 この場合、 使用できる JTA がないので Seam にどのようにトランザクションを管理するのかを指示する必要があります。 JPA を使用している場合は Seam に JPA リソースローカルのトランザクション、 <literal>EntityTransaction</literal> などを使用するよう指示することができます。"

#. Tag: programlisting
#: Configuration.xml:573
#, no-c-format
msgid ""
"<![CDATA[<transaction:entity-transaction entity-manager=\"#{entityManager}\"/"
">]]>"
msgstr ""
"<![CDATA[<transaction:entity-transaction entity-manager=\"#{entityManager}\"/"
">]]>"

#. Tag: para
#: Configuration.xml:575
#, no-c-format
msgid ""
"If you're using Hibernate, you can tell Seam to use the Hibernate "
"transaction API like this:"
msgstr "Hibernate を使用している場合は Seam に次のように Hibernate トランザクション API を使用するよう指示することができます。"

#. Tag: programlisting
#: Configuration.xml:577
#, no-c-format
msgid "<![CDATA[<transaction:hibernate-transaction session=\"#{session}\"/>]]>"
msgstr "<![CDATA[<transaction:hibernate-transaction session=\"#{session}\"/>]]>"

#. Tag: para
#: Configuration.xml:579
#, no-c-format
msgid "Of course, you'll also need to define a datasource."
msgstr "当然、 データソースも定義する必要があります。"

#. Tag: para
#: Configuration.xml:581
#, no-c-format
msgid "A better alternative is to use JBoss Embedded to get access to the EE APIs."
msgstr "よりよい代替としては JBoss Embedded を使用して EE の API にアクセスします。"

#. Tag: title
#: Configuration.xml:586
#, no-c-format
msgid "Configuring Seam in Java SE, with JBoss Embedded"
msgstr "JBoss Embedded を使用し Java SE で Seam を設定する"

#. Tag: para
#: Configuration.xml:588
#, no-c-format
msgid ""
"JBoss Embedded lets you run EJB3 components outside the context of the Java "
"EE 5 application server. This is especially, but not only, useful for "
"testing."
msgstr "JBoss Embedded により Java EE 5 アプリケーションサーバーのコンテキストの外側で EJB 3 のコンポーネントを実行することができるようになります。 これには限られませんが、 特にテストに便利です。"

#. Tag: para
#: Configuration.xml:591
#, no-c-format
msgid ""
"The Seam booking example application includes a TestNG integration test "
"suite that runs on JBoss Embedded via <literal>SeamTest</literal>."
msgstr "Seam 予約サンプルアプリケーションには TestNG 統合テストスィートが含まれ、 <literal>SeamTest</literal> を通じて JBoss Embedded で実行します。"

#. Tag: para
#: Configuration.xml:603
#, no-c-format
msgid "The booking example application may even be deployed to Tomcat."
msgstr "この予約サンプルアプリケーションは Tomcat にもデプロイ可能です。"

#. Tag: title
#: Configuration.xml:615
#, no-c-format
msgid "Installing Embedded JBoss"
msgstr "Embedded JBoss をインストールする"

#. Tag: para
#: Configuration.xml:618
#, no-c-format
msgid ""
"Embedded JBoss must by installed into Tomcat for Seam applications to run "
"correctly on it. Embedded JBoss runs with JDK 5 or JDK 6 ( see <xref linkend="
"\"jdk_dependencies\"/> for details on using JDK 6). Embedded JBoss can be "
"downloaded <ulink url=\"http://sourceforge.net/project/showfiles.php?"
"group_id=22866&amp;package_id=228977\">here</ulink>. The process for "
"installing Embedded JBoss into Tomcat 6 is quite simple. First, you should "
"copy the Embedded JBoss JARs and configuration files into Tomcat."
msgstr ""
"Embedded JBoss を正しく動作させるには Seam アプリケーション用の Tomcat にインストールしなければなりません。 Embedded JBoss は JDK 5 または JDK 6 で実行します (JDK 6 の使い方については <xref linkend=\"jdk_dependencies\"/> を参照)。 Embedded JBoss は <ulink url=\"http://sourceforge.net/project/showfiles.php?"
"group_id=22866&amp;package_id=228977\">ここ</ulink> でダウンロードできます。 Embedded JBoss の Tomcat 6 へのインストール手順は非常にシンプルです。 まず、 Embedded JBoss JAR 群と設定ファイル群を Tomcat にコピーします。"

#. Tag: para
#: Configuration.xml:632
#, no-c-format
msgid ""
"Copy all files and directories under the Embedded JBoss <literal>bootstrap</"
"literal> and <literal>lib</literal> directories, except for the "
"<literal>jndi.properties</literal> file, into the Tomcat <literal>lib</"
"literal> directory."
msgstr ""
"<literal>jndi.properties</literal> ファイルを除き、 Embedded JBoss の <literal>bootstrap</literal> ディレクトリと <literal>lib</literal> ディレクトリの配下にある全ファイルとディレクトリを Tomcat の <literal>lib</"
"literal> ディレクトリにコピーします。"

#. Tag: para
#: Configuration.xml:639
#, no-c-format
msgid ""
"Remove the <literal>annotations-api.jar</literal> file from the Tomcat "
"<literal>lib</literal> directory."
msgstr "Tomcat の <literal>lib</literal> ディレクトリから <literal>annotations-api.jar</literal> ファイルを削除します。"

#. Tag: para
#: Configuration.xml:645
#, no-c-format
msgid ""
"Next, two configuration files need to be updated to add Embedded JBoss-"
"specific functionality."
msgstr "次に、 Embedded JBoss 固有の機能を追加するため 2 つの設定ファイルを更新する必要があります。"

#. Tag: para
#: Configuration.xml:651
#, no-c-format
msgid ""
"Add the Embedded JBoss listener <literal>EmbeddedJBossBootstrapListener</"
"literal> to <literal>conf/server.xml</literal>. It must appear after all "
"other listeners in the file:"
msgstr ""
"Embedded JBoss リスナー <literal>EmbeddedJBossBootstrapListener</"
"literal> を <literal>conf/server.xml</literal> に追加します。 このファイル内の他のすべてのリスナーの後ろに現れなければなりません。"

#. Tag: programlisting
#: Configuration.xml:654
#, no-c-format
msgid ""
"<![CDATA[<Server port=\"8005\" shutdown=\"SHUTDOWN\">\n"
"\n"
"  <!-- Comment these entries out to disable JMX MBeans support used for "
"the \n"
"       administration web application -->\n"
"  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" />\n"
"  <Listener className=\"org.apache.catalina.mbeans.ServerLifecycleListener"
"\" />\n"
"  <Listener className=\"org.apache.catalina.mbeans."
"GlobalResourcesLifecycleListener\" />\n"
"  <Listener className=\"org.apache.catalina.storeconfig."
"StoreConfigLifecycleListener\"/>]]>"
msgstr ""
"<![CDATA[<Server port=\"8005\" shutdown=\"SHUTDOWN\">\n"
"\n"
"  <!-- Comment these entries out to disable JMX MBeans support used for "
"the \n"
"       administration web application -->\n"
"  <Listener className=\"org.apache.catalina.core.AprLifecycleListener\" />\n"
"  <Listener className=\"org.apache.catalina.mbeans.ServerLifecycleListener"
"\" />\n"
"  <Listener className=\"org.apache.catalina.mbeans."
"GlobalResourcesLifecycleListener\" />\n"
"  <Listener className=\"org.apache.catalina.storeconfig."
"StoreConfigLifecycleListener\"/>]]>"

#. Tag: programlisting
#: Configuration.xml:655
#, no-c-format
msgid ""
"<![CDATA[<!-- Add this listener -->\n"
"  <Listener className=\"org.jboss.embedded.tomcat."
"EmbeddedJBossBootstrapListener\"/>]]>"
msgstr ""
"<![CDATA[<!-- Add this listener -->\n"
"  <Listener className=\"org.jboss.embedded.tomcat."
"EmbeddedJBossBootstrapListener\"/>]]>"

#. Tag: para
#: Configuration.xml:659
#, no-c-format
msgid ""
"WAR file scanning should be enabled by adding the <literal>WebinfScanner</"
"literal> listener to <literal>conf/context.xml</literal>:"
msgstr "WAR ファイルのスキャンは <literal>WebinfScanner</literal> リスナーを <literal>conf/context.xml</literal> に追加することで有効になるはずです。"

#. Tag: programlisting
#: Configuration.xml:662
#, no-c-format
msgid ""
"<![CDATA[<Context>\n"
"    <!-- Default set of monitored resources -->\n"
"    <WatchedResource>WEB-INF/web.xml</WatchedResource>\n"
"        \n"
"    <!-- Uncomment this to disable session persistence across Tomcat "
"restarts -->\n"
"    <!--\n"
"    <Manager pathname=\"\" />\n"
"    -->]]>"
msgstr ""
"<![CDATA[<Context>\n"
"    <!-- Default set of monitored resources -->\n"
"    <WatchedResource>WEB-INF/web.xml</WatchedResource>\n"
"        \n"
"    <!-- Uncomment this to disable session persistence across Tomcat "
"restarts -->\n"
"    <!--\n"
"    <Manager pathname=\"\" />\n"
"    -->]]>"

#. Tag: programlisting
#: Configuration.xml:663
#, no-c-format
msgid ""
"<![CDATA[<!-- Add this listener -->\n"
"  <Listener className=\"org.jboss.embedded.tomcat.WebinfScanner\"/>]]>"
msgstr ""
"<![CDATA[<!-- Add this listener -->\n"
"  <Listener className=\"org.jboss.embedded.tomcat.WebinfScanner\"/>]]>"

#. Tag: programlisting
#: Configuration.xml:664
#, no-c-format
msgid "<![CDATA[</Context>]]>"
msgstr "<![CDATA[</Context>]]>"

#. Tag: para
#: Configuration.xml:668
#, no-c-format
msgid ""
"If you are using JDK 6, you must set the Java option <literal>sun.lang."
"ClassLoader.allowArraySyntax</literal> to <literal>true</literal> in "
"Tomcat's startup script (either catalina.bat or catalina.sh):"
msgstr "JDK 6 を使用している場合は Tomcat の起動スクリプト (catalina.bat か catalina.sh のどちらか) にある Java オプションの <literal>sun.lang.ClassLoader.allowArraySyntax</literal> を <literal>true</literal> にセットする必要があります。"

#. Tag: programlisting
#: Configuration.xml:672
#, no-c-format
msgid ""
"<![CDATA[set JAVA_OPTS=%JAVA_OPTS% -Djava.util.logging.manager=org.apache."
"juli.ClassLoaderLogManager -Djava.util.logging.config.file=\"%CATALINA_BASE%"
"\\conf\\logging.properties\" -Dsun.lang.ClassLoader.allowArraySyntax=true]]>"
msgstr ""
"<![CDATA[set JAVA_OPTS=%JAVA_OPTS% -Djava.util.logging.manager=org.apache."
"juli.ClassLoaderLogManager -Djava.util.logging.config.file=\"%CATALINA_BASE%"
"\\conf\\logging.properties\" -Dsun.lang.ClassLoader.allowArraySyntax=true]]>"

#. Tag: para
#: Configuration.xml:676
#, no-c-format
msgid ""
"For more configuration options, please see the Embedded JBoss Tomcat "
"integration <ulink url=\"http://wiki.jboss.org/wiki/Wiki.jsp?"
"page=EmbeddedAndTomcat\">wiki entry</ulink>."
msgstr ""
"設定オプションの詳細については Embedded JBoss Tomcat 統合 <ulink url=\"http://wiki.jboss.org/wiki/Wiki.jsp?"
"page=EmbeddedAndTomcat\">wiki エントリ</ulink> を参照してください。"

#. Tag: para
#: Configuration.xml:684
#, no-c-format
msgid ""
"The archive structure of a WAR-based deployment on an servlet engine like "
"Tomcat will look something like this:"
msgstr ""
"Tomcat のような サーブレットエンジンへの WAR ベースのデプロイメントのアーカイ"
"ブの構造は、以下のようになります。"

#. Tag: programlisting
#: Configuration.xml:687
#, no-c-format
msgid ""
"<![CDATA[my-application.war/\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"    WEB-INF/\n"
"        web.xml\n"
"        components.xml\n"
"        faces-config.xml\n"
"        lib/\n"
"            jboss-seam.jar\n"
"            jboss-seam-ui.jar\n"
"            jboss-el.jar\n"
"            jsf-facelets.jar\n"
"            jsf-api.jar\n"
"            jsf-impl.jar\n"
"            ...\n"
"            my-application.jar/\n"
"                META-INF/\n"
"                    MANIFEST.MF\n"
"                    persistence.xml\n"
"                seam.properties\n"
"                org/\n"
"                    jboss/\n"
"                        myapplication/\n"
"                            User.class\n"
"                            Login.class\n"
"                            LoginBean.class\n"
"                            Register.class\n"
"                            RegisterBean.class\n"
"                            ...\n"
"    login.jsp\n"
"    register.jsp\n"
"    ...]]>"
msgstr ""
"<![CDATA[my-application.war/\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"    WEB-INF/\n"
"        web.xml\n"
"        components.xml\n"
"        faces-config.xml\n"
"        lib/\n"
"            jboss-seam.jar\n"
"            jboss-seam-ui.jar\n"
"            jboss-el.jar\n"
"            jsf-facelets.jar\n"
"            jsf-api.jar\n"
"            jsf-impl.jar\n"
"            ...\n"
"            my-application.jar/\n"
"                META-INF/\n"
"                    MANIFEST.MF\n"
"                    persistence.xml\n"
"                seam.properties\n"
"                org/\n"
"                    jboss/\n"
"                        myapplication/\n"
"                            User.class\n"
"                            Login.class\n"
"                            LoginBean.class\n"
"                            Register.class\n"
"                            RegisterBean.class\n"
"                            ...\n"
"    login.jsp\n"
"    register.jsp\n"
"    ...]]>"

#. Tag: para
#: Configuration.xml:689
#, no-c-format
msgid ""
"Most of the Seam example applications may be deployed to Tomcat by running "
"<literal>ant deploy.tomcat</literal>."
msgstr ""
"ほとんどの Seam サンプルアプリケーションは、<literal>ant deploy.tomcat</"
"literal> を実行することによって、 Tomcat にデプロイすることも可能です。"

#. Tag: title
#: Configuration.xml:697
#, no-c-format
msgid "Configuring jBPM in Seam"
msgstr "SeamでのjBPM設定"

#. Tag: para
#: Configuration.xml:698
#, no-c-format
msgid ""
"Seam's jBPM integration is not installed by default, so you'll need to "
"enable jBPM by installing a built-in component. You'll also need to "
"explicitly list your process and pageflow definitions. In "
"<literal>components.xml</literal>:"
msgstr "Seam の jBPM 統合はデフォルトではインストールされないため組み込みコンポーネントをインストールすることにより jBPM を有効にする必要があります。 また、 使用するプロセスとページフローの定義を <literal>components.xml</literal> で明示的に記載する必要があります。"

#. Tag: programlisting
#: Configuration.xml:702
#, no-c-format
msgid ""
"<![CDATA[<bpm:jbpm>\n"
"    <bpm:pageflow-definitions>\n"
"        <value>createDocument.jpdl.xml</value>\n"
"        <value>editDocument.jpdl.xml</value>\n"
"        <value>approveDocument.jpdl.xml</value>\n"
"    </bpm:pageflow-definitions>\n"
"    <bpm:process-definitions>\n"
"        <value>documentLifecycle.jpdl.xml</value>\n"
"    </bpm:process-definitions>\n"
"</bpm:jbpm>]]>"
msgstr ""
"<![CDATA[<bpm:jbpm>\n"
"    <bpm:pageflow-definitions>\n"
"        <value>createDocument.jpdl.xml</value>\n"
"        <value>editDocument.jpdl.xml</value>\n"
"        <value>approveDocument.jpdl.xml</value>\n"
"    </bpm:pageflow-definitions>\n"
"    <bpm:process-definitions>\n"
"        <value>documentLifecycle.jpdl.xml</value>\n"
"    </bpm:process-definitions>\n"
"</bpm:jbpm>]]>"

#. Tag: para
#: Configuration.xml:704
#, no-c-format
msgid ""
"No further special configuration is needed if you only have pageflows. If "
"you do have business process definitions, you need to provide a jBPM "
"configuration, and a Hibernate configuration for jBPM. The Seam DVD Store "
"demo includes example <literal>jbpm.cfg.xml</literal> and <literal>hibernate."
"cfg.xml</literal> files that will work with Seam:"
msgstr ""
"ページフローのみの指定であれば、これ以上の設定は不要です。ビジネスプロセス定義を利用する場合、 jBPM 設定および jBPM 用の Hibernate 設定も用意する必要があります。Seam DVD Store demoは Seam で機能する "
"<literal>jbpm.cfg.xml</literal>と<literal>hibernate.cfg.xml</literal>を含め"
"た サンプルです。"

#. Tag: programlisting
#: Configuration.xml:709
#, no-c-format
msgid ""
"<![CDATA[<jbpm-configuration>\n"
"\n"
"  <jbpm-context>\n"
"    <service name=\"persistence\">\n"
"       <factory>\n"
"          <bean class=\"org.jbpm.persistence.db.DbPersistenceServiceFactory"
"\">\n"
"             <field name=\"isTransactionEnabled\"><false/></field>\n"
"          </bean>\n"
"       </factory>\n"
"    </service>\n"
"    <service name=\"tx\" factory=\"org.jbpm.tx.TxServiceFactory\" />\n"
"    <service name=\"message\" factory=\"org.jbpm.msg.db."
"DbMessageServiceFactory\" />\n"
"    <service name=\"scheduler\" factory=\"org.jbpm.scheduler.db."
"DbSchedulerServiceFactory\" />\n"
"    <service name=\"logging\" factory=\"org.jbpm.logging.db."
"DbLoggingServiceFactory\" />\n"
"    <service name=\"authentication\" \n"
"             factory=\"org.jbpm.security.authentication."
"DefaultAuthenticationServiceFactory\" />\n"
"  </jbpm-context>\n"
"\n"
"</jbpm-configuration>]]>"
msgstr ""
"<![CDATA[<jbpm-configuration>\n"
"\n"
"  <jbpm-context>\n"
"    <service name=\"persistence\">\n"
"       <factory>\n"
"          <bean class=\"org.jbpm.persistence.db.DbPersistenceServiceFactory"
"\">\n"
"             <field name=\"isTransactionEnabled\"><false/></field>\n"
"          </bean>\n"
"       </factory>\n"
"    </service>\n"
"    <service name=\"tx\" factory=\"org.jbpm.tx.TxServiceFactory\" />\n"
"    <service name=\"message\" factory=\"org.jbpm.msg.db."
"DbMessageServiceFactory\" />\n"
"    <service name=\"scheduler\" factory=\"org.jbpm.scheduler.db."
"DbSchedulerServiceFactory\" />\n"
"    <service name=\"logging\" factory=\"org.jbpm.logging.db."
"DbLoggingServiceFactory\" />\n"
"    <service name=\"authentication\" \n"
"             factory=\"org.jbpm.security.authentication."
"DefaultAuthenticationServiceFactory\" />\n"
"  </jbpm-context>\n"
"\n"
"</jbpm-configuration>]]>"

#. Tag: para
#: Configuration.xml:711
#, no-c-format
msgid ""
"The most important thing to notice here is that jBPM transaction control is "
"disabled. Seam or EJB3 should control the JTA transactions."
msgstr ""
"ここでのもっとも重要なことは、jBPMトランザクション制御は無効になっているとい"
"うことです。 Seam、あるいはEJB3がJTAトランザクションを制御するべきです。"

#. Tag: para
#: Configuration.xml:717
#, no-c-format
msgid ""
"There is not yet any well-defined packaging format for jBPM configuration "
"and process/pageflow definition files. In the Seam examples we've decided to "
"simply package all these files into the root of the EAR. In future, we will "
"probably design some other standard packaging format. So the EAR looks "
"something like this:"
msgstr "jBPM 設定やプロセスおよびページフローの定義ファイルに対する明確なパッケージング形式がいまだありません。 Seam サンプルでは単純にこうしたファイルはすべて EAR のルートにパッケージすることにしました。 将来的には何らかの標準的なパッケージング形式を設計することになると思います。 EAR は次のようになります。"

#. Tag: programlisting
#: Configuration.xml:722
#, no-c-format
msgid ""
"<![CDATA[my-application.ear/\n"
"    jboss-seam.jar\n"
"    lib/\n"
"       jboss-el.jar\n"
"       jbpm-3.1.jar\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"        application.xml\n"
"    my-application.war/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"        WEB-INF/\n"
"            web.xml\n"
"            components.xml\n"
"            faces-config.xml\n"
"            lib/\n"
"                jsf-facelets.jar\n"
"                jboss-seam-ui.jar\n"
"        login.jsp\n"
"        register.jsp\n"
"        ...\n"
"    my-application.jar/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"            persistence.xml\n"
"        seam.properties\n"
"        org/\n"
"            jboss/\n"
"                myapplication/\n"
"                    User.class\n"
"                    Login.class\n"
"                    LoginBean.class\n"
"                    Register.class\n"
"                    RegisterBean.class\n"
"                    ...\n"
"    jbpm.cfg.xml\n"
"    hibernate.cfg.xml\n"
"    createDocument.jpdl.xml\n"
"    editDocument.jpdl.xml\n"
"    approveDocument.jpdl.xml\n"
"    documentLifecycle.jpdl.xml]]>"
msgstr ""
"<![CDATA[my-application.ear/\n"
"    jboss-seam.jar\n"
"    lib/\n"
"       jboss-el.jar\n"
"       jbpm-3.1.jar\n"
"    META-INF/\n"
"        MANIFEST.MF\n"
"        application.xml\n"
"    my-application.war/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"        WEB-INF/\n"
"            web.xml\n"
"            components.xml\n"
"            faces-config.xml\n"
"            lib/\n"
"                jsf-facelets.jar\n"
"                jboss-seam-ui.jar\n"
"        login.jsp\n"
"        register.jsp\n"
"        ...\n"
"    my-application.jar/\n"
"        META-INF/\n"
"            MANIFEST.MF\n"
"            persistence.xml\n"
"        seam.properties\n"
"        org/\n"
"            jboss/\n"
"                myapplication/\n"
"                    User.class\n"
"                    Login.class\n"
"                    LoginBean.class\n"
"                    Register.class\n"
"                    RegisterBean.class\n"
"                    ...\n"
"    jbpm.cfg.xml\n"
"    hibernate.cfg.xml\n"
"    createDocument.jpdl.xml\n"
"    editDocument.jpdl.xml\n"
"    approveDocument.jpdl.xml\n"
"    documentLifecycle.jpdl.xml]]>"

#. Tag: title
#: Configuration.xml:729
#, no-c-format
msgid "Configuring SFSB and Session Timeouts in JBoss AS"
msgstr "JBoss ASでの SFSBとセッションタイムアウトの設定"

#. Tag: para
#: Configuration.xml:731
#, no-c-format
msgid ""
"It is very important that the timeout for Stateful Session Beans is set "
"higher than the timeout for HTTP Sessions, otherwise SFSB's may time out "
"before the user's HTTP session has ended. JBoss Application Server has a "
"default session bean timeout of 30 minutes, which is configured in "
"<literal>server/default/conf/standardjboss.xml</literal> (replace "
"<emphasis>default</emphasis> with your own configuration)."
msgstr "ステートフルセッション Bean のタイムアウトは HTTP セッションのタイムアウトより高く設定することが非常に重要となります。 これをしないと SFSB がユーザーの HTTP セッションが終了する前にタイムアウトする可能性があります。 JBoss Application Server はセッション Bean タイムアウトがデフォルトでは 30 分になり、 server/default/conf/standardjboss.xml (default は各自の設定セット名に置き換えてください) で設定されています。"

#. Tag: para
#: Configuration.xml:737
#, no-c-format
msgid ""
"The default SFSB timeout can be adjusted by modifying the value of "
"<literal>max-bean-life</literal> in the "
"<literal>LRUStatefulContextCachePolicy</literal> cache configuration:"
msgstr ""
"デフォルトの SFSB タイムアウトは <literal>LRUStatefulContextCachePolicy</"
"literal> キャッシュ設定内の <literal>max-bean-life</literal> の値を変更して調"
"整することができます。"

#. Tag: programlisting
#: Configuration.xml:740
#, no-c-format
msgid ""
"<![CDATA[<container-cache-conf>\n"
"    <cache-policy>org.jboss.ejb.plugins.LRUStatefulContextCachePolicy</cache-"
"policy>\n"
"    <cache-policy-conf>\n"
"        <min-capacity>50</min-capacity>\n"
"        <max-capacity>1000000</max-capacity>\n"
"        <remover-period>1800</remover-period>\n"
"\n"
"        <!-- SFSB timeout in seconds; 1800 seconds == 30 minutes -->\n"
"        <max-bean-life>1800</max-bean-life>  \n"
"\n"
"        <overager-period>300</overager-period>\n"
"        <max-bean-age>600</max-bean-age>\n"
"        <resizer-period>400</resizer-period>\n"
"        <max-cache-miss-period>60</max-cache-miss-period>\n"
"        <min-cache-miss-period>1</min-cache-miss-period>\n"
"        <cache-load-factor>0.75</cache-load-factor>\n"
"    </cache-policy-conf>\n"
"</container-cache-conf>]]>"
msgstr ""
"<![CDATA[<container-cache-conf>\n"
"    <cache-policy>org.jboss.ejb.plugins.LRUStatefulContextCachePolicy</cache-"
"policy>\n"
"    <cache-policy-conf>\n"
"        <min-capacity>50</min-capacity>\n"
"        <max-capacity>1000000</max-capacity>\n"
"        <remover-period>1800</remover-period>\n"
"\n"
"        <!-- SFSB timeout in seconds; 1800 seconds == 30 minutes -->\n"
"        <max-bean-life>1800</max-bean-life>  \n"
"\n"
"        <overager-period>300</overager-period>\n"
"        <max-bean-age>600</max-bean-age>\n"
"        <resizer-period>400</resizer-period>\n"
"        <max-cache-miss-period>60</max-cache-miss-period>\n"
"        <min-cache-miss-period>1</min-cache-miss-period>\n"
"        <cache-load-factor>0.75</cache-load-factor>\n"
"    </cache-policy-conf>\n"
"</container-cache-conf>]]>"

#. Tag: para
#: Configuration.xml:742
#, no-c-format
msgid ""
"The default HTTP session timeout can be modified in <literal>server/default/"
"deploy/jbossweb-tomcat55.sar/conf/web.xml</literal> for JBoss 4.0.x, or in "
"<literal>server/default/deploy/jboss-web.deployer/conf/web.xml</literal> for "
"JBoss 4.2.x. The following entry in this file controls the default session "
"timeout for all web applications:"
msgstr ""
"デフォルトの HTTP セッションタイムアウトは、 JBoss 4.0.x なら "
"<literal>server/default/deploy/jbossweb-tomcat55.sar/conf/web.xml</literal> "
"で、 JBoss 4.2.x なら <literal>server/default/deploy/jboss-web.deployer/conf/"
"web.xml</literal> でそれぞれ変更することができます。 このファイルの次のエント"
"リで、 すべてのウェブアプリケーションのデフォルトセッションタイムアウトを制御"
"します。"

#. Tag: programlisting
#: Configuration.xml:747
#, no-c-format
msgid ""
"<![CDATA[<session-config>\n"
"    <!-- HTTP Session timeout, in minutes -->\n"
"    <session-timeout>30</session-timeout>\n"
"</session-config>]]>"
msgstr ""
"<![CDATA[<session-config>\n"
"    <!-- HTTP Session timeout, in minutes -->\n"
"    <session-timeout>30</session-timeout>\n"
"</session-config>]]>"

#. Tag: para
#: Configuration.xml:749
#, no-c-format
msgid ""
"To override this value for your own application, simply include this entry "
"in your application's own <literal>web.xml</literal>."
msgstr "使用するアプリケーション用にこの値を上書きするにはこのエントリをそのアプリケーションの <literal>web.xml</literal> に含めるだけです。"

#. Tag: title
#: Configuration.xml:755
#, no-c-format
msgid "Running Seam in a Portlet"
msgstr "Portlet で Seam を実行する"

#. Tag: para
#: Configuration.xml:757
#, no-c-format
msgid ""
"If you want to run your Seam application in a portlet, take a look at the "
"JBoss Portlet Bridge, an implementation of JSR-301 that supports JSF within "
"a portlet, with extensions for Seam and RichFaces. See <ulink url=\"http://"
"labs.jboss.com/portletbridge\">http://labs.jboss.com/portletbridge</ulink> "
"for more."
msgstr ""
"Seam アプリケーションを porlet で実行させたい場合は Seam および RichFaces 用の拡張を持ち portlet 内で JSF をサポートする JSR-301 の実装 JBoss Portlet Bridge を見てみてください。 詳細は <ulink url=\"http://"
"labs.jboss.com/portletbridge\">http://labs.jboss.com/portletbridge</ulink> を参照してください。"

#. Tag: title
#: Configuration.xml:768
#, no-c-format
msgid "Deploying custom resources"
msgstr "カスタムのリソースをデプロイする"

#. Tag: para
#: Configuration.xml:770
#, no-c-format
msgid ""
"Seam scans all jars containing <literal>/seam.properties</literal>, "
"<literal>/META-INF/components.xml</literal> or <literal>/META-INF/seam."
"properties</literal> on startup for resources. For example, all classes "
"annotated with <literal>@Name</literal> are registered with Seam as Seam "
"components."
msgstr ""
"Seam はリソースの起動時に <literal>/seam.properties</literal>、 "
"<literal>/META-INF/components.xml</literal>、 または <literal>/META-INF/seam.properties</literal> を含むすべての jar をスキャンします。 たとえば、 <literal>@Name</literal> アノテーションが付与されたクラスはすべて Seam コンポーネントとして Seam に登録されます。"

#. Tag: para
#: Configuration.xml:777
#, no-c-format
msgid ""
"You may also want Seam to handle custom resources. A common use case is to "
"handle a specific annotation and Seam provides specific support for this. "
"First, tell Seam which annotations to handle in <literal>/META-INF/seam-"
"deployment.properties</literal>:"
msgstr ""
"また、 Seam にカスタムのリソースを処理させたい場合があります。 一般的な使用例としては特定のアノテーションを処理することで、 Seam はこれに対する固有のサポートを提供します。 まず Seam に <literal>/META-INF/seam-"
"deployment.properties</literal> で処理するアノテーションを指示します。"

#. Tag: programlisting
#: Configuration.xml:784
#, no-c-format
msgid ""
"<![CDATA[# A colon-separated list of annotation types to handle\n"
"org.jboss.seam.deployment.annotationTypes=com.acme.Foo:com.acme.Bar]]>"
msgstr ""
"<![CDATA[# A colon-separated list of annotation types to handle\n"
"org.jboss.seam.deployment.annotationTypes=com.acme.Foo:com.acme.Bar]]>"

#. Tag: para
#: Configuration.xml:786
#, no-c-format
msgid ""
"Then, during application startup you can get hold of all classes annotated "
"with <literal>@Foo</literal>:"
msgstr "するとアプリケーション起動時に <literal>@Foo</literal> アノテーションが付くすべてのクラスを捕らえることができます。"

#. Tag: programlisting
#: Configuration.xml:791
#, no-c-format
msgid ""
"<![CDATA[@Name(\"fooStartup\")\n"
"@Scope(APPLICATION)\n"
"@Startup\n"
"public class FooStartup {\n"
"\n"
"   @In(\"#{deploymentStrategy.annotatedClasses['com.acme.Foo']}\")\n"
"   private Set<Class<Object>> fooClasses;\n"
"   \n"
"   @In(\"#{hotDeploymentStrategy.annotatedClasses['com.acme.Foo']}\")\n"
"   private Set<Class<Object>> hotFooClasses;\n"
"\n"
"   @Create\n"
"   public void create() {\n"
"      for (Class clazz : fooClasses) {\n"
"         handleClass(clazz);\n"
"      }\n"
"      for (Class clazz : hotFooClasses) {\n"
"         handleClass(clazz);\n"
"      }\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"fooStartup\")\n"
"@Scope(APPLICATION)\n"
"@Startup\n"
"public class FooStartup {\n"
"\n"
"   @In(\"#{deploymentStrategy.annotatedClasses['com.acme.Foo']}\")\n"
"   private Set<Class<Object>> fooClasses;\n"
"   \n"
"   @In(\"#{hotDeploymentStrategy.annotatedClasses['com.acme.Foo']}\")\n"
"   private Set<Class<Object>> hotFooClasses;\n"
"\n"
"   @Create\n"
"   public void create() {\n"
"      for (Class clazz : fooClasses) {\n"
"         handleClass(clazz);\n"
"      }\n"
"      for (Class clazz : hotFooClasses) {\n"
"         handleClass(clazz);\n"
"      }\n"
"   }\n"
"\n"
"}]]>"

#. Tag: para
#: Configuration.xml:793
#, no-c-format
msgid ""
"You can also handle <emphasis>any</emphasis> resource. For example, you "
"process any files with the extension <literal>.foo.xml</literal>. To do "
"this, we need to write a custom deployment handler:"
msgstr "また、 <emphasis>あらゆる</emphasis> リソースを処理することができます。 たとえば、 <literal>.foo.xml</literal> 拡張子が付くファイルすべてを処理する場合、 カスタムのデプロイメントハンドラを記述する必要があります。"

#. Tag: programlisting
#: Configuration.xml:799
#, no-c-format
msgid ""
"<![CDATA[public class FooDeploymentHandler implements DeploymentHandler {\n"
"        \n"
"   private Set<InputStream> files = new HashSet<InputStream>();\n"
"        \n"
"   public String getName() {\n"
"      return \"fooDeploymentHandler\";\n"
"   }\n"
"   \n"
"   public Set<InputStream> getFiles() {\n"
"      return files;\n"
"   }\n"
"   \n"
"   public void handle(String name, ClassLoader classLoader) {\n"
"      if (name.endsWith(\".foo.xml\")) {\n"
"         files.add(classLoader.getResourceAsStream(name));\n"
"      }\n"
"   }\n"
"}]]>"
msgstr ""
"<![CDATA[public class FooDeploymentHandler implements DeploymentHandler {\n"
"        \n"
"   private Set<InputStream> files = new HashSet<InputStream>();\n"
"        \n"
"   public String getName() {\n"
"      return \"fooDeploymentHandler\";\n"
"   }\n"
"   \n"
"   public Set<InputStream> getFiles() {\n"
"      return files;\n"
"   }\n"
"   \n"
"   public void handle(String name, ClassLoader classLoader) {\n"
"      if (name.endsWith(\".foo.xml\")) {\n"
"         files.add(classLoader.getResourceAsStream(name));\n"
"      }\n"
"   }\n"
"}]]>"

#. Tag: para
#: Configuration.xml:801
#, no-c-format
msgid ""
"Here we are just building a list of any files with the suffix <literal>.foo."
"xml</literal>."
msgstr ""
"ここではサフィックス <literal>.foo."
"xml</literal> が付くすべてのファイルの一覧を作成しているだけです。"

#. Tag: para
#: Configuration.xml:806
#, no-c-format
msgid ""
"Then, we need to register the deployment handler with Seam. In <literal>/"
"META-INF/seam-deployment.properties</literal>:"
msgstr ""
"つぎにデプロイメントハンドラを Seam に登録する必要があります。 <literal>/"
"META-INF/seam-deployment.properties</literal> で行います。"

#. Tag: programlisting
#: Configuration.xml:811
#, no-c-format
msgid ""
"<![CDATA[# For standard deployment\n"
"org.jboss.seam.deployment.deploymentHandlers=com.acme.FooDeploymentHandler\n"
"# For hot deployment\n"
"org.jboss.seam.deployment.hotDeploymentHandlers=com.acme."
"FooDeploymentHandler]]>"
msgstr ""
"<![CDATA[# For standard deployment\n"
"org.jboss.seam.deployment.deploymentHandlers=com.acme.FooDeploymentHandler\n"
"# For hot deployment\n"
"org.jboss.seam.deployment.hotDeploymentHandlers=com.acme."
"FooDeploymentHandler]]>"

#. Tag: para
#: Configuration.xml:813
#, no-c-format
msgid "You can register multiple deployment handler using a comma separated list."
msgstr "コンマで区切った一覧を使うと複数のデプロイメントハンドラを登録することができます。"

#. Tag: para
#: Configuration.xml:818
#, no-c-format
msgid ""
"Seam uses deployment handlers internally to install components and "
"namespaces, therefore the <literal>handle()</literal> is called too early in "
"inside Seam bootstrap to normally be useful. However, you can easily access "
"the deployment handler during an <literal>APPLICATION</literal> scoped "
"component's startup:"
msgstr "Seam は内部的にデプロイメントハンドラを使ってコンポーネントや名前空間をインストールするため、 handle() が Seam のブートストラップの早い時点で呼ばれるので、多くの場合に不便かもしれません。 ただし、 <literal>APPLICATION</literal> スコープのコンポーネントの起動中にデプロイメントハンドラに簡単にアクセスすることができます。"

#. Tag: programlisting
#: Configuration.xml:826
#, no-c-format
msgid ""
"<![CDATA[@Name(\"fooStartup\")\n"
"@Scope(APPLICATION)\n"
"@Startup\n"
"public class FooStartup {\n"
"\n"
"   @In(\"#{deploymentStrategy['fooDeploymentHandler']}\")\n"
"   private MyDeploymentHandler myDeploymentHandler;\n"
"   \n"
"   @In(\"#{hotDeploymentStrategy['fooDeploymentHandler']}\")\n"
"   private MyDeploymentHandler myHotDeploymentHandler;\n"
"\n"
"   @Create\n"
"   public void create() {\n"
"      for (InputStream is : myDeploymentHandler.getFiles()) {\n"
"         handleFooXml(is);\n"
"      }\n"
"      for (InputStream is : myHotDeploymentHandler.getFiles()) {\n"
"         handleFooXml(is);\n"
"      }\n"
"   }\n"
"\n"
"}]]>"
msgstr ""
"<![CDATA[@Name(\"fooStartup\")\n"
"@Scope(APPLICATION)\n"
"@Startup\n"
"public class FooStartup {\n"
"\n"
"   @In(\"#{deploymentStrategy['fooDeploymentHandler']}\")\n"
"   private MyDeploymentHandler myDeploymentHandler;\n"
"   \n"
"   @In(\"#{hotDeploymentStrategy['fooDeploymentHandler']}\")\n"
"   private MyDeploymentHandler myHotDeploymentHandler;\n"
"\n"
"   @Create\n"
"   public void create() {\n"
"      for (InputStream is : myDeploymentHandler.getFiles()) {\n"
"         handleFooXml(is);\n"
"      }\n"
"      for (InputStream is : myHotDeploymentHandler.getFiles()) {\n"
"         handleFooXml(is);\n"
"      }\n"
"   }\n"
"\n"
"}]]>"

