<chapter id="mail">
    <title>Email</title>
    <para>Seam now includes an optional components for templating and sending emails.</para>

        <para>Email support is provided by <literal>jboss-seam-mail.jar</literal>. This JAR contains the mail JSF controls, which are used
            to construct emails, and the <literal>mailSession</literal> manager component. 
       	</para>

        <para> The examples/mail project contains an example of the email support in action. It demonstrates proper
            packaging, and it contains a number of example that demonstrate the key features currently supported. </para>
    
    <section>
    	<title>Creating a message</title>
    	<para>In Seam Mail, an email is just facelet:</para>
    	<programlisting>&lt;m:message xmlns="http://www.w3.org/1999/xhtml"
    xmlns:m="http://jboss.com/products/seam/mail"
    xmlns:h="http://java.sun.com/jsf/html"&gt;
  
    &lt;m:from name="Peter" address="peter@example.com" /&gt;
    &lt;m:to name="#{person.firstname} #{person.lastname}"&gt;#{person.address}&lt;/m:to&gt;
    &lt;m:subject&gt;Try out Seam!&lt;/m:subject&gt;
    
    &lt;m:body&gt;
        &lt;p&gt;&lt;h:outputText value="Dear #{person.firstname}" /&gt;,&lt;/p&gt;
        &lt;p&gt;You can try out Seam by visiting 
        &lt;a href="http://labs.jboss.com/jbossseam"&gt;http://labs.jboss.com/jbossseam&lt;/a&gt;.&lt;/p&gt;
        &lt;p&gt;Regards,&lt;/p&gt;
        &lt;p&gt;Peter&lt;/p&gt;
    &lt;/m:body&gt;
    
&lt;/m:message&gt;</programlisting>
    	
    	<para>The <literal>&lt;m:message&gt;</literal> tag wraps the whole message, and tells Seam to start rendering an email.  Inside the 
    	<literal>&lt;m:message&gt;</literal> tag we use an <literal>&lt;m:from&gt;</literal> tag to set who the message is from, a <literal>&lt;m:to&gt;</literal> tag to
    	specify a sender (notice how we use EL as we would in a normal facelet), and a <literal>&lt;m:subject&gt;</literal> tag.</para>
    	
    	<para>The <literal>&lt;m:body&gt;</literal> tag wraps the body of the email.  You can use regular HTML tags inside the body as well as
    	JSF components.</para>
    	
    	<para>So, now you have your email template, how do you go about sending it?  Well, at the end of rendering the 
    	<literal>m:message</literal> the <literal>mailSession</literal> is called to send the email, so all you have to do is
    	ask Seam to render the view:</para>
    	
    	<programlisting>@In(create=true)
private Renderer renderer;
   
public void send() {
    try {
       renderer.render("/simple.xhtml");
       facesMessages.add("Email sent successfully");
   } catch (Exception e) {
       facesMessages.add("Email sending failed: " + e.getMessage());
   }
}</programlisting>
    	
   	<para>If, for example, you entered an invalid email address, then an exception would be thrown, which is caught
   	and then displayed to the user.</para>
    
	    <section>
	    	<title>HTML/Text alternative part</title>
	    	<para>Whilst most mail readers nowadays support HTML, some don't, so you can add a plain text alternative
	    	 to your email body:</para>
	    	<programlisting>&lt;m:body&gt;
    &lt;f:facet name="alternative"&gt;Sorry, your email reader can't show our fancy email, 
please go to http://labs.jboss.com/jbossseam to explore Seam.&lt;/f:facet&gt;
&lt;/m:body&gt;</programlisting>
	    </section>
	    
	    <section>
	    	<title>Multiple recipients</title>
	    	<para>Often you'll want to send an email to a group of recipients (for example your users).  All of the recipient
	    	 mail tags can be placed inside a <literal>&lt;ui:repeat&gt;</literal>:</para>
	    	<programlisting>&lt;ui:repeat value="#{allUsers} var="user"&gt;
    &lt;m:to name="#{user.firstname} #{user.lastname}" address="#{user.emailAddress}" /&gt;
&lt;/ui:repeat&gt;</programlisting>
	    </section>
	    
	    <section>
	    	<title>Templating</title>
	    	<para>The mail templating example shows that facelets templating 'just works' with the Seam mail tags.</para>
	    	<para>Our <literal>template.xhtml</literal> contains:</para>
	    	<programlisting>&lt;m:message&gt;
   &lt;m:from name="Seam" address="do-not-reply@jboss.com" /&gt;
   &lt;m:to name="#{person.firstname} #{person.lastname}"&gt;#{person.address}&lt;/m:to&gt;
   &lt;m:subject&gt;#{subject}&lt;/m:subject&gt;
   &lt;m:body&gt;
       &lt;html&gt;
           &lt;body&gt;
               &lt;ui:insert name="body"&gt; This is the default body, specified by the template.&lt;/ui:insert&gt;
           &lt;/body&gt;
       &lt;/html&gt;
   &lt;/m:body&gt;
&lt;/m:message&gt;</programlisting>
	    	<para>Our <literal>templating.xhtml</literal> contains:</para>
	    	<programlisting>&lt;ui:param name="subject" value="Templating with Seam Mail" /&gt;
&lt;ui:define name="body"&gt;
    &lt;p&gt;This email demonstrates that you can easily use &lt;i&gt;facelets templating features&lt;/i&gt; in your code!&lt;/p&gt;
&lt;/ui:define&gt;</programlisting>
	    </section>
	    
	    <section>
	    	<title>Other Headers</title>
	    	<para>Sometimes you'll want to add other headers to your email.  Seam provides support for some (see <xref linkend="mail.tags" />).
	    	For example, we can set the importance of the email, and ask for a read receipt:</para>
	    	<programlisting>&lt;m:message xmlns:m="http://jboss.com/products/seam/mail"
   importance="low"
   requestReadReceipt="true"&gt;</programlisting>
	    	<para>Otherise you can add any header to the message using the <literal>&lt;m:header&gt;</literal> tag:</para>
	    	<programlisting>&lt;m:header name="X-Sent-From" value="JBoss Seam" /&gt;</programlisting>
	    </section>

	</section>

	<section>
		<title>Configuration</title>
		<para>To include Email support in your application, include <literal>jboss-seam-mail.jar</literal> in your
            WEB-INF/lib directory. If you are using JBoss AS there is no further configuration needed to use Seam's
            email support.  Otherwise you need to make sure you have the JavaMail API, an implementation of the JavaMail API present 
            (the API and impl used in JBoss AS are distributed with seam as <literal>lib/mail.jar</literal>), and a copy 
            of the Java Activation Framework (distributed with seam as <literal>lib/activation.jar</literal>.</para>
        <para>The Seam Email module requires the use of Facelets as the view technology. Future versions of the library
            may also support the use of JSP. Additionally, it requires the use of the seam-ui package.</para>
		<para>The <literal>mailSession</literal> component uses JavaMail to talk to a 'real' SMTP server.</para>
		
        <section>
	        <title><literal>mailSession</literal></title>
	        
	        <para>A JavaMail Session may be available via a JNDI lookup if you are working in an JEE environment or you can use a Seam configured Session.</para>
	        
	        <para>The mailSession component's properties are described in more detail in <xref linkend="components.mail"/>.</para>
	        
	        <section>
		        <title>JNDI lookup in JBoss AS</title>
		        <para>The JBossAS <literal>deploy/mail-service.xml</literal> configures a JavaMail session binding into JNDI.  The default service configuration will
		        need altering for your network.  <ulink url="http://wiki.jboss.org/wiki/Wiki.jsp?page=JavaMail">http://wiki.jboss.org/wiki/Wiki.jsp?page=JavaMail</ulink>
		        describes the service in more detail.</para>
		         <programlisting><![CDATA[<components xmlns="http://jboss.com/products/seam/components" 
        xmlns:core="http://jboss.com/products/seam/core"
        xmlns:mail="http://jboss.com/products/seam/mail">
    <mail:mailSession sessionJndiName="java:/Mail" />
</components>]]></programlisting>
		        <para>Here we tell Seam to get the mail session bound to <literal>java:/Mail</literal> from JNDI.</para>
	        </section>
	        
	       	<section>
	        	<title>Seam configured Session</title>
	      		<para>A mail session can be configured via <literal>components.xml</literal>.  Here we tell Seam to use <literal>smtp.example.com</literal>
	      	 	as the smtp server, </para>
	            <programlisting><![CDATA[<components xmlns="http://jboss.com/products/seam/components" 
        xmlns:core="http://jboss.com/products/seam/core"
        xmlns:mail="http://jboss.com/products/seam/mail">
    <mail:mailSession host="smtp.example.com" />
</components>]]></programlisting>
		    </section>
		</section>
	</section>

    <section id="mail.tags">
        <title>Tags</title>

        <para>Emails are generated using tags in the
                <literal>http://jboss.com/products/seam/mail</literal> namespace. Documents should always have the
                <literal>message</literal> tag at the root of the message. The message tag prepares Seam to generate
            an email. </para>
            
            <para>The standard templating tags of facelets can be used as normal.  Inside the body you can use any JSF tag which doesn't require access to external resources (stylesheets, javascript).</para>
            
        <variablelist>
        	<varlistentry>
        		<term>&lt;m:message&gt;</term>
        		 <listitem>
	               <para>
	                   Root tag of a mail message
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>importance</literal> &mdash; low, normal or high.  By default normal, this sets the importance of the mail message.
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>precedence</literal> &mdash; sets the precedence of the message (e.g. bulk).
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>requestReadReceipt</literal> &mdash; by default false, if set, a read receipt will be request will be added, with the 
	                       read receipt being sent to the <literal>From:</literal> address.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:from&gt;</term>
        		 <listitem>
	               <para>
	                  Set's the From: address for the email.  You can only have one of these per email.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>name</literal> &mdash; the name the email should come from.
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>address</literal> &mdash; the email address the email should come from.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:replyTo&gt;</term>
        		 <listitem>
	               <para>
	                  Set's the Reply-to: address for the email.  You can only have one of these per email.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>address</literal> &mdash; the email address the email should come from.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:to&gt;</term>
        		 <listitem>
	               <para>
	                  Add a recipient to the email. Use multiple &lt;m:to&gt; tags for multiple recipients.  This tag can be safely placed inside a repeat tag such as &lt;ui:repeat&gt;.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>name</literal> &mdash; the name of the recipient.
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>address</literal> &mdash; the email address of the recipient.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:cc&gt;</term>
        		 <listitem>
	               <para>
	                  Add a cc recipient to the email. Use multiple &lt;m:cc&gt; tags for multiple ccs.  This tag can be safely placed inside a repeat tag such as &lt;ui:repeat&gt;.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>name</literal> &mdash; the name of the recipient.
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>address</literal> &mdash;  the email address of the recipient.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:bcc&gt;</term>
        		 <listitem>
	               <para>
	                  Add a bcc recipient to the email. Use multiple &lt;m:bcc&gt; tags for multiple bccs.  This tag can be safely placed inside a repeat tag such as &lt;ui:repeat&gt;.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>name</literal> &mdash; the name of the recipient.
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>address</literal> &mdash; the email address of the recipient.
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:header&gt;</term>
        		 <listitem>
	               <para>
	                  Add a header to the email (e.g. <literal>X-Sent-From: JBoss Seam</literal>
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>name</literal> &mdash; The name of the header to add (e.g. <literal>X-Sent-From</literal>).
	                   </para>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>value</literal> &mdash; The value of the header to add (e.g. <literal>JBoss Seam</literal>).
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	        	<varlistentry>
        		<term>&lt;m:attachment&gt;</term>
        		 <listitem>
	               <para>
	                  Add an attachment to the email.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>value</literal> &mdash; The file to attach:
	                   </para>
               			  <itemizedlist>
		               		<listitem>
    		           			<para>
    		           				<literal>String</literal> &mdash; A <literal>String</literal> is interpreted as a path to file within the classpath
    		           			</para>
    		           		</listitem>
    		           		<listitem>
    		           			<para>
    		           				<literal>java.io.File</literal> &mdash; An EL expression can reference a <literal>File</literal> object
    		           			</para>
    		           		</listitem>
    		           		<listitem>
    		           			<para>
    		           				<literal>java.net.URL</literal> &mdash; An EL expression can reference a <literal>URL</literal> object
    		           			</para>
    		           		</listitem>
    		           		<listitem>
    		           			<para>
    		           				<literal>java.io.InputStream</literal> &mdash; An EL expression can reference an <literal>InputStream</literal>.
    		           				In this case both a <literal>fileName</literal> and a <literal>contentType</literal> must be specified.
    		           			</para>
    		           		</listitem>
    		           		<listitem>
    		           			<para>
    		           				<literal>byte[]</literal> &mdash; An EL expression can reference an <literal>byte[]</literal>.
    		           				In this case both a <literal>fileName</literal> and a <literal>contentType</literal> must be specified.
    		           			</para>
    		           		</listitem>
    		           	</itemizedlist>
	    		         <para>If the value attribute is ommitted:</para>
	    		         <itemizedlist>
	    		         <listitem>
	               			<para>
	               				If this tag contains a <literal>&lt;p:document&gt;</literal> tag, the document described will be
	                  generated and attached to the email.
	                  		</para>
	                  	</listitem>
	                  	<listitem>
	               			<para>
	               				If this tag contains other JSF tags a HTML document will be generated from them
	               				and attached to the email.
	                  		</para>
	                  	</listitem>
	               </itemizedlist>
	                   </listitem>
	                   <listitem>
	                   <para>
	                       <literal>fileName</literal> &mdash; Specify the file name to use for the attached file.
	                   </para>
	                   </listitem>
	                    <listitem>
	                   <para>
	                       <literal>contentType</literal> &mdash; Specify the MIME type of the attached file
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:subject&gt;</term>
        		 <listitem>
	               <para>
	                  Set's the subject for the email.
	               </para>
	           </listitem>
        	</varlistentry>
        	<varlistentry>
        		<term>&lt;m:body&gt;</term>
        		 <listitem>
	               <para>
	                  Set's the body for the email.  Supports an <literal>alternative</literal> facet which, if an HTML email is generated can contain alternative text for a mail reader which doesn't support html.
	               </para>
	              <itemizedlist>
	                   <listitem>
	                   <para>
	                       <literal>type</literal> &mdash; If set to <literal>plain</literal> then a plain text email will be generated otherwise an HTML email is generated.  
	                   </para>
	                   </listitem>
	                   </itemizedlist>
	           </listitem>
        	</varlistentry>
        </variablelist>

       
    </section>
</chapter>
