Seam 2.1 Migration Guide
========================
Before you get started with Seam 2.1, there are a few things you should be aware
of. This process should not be too painful - if you get stuck, just refer back
to the updated Seam examples.

This migration guide assumes you are using Seam 2.0, if you are migrating from
Seam 1.2, see the seam2migration guide as well.


Testing
-------

SeamTest now boots Seam at the start of each suite, rather than the start of
each class. This is much faster. See the reference manual for how to alter the
default.

DTDs and Schemas
----------------
The DTDs for Seam XML files are no longer supported.  Please use the XML schemas
for validation.  Files that use the Seam 2.0 XSDs should be updated to refer to 
the 2.1 XSDs

Exception Handling
------------------

The caught exception is now available in EL as #{org.jboss.seam.caughtException}
rather than #{org.jboss.seam.exception}


EntityConverter configuration
-----------------------------

If you need to configure which entity manager to use, this is now done on the
entity-loader component. See the documentation for details. 

Assumed name for managed Hibernate session
------------------------------------------

Several areas of Seam, including the Seam Application Framework, rely on a
naming convention for the Seam-managed persistence context (JPA) and Hibernate
session. Prior to Seam 2.1, the assumed name of the managed Hibernate session
was "session". However, session is a very overloaded name in Seam and the Java
Servlet API. To make it less ambigous, the default was changed to
"hibernateSession".

The benefit now is that when you inject or resolve the Hibernate session, you
know that is the refernece you are getting (rather than the HTTP session, mail
session, or some other "session").

You would inject it as follows:

@In private Session hibernateSession;

or

@In(name = "hibernateSession") private Session session;

If the name of your Seam-managed Hibernate session is "session", you can still
inject this reference explictly using the session property:

<framework:hibernate-entity-home session="#{session}".../>
<transaction:entity-transaction session="#{session}".../>

The alternative is to override the getPersistenceContextName() method on any
persistence controller in the Seam Application Framework:

public String getPersistenceContextName() {
	"session";
}

Security
--------

If you are using rule-based security in your project, the configuration for the 
security rules in components.xml has changed.  Previously, the rules were configured
as a property of the Identity component as such:

  <security:identity security-rules="#{securityRules}" authenticate-method="#{authenticator.authenticate}"/>
  
In Seam 2.1, rule-based permission checks are now carried out by the RuleBasedPermissionResolver,
requiring that it is configured with the security rules instead of Identity:

  <security:rule-based-permission-resolver security-rules="#{securityRules}"/>

PDF (iText)
--------

The documentStore component has been moved from the pdf/itext module into Seam proper.  Any 
references to pdf:document-store in components.xml should be replaced with document:document-store.
Similary, if you are currently referencing org.jboss.seam.pdf.DocumentStoreServlet in your web.xml, 
you should now use org.jboss.seam.document.DocumentStoreServlet.


Clustering
----------

Seam's ManagedEntityIdentityInterceptor is now disabled by default. If you need
the ManagedEntityIdentityInterceptor for clustered failover of conversations, 
you can enable it components.xml:

<core:init>
   <core:interceptors>
      <value>org.jboss.seam.core.SynchronizationInterceptor</value>
      <value>org.jboss.seam.async.AsynchronousInterceptor</value>
      <value>org.jboss.seam.ejb.RemoveInterceptor</value>
      <value>org.jboss.seam.persistence.HibernateSessionProxyInterceptor</value>
      <value>org.jboss.seam.persistence.EntityManagerProxyInterceptor</value>
      <value>org.jboss.seam.core.MethodContextInterceptor</value>
      <value>org.jboss.seam.core.EventInterceptor</value>
      <value>org.jboss.seam.core.ConversationalInterceptor</value>
      <value>org.jboss.seam.bpm.BusinessProcessInterceptor</value>
      <value>org.jboss.seam.core.ConversationInterceptor</value>
      <value>org.jboss.seam.core.BijectionInterceptor</value>
      <value>org.jboss.seam.transaction.RollbackInterceptor</value>
      <value>org.jboss.seam.transaction.TransactionInterceptor</value>
      <value>org.jboss.seam.webservice.WSSecurityInterceptor</value>
      <value>org.jboss.seam.security.SecurityInterceptor</value>
      <value>org.jboss.seam.persistence.ManagedEntityIdentityInterceptor</value>
   </core:interceptors>
</core:init>
