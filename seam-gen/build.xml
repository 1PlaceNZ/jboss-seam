<?xml version="1.0"?>

<project name="seam-gen" default="help" basedir=".">

    <!-- Give user a chance to override without editing this file or typing -D -->
    <property file="${basedir}/build.properties" />
    
    <taskdef name="packageDirectory" 
        classname="org.jboss.seam.tool.PackageDirectoryTask" 
        classpath="../jboss-seam-gen.jar"/>
    
    <taskdef name="lowercaseProperty" 
        classname="org.jboss.seam.tool.LowercasePropertyTask" 
        classpath="../jboss-seam-gen.jar"/>
    
    <taskdef name="uppercaseProperty" 
        classname="org.jboss.seam.tool.UppercasePropertyTask" 
        classpath="../jboss-seam-gen.jar"/>
    
    <taskdef name="print" 
        classname="org.jboss.seam.tool.PrintTask"
        classpath="../jboss-seam-gen.jar"/>
    
    <filterset id="jdbc">
        <filter token="jdbcUrl" value="${hibernate.connection.url}"/>
        <filter token="driverClass" value="${hibernate.connection.driver_class}"/>
        <filter token="username" value="${hibernate.connection.username}"/>
        <filter token="password" value="${hibernate.connection.password}"/>
    </filterset>

    <filterset id="project">
        <filter token="projectName" value="${project.name}" />
        <filter token="jbossHome" value="${jboss.home}" />
    </filterset>
    
    <packageDirectory property="action.dir" package="${action.package}"/>
    <packageDirectory property="model.dir" package="${model.package}"/>
    <packageDirectory property="mdb.dir" package="${mdb.package}"/>
    <packageDirectory property="test.dir" package="${test.package}"/>
    
    <property name="project.home" value="${workspace.home}/${project.name}"/>
    
    <target name="action-input">
        
        <input addproperty="component.name" message="Enter the Seam component name"/>
        
        <uppercaseProperty name="interface.name.default" value="${component.name}"/>
        <input message="Enter the local interface name [${interface.name.default}]"
           addproperty="interface.name"
          defaultvalue="${interface.name.default}"/>
        
        <uppercaseProperty name="bean.name.default" value="${component.name}Bean"/>
        <input message="Enter the bean class name [${bean.name.default}]" 
            addproperty="bean.name" 
          defaultvalue="${bean.name.default}"/>
        
        <lowercaseProperty name="method.name.default" value="${component.name}"/>
        <input message="Enter the action method name [${method.name.default}]" 
            addproperty="method.name" 
          defaultvalue="${method.name.default}"/>
        
        <lowercaseProperty name="page.name.default" value="${component.name}"/>
        <input message="Enter the page name [${page.name.default}]" 
            addproperty="page.name" 
          defaultvalue="${page.name.default}"/>
            
        <property name="bean.file" value="${project.home}/src/${action.dir}/${bean.name}.java"/>
        <property name="interface.file" value="${project.home}/src/${action.dir}/${interface.name}.java"/>
        <property name="page.file" value="${project.home}/view/${page.name}.xhtml"/>
        <property name="test.file" value="${project.home}/src/${test.dir}/${interface.name}Test.java"/>
        <property name="testng.file" value="${project.home}/src/${test.dir}/testng.xml"/>

    </target>
    
    <target name="entity-input">
    
        <input addproperty="entity.name" message="Enter the entity class name"/>
        <lowercaseProperty name="component.name" value="${entity.name}"/>
        
        <lowercaseProperty name="masterPage.name.default" value="${component.name}List"/>
        <input message="Enter the master page name [${masterPage.name.default}]" 
            addproperty="masterPage.name" 
          defaultvalue="${masterPage.name.default}"/>
                
        <lowercaseProperty name="page.name.default" value="${component.name}"/>
        <input message="Enter the detail page name [${page.name.default}]" 
            addproperty="page.name" 
          defaultvalue="${page.name.default}"/>
                
        <property name="entity.file" value="${project.home}/src/${action.dir}/${entity.name}.java"/>
        <property name="home.file" value="${project.home}/src/${action.dir}/${entity.name}Home.java"/>
        <property name="list.file" value="${project.home}/src/${action.dir}/${entity.name}List.java"/>
        <property name="page.file" value="${project.home}/view/${page.name}.xhtml"/>
        <property name="masterPage.file" value="${project.home}/view/${masterPage.name}.xhtml"/>

    </target>
    
    <target name="setup-filters">
    
        <filterset id="filters">
            <filter token="interfaceName" value="${interface.name}"/>
            <filter token="beanName" value="${bean.name}"/>
            <filter token="entityName" value="${entity.name}"/>
            <filter token="methodName" value="${method.name}"/>
            <filter token="componentName" value="${component.name}"/>
            <filter token="pageName" value="${page.name}"/>
            <filter token="masterPageName" value="${masterPage.name}"/>
            <filter token="actionPackage" value="${action.package}"/>
            <filter token="modelPackage" value="${model.package}"/>
            <filter token="mdbPackage" value="${mdb.package}"/>
            <filter token="testPackage" value="${test.package}"/>
            <filter token="listName" value="${component.name}List"/>
            <filter token="homeName" value="${component.name}Home"/>
        </filterset>
    
    </target>
    
    <target name="copy-lib">
        <echo message="Copying project jars ..." />

        <copy todir="${project.home}/lib">
            <fileset dir="../lib"/>
            <fileset dir="../facelets/lib"/>
            <fileset dir="../">
                <include name="jboss-seam.jar"/>
                <include name="jboss-seam-ui.jar"/>
                <include name="jboss-seam-debug.jar"/>
            </fileset>
        </copy>

        <copy todir="${project.home}/embedded-ejb">
            <fileset dir="../embedded-ejb" />
        </copy>
        
    </target>
    
    <fileset id="view" dir="${basedir}/view">
        <include name="home.xhtml"/>
        <include name="index.html"/>
        <include name="layout/template.xhtml"/>
    	<include name="layout/menu.xhtml"/>
        <include name="stylesheet/*"/>
    </fileset>

    <target name="file-copy" depends="copy-lib">
        <echo message="Copying project resources ..." />
                
        <copy todir="${project.home}/resources">
            <fileset dir="${basedir}/resources/">
                <exclude name="META-INF/application-wtp.xml" />
            </fileset>
            <filterset refid="project"/>
        </copy>
        
        <move tofile="${project.home}/resources/${project.name}-ds.xml" 
                file="${project.home}/resources/datasource-ds.xml">
            <filterset refid="jdbc"/>
        </move>
        
        <copy todir="${project.home}/view">
            <fileset refid="view"/>
            <filterset refid="project"/>
        </copy>
        
        <copy todir="${project.home}">
            <fileset dir="${basedir}/build-scripts" />
            <filterset refid="project"/>
        </copy>
        
        <mkdir dir="${project.home}/src"/>
        
    </target>

    <target name="file-copy-wtp" depends="copy-lib">
        <echo message="Copying project resources ..." />
        
        <copy todir="${project.home}EJB/ejbModule" overwrite="true">
            <fileset dir="${basedir}/resources/">
                <exclude name="WEB-INF/**" />
                <exclude name="META-INF/application.xml" />
                <exclude name="META-INF/application-wtp.xml" />
                <exclude name="META-INF/jboss-app.xml" />
                <exclude name="META-INF/jboss-beans.xml" />
                <exclude name="datasource-ds.xml" />
                <exclude name="messages*.properties" />
            </fileset>
            <filterset refid="project"/>
        </copy>
        
        <copy todir="${project.home}/EarContent" overwrite="true">
            <fileset dir="${basedir}/resources">
                <exclude name="WEB-INF/**" />
                <exclude name="META-INF/ejb-jar.xml" />
                <exclude name="META-INF/persistence.xml" />
                <exclude name="META-INF/application.xml" />
            </fileset>
            <filterset refid="project"/>
        </copy>
        
        <move file="${project.home}/EarContent/META-INF/application-wtp.xml" 
            tofile="${project.home}/EarContent/META-INF/application.xml" />
            
        <copy todir="${project.home}/EarContent" overwrite="true">
            <fileset dir="../lib">
                <include name="jbpm-*.jar" />
            </fileset>
            <fileset dir="..">
                <include name="jboss-seam.jar" />
            </fileset>
        </copy>
        
        <move tofile="${jboss.home}/server/default/deploy/${project.name}-ds.xml" 
                file="${project.home}/EarContent/datasource-ds.xml">
            <filterset refid="jdbc"/>
        </move>
        
        <copy todir="${project.home}Web/WebContent">
            <fileset refid="view"/>
            <filterset refid="project"/>
        </copy>
        
        <copy todir="${project.home}Web/WebContent/WEB-INF" overwrite="true">
            <fileset dir="${basedir}/resources/WEB-INF" />
            <filterset refid="project"/>
        </copy>
        
        <copy todir="${project.home}Web/WebContent/WEB-INF/lib" overwrite="true">
            <fileset dir="../facelets/lib"/>
            <fileset file="../jboss-seam-debug.jar"/>
            <fileset file="../jboss-seam-ui.jar"/>
        </copy>
        
        <copy todir="${project.home}">
            <fileset dir="${basedir}/build-scripts-wtp"/>
            <filterset refid="project"/>
        </copy>
        
        <copy todir="${project.home}/embedded-ejb">
            <fileset dir="../embedded-ejb" />
        </copy>
        
    </target>
    
    <target name="set-default-project" depends="validate-project">
        <propertyfile file="build.properties">
            <entry key="project.name" value="${project.name}"/>
        </propertyfile>
    </target>
    
    <target name="validate-project" depends="validate-workspace">
        <fail message="No project name specified (run 'seam new-project' first)">
            <condition>
                <or>
                    <not><isset property="project.name"/></not>
                    <equals arg1="${project.name}" arg2=""/>
                </or>
            </condition>
        </fail>
    </target>

    <target name="validate-workspace">
        <fail message="No eclipse workspace specified (run 'seam setup' first)">
            <condition>
                <or>
                    <not><isset property="workspace.home"/></not>
                    <equals arg1="${workspace.home}" arg2=""/>
                </or>
            </condition>
        </fail>
    </target>

    <target name="new-project" depends="validate-project,file-copy,set-default-project">
        <echo message="A new Seam project called '${project.name}' was created in the ${workspace.home} directory"/>
    </target>

    <target name="new-wtp-project" depends="validate-project,file-copy-wtp,set-default-project">
        <echo message="A new WTP project was created in the ${workspace.home} directory"/>
    </target>

    <target name="update-project" depends="validate-project">
        <echo message="Copying jars to project /lib directory ..." />
        
        <copy todir="${project.home}/lib" overwrite="true">
            <fileset dir="../lib" />
        </copy>

        <echo message="Copying new components.xml to project ..." />
        <copy todir="${project.home}/resources/WEB-INF" overwrite="false" 
               file="${basedir}/resources/WEB-INF/components.xml/" />

        <echo message="Copying ebmedded-ejb to project ..." />
        <copy todir="${project.home}/embedded-ejb" overwrite="true">
            <fileset dir="../embedded-ejb" />
        </copy>

        <echo message="Copying jbpm jars to project's exploded jar archive ..." />
        <copy todir="${project.home}/exploded-archives/${project.name}.jar" overwrite="true">
            <fileset dir="../lib">
                <include name="jbpm-*.jar" />
            </fileset>
        </copy>

        <echo message="Copying seam/jsf jars to project's exploded war archive ..." />
        <copy todir="${project.home}/exploded-archives/${project.name}.war/WEB-INF/lib" overwrite="true">
            <fileset dir="../">
                <include name="jboss-seam-ui.jar" />
                <include name="jboss-seam-debug.jar" />
            </fileset>
            <fileset dir="../facelets/lib">
                <include name="el-api.jar" />
                <include name="el-ri.jar" />
                <include name="jsf-facelets.jar" />
            </fileset>
        </copy>

        <echo message="Copying seam jar to project's exploded ear archive ..." />
        <copy todir="${project.home}/exploded-archives/${project.name}.ear" overwrite="true">
            <fileset dir="../">
                <include name="jboss-seam.jar" />
            </fileset>
        </copy>
        
        <echo message="'${project.name}' has been updated with the latest/seam jars" />
    </target>

    <target name="delete-project" depends="validate-project">
        <echo message="Deleting the entire project's contents ..." />
        <delete dir="${project.home}" />
    </target>

    <target name="new-action" depends="validate-project,action-input,setup-filters">
        <echo message="Creating a new stateless session bean component with an action method" />
        <copy file="src/ActionBean.java" tofile="${bean.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/Action.java" tofile="${interface.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/TestCase.java" tofile="${test.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/testng.xml" tofile="${testng.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="view/action.xhtml" tofile="${page.file}">
            <filterset refid="filters"/>
        </copy>
        <echo message="Type 'seam restart' and go to http://localhost:8080/${project.name}/${page.name}.seam"/>
    </target>

    <target name="new-form" depends="validate-project,action-input,setup-filters">
        <echo message="Creating a new stateful session bean component with an action method" />
        <echo message="Creating a new stateless session bean component with an action method" />
        <copy file="src/FormActionBean.java" tofile="${bean.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/FormAction.java" tofile="${interface.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="view/form.xhtml" tofile="${page.file}">
            <filterset refid="filters"/>
        </copy>
        <echo message="Type 'seam restart' and go to http://localhost:8080/${project.name}/${page.name}.seam"/>
    </target>

    <target name="new-conversation" depends="validate-project,action-input,setup-filters">
        <echo message="Creating a new stateful session bean component with @Begin and @End methods" />
        <copy file="src/ConversationBean.java" tofile="${bean.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/Conversation.java" tofile="${interface.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="view/conversation.xhtml" tofile="${page.file}">
            <filterset refid="filters"/>
        </copy>
        <echo message="Type 'seam restart' and go to http://localhost:8080/${project.name}/${page.name}.seam"/>
    </target>

    <target name="new-entity" depends="validate-project,entity-input,setup-filters">
        <echo message="Creating a new entity bean, with home and list components" />
        <copy file="src/Entity.java" tofile="${entity.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/EntityHome.java" tofile="${home.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="src/EntityList.java" tofile="${list.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="view/edit.xhtml" tofile="${page.file}">
            <filterset refid="filters"/>
        </copy>
        <copy file="view/list.xhtml" tofile="${masterPage.file}">
            <filterset refid="filters"/>
        </copy>
        <echo message="Type 'seam restart' and go to http://localhost:8080/${project.name}/${masterPage.name}.seam"/>
    </target>

    <target name="deploy" depends="validate-project">
        <echo message="Deploying project '${project.name}' to JBoss" />
        <ant antfile="${project.home}/build.xml" target="deploy" inheritall="false"/>
    </target>

    <target name="undeploy" depends="validate-project">
        <echo message="Undeploying project '${project.name}'" />
        <ant antfile="${project.home}/build.xml" target="undeploy" inheritall="false"/>
    </target>

    <target name="explode" depends="validate-project">
        <echo message="Deploying project '${project.name}' to JBoss as an exploded directory" />
        <ant antfile="${project.home}/build.xml" target="explode" inheritall="false"/>
    </target>

    <target name="restart" depends="validate-project">
        <echo message="Restarting project '${project.name}'" />
        <ant antfile="${project.home}/build.xml" target="restart" inheritall="false"/>
    </target>

    <target name="clean" depends="validate-project">
        <echo message="Cleaning project '${project.name}'" />
        <ant antfile="${project.home}/build.xml" target="clean" inheritall="false"/>
    </target>

    <target name="unexplode" depends="validate-project">
        <echo message="Undeploying exploded directory for project '${project.name}'" />
        <ant antfile="${project.home}/build.xml" target="unexplode" inheritall="false"/>
    </target>
    
    <target name="help">
        <print file="README"/>
    </target>

    <target name="setup">
        
        <property name="workspace.home" value="C:/Projects"/>
        <input addproperty="workspace.home.new" 
                   message="Enter your Java project workspace [${workspace.home}]" 
              defaultvalue="${workspace.home}"/>
        
        <property name="eclipse.wtp" value="N"/>
        <input addproperty="eclipse.wtp.new" 
                   message="Is this an Eclipse WTP workspace [${eclipse.wtp}] " 
                 validargs="Y,N," 
              defaultvalue="${eclipse.wtp}"/>
        
        <property name="jboss.home" value="C:/Program Files/jboss-4.0.5.GA"/>
        <input addproperty="jboss.home.new" 
                   message="Enter your JBoss home directory [${jboss.home}]" 
              defaultvalue="${jboss.home}"/>
        
        <property name="action.package" value="com.mydomain"/>
        <input addproperty="action.package.new" 
                   message="Enter the Java package name for your session beans [${action.package}]" 
              defaultvalue="${action.package}"/>
        
        <property name="model.package" value="${action.package.new}"/>
        <input addproperty="model.package.new" 
                   message="Enter the Java package name for your entity beans [${model.package}]" 
              defaultvalue="${model.package}"/>
        
        <property name="mdb.package" value="${action.package.new}"/>
        <input addproperty="mdb.package.new" 
                   message="Enter the Java package name for your message drive beans [${mdb.package}]" 
              defaultvalue="${mdb.package}"/>
        
        <property name="test.package" value="${action.package.new}.test"/>
        <input addproperty="test.package.new" 
                   message="Enter the Java package name for your test cases [${test.package}]" 
              defaultvalue="${test.package}"/>
    	
    	<condition property="database.type.default" value="${database.type}">
    		<isset property="database.type"/>
    	</condition>
    	<property name="database.type.default" value="hsql"/>
        <input addproperty="database.type.new" 
                   message="Enter the database to be used [${database.type.default}] " 
        	     validargs="hsql,mysql,oracle,postgres,mssql,db2,sybase,"
              defaultvalue="${database.type.default}"/>
    	
    	<!-- if the database type did not change, default to the previous values -->
    	
    	<condition property="hibernate.dialect.default" value="${hibernate.dialect}">
    		<equals arg1="${database.type}" arg2="${database.type.new}"/>
    	</condition>
    	<condition property="hibernate.connection.url.default" value="${hibernate.connection.url}">
    		<equals arg1="${database.type}" arg2="${database.type.new}"/>
    	</condition>
    	<condition property="hibernate.connection.driver_class.default" value="${hibernate.connection.driver_class}">
    		<equals arg1="${database.type}" arg2="${database.type.new}"/>
    	</condition>
    	
    	<!-- otherwise default to the defaults for the database type -->
    	
    	<condition property="hibernate.dialect.default" value="org.hibernate.dialect.HSQLDialect">
    		<equals arg1="${database.type.new}" arg2="hsql"/>
    	</condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.MySQLDialect">
        	<equals arg1="${database.type.new}" arg2="mysql"/>
        </condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.OracleDialect">
        	<equals arg1="${database.type.new}" arg2="oracle"/>
        </condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.PostgreSQLDialect">
        	<equals arg1="${database.type.new}" arg2="postgres"/>
        </condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.SQLServerDialect">
        	<equals arg1="${database.type.new}" arg2="mssql"/>
        </condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.DB2Dialect">
        	<equals arg1="${database.type.new}" arg2="db2"/>
        </condition>
        <condition property="hibernate.dialect.default" value="org.hibernate.dialect.SybaseDialect">
        	<equals arg1="${database.type.new}" arg2="sybase"/>
        </condition>
    	
    	<condition property="hibernate.connection.driver_class.default" value="org.hsqldb.jdbcDriver">
    		<equals arg1="${database.type.new}" arg2="hsql"/>
    	</condition>
        <condition property="hibernate.connection.driver_class.default" value="com.mysql.jdbc.Driver">
        	<equals arg1="${database.type.new}" arg2="mysql"/>
        </condition>
        <condition property="hibernate.connection.driver_class.default" value="oracle.jdbc.driver.OracleDriver">
        	<equals arg1="${database.type.new}" arg2="oracle"/>
        </condition>
        <condition property="hibernate.connection.driver_class.default" value="org.postgresql.Driver">
        	<equals arg1="${database.type.new}" arg2="postgres"/>
        </condition>
        <condition property="hibernate.connection.driver_class.default" value="com.microsoft.sqlserver.jdbc.SQLServerDriver">
        	<equals arg1="${database.type.new}" arg2="mssql"/>
        </condition>
        <condition property="hibernate.connection.driver_class.default" value="COM.ibm.db2.jdbc.app.DB2Driver">
        	<equals arg1="${database.type.new}" arg2="db2"/>
        </condition>
        <condition property="hibernate.connection.driver_class.default" value="com.sybase.jdbc2.jdbc.SybDriver">
        	<equals arg1="${database.type.new}" arg2="sybase"/>
        </condition>

    	<condition property="hibernate.connection.url.default" value="jdbc:hsqldb:.">
    		<equals arg1="${database.type.new}" arg2="hsql"/>
    	</condition>
        <condition property="hibernate.connection.url.default" value="jdbc:mysql:///test">
        	<equals arg1="${database.type.new}" arg2="mysql"/>
        </condition>
        <condition property="hibernate.connection.url.default" value="jdbc:oracle:thin:@localhost:1521:test">
        	<equals arg1="${database.type.new}" arg2="oracle"/>
        </condition>
        <condition property="hibernate.connection.url.default" value="jdbc:postgresql:template1">
        	<equals arg1="${database.type.new}" arg2="postgres"/>
        </condition>
        <condition property="hibernate.connection.url.default" value="jdbc:sqlserver://localhost">
        	<equals arg1="${database.type.new}" arg2="mssql"/>
        </condition>
        <condition property="hibernate.connection.url.default" value="jdbc:db2:test">
        	<equals arg1="${database.type.new}" arg2="db2"/>
        </condition>
        <condition property="hibernate.connection.url.default" value="jdbc:sybase:Tds:localhost:5000/test">
        	<equals arg1="${database.type.new}" arg2="sybase"/>
        </condition>
		
    	<!-- finally, default them to HSQL -->
    	
        <property name="hibernate.dialect.default" value="org.hibernate.dialect.HSQLDialect"/>
        <property name="hibernate.connection.driver_class.default" value="org.hsqldb.jdbcDriver"/>
        <property name="hibernate.connection.url.default" value="jdbc:hsqldb:."/>
        
    	<input addproperty="hibernate.dialect.new" 
                   message="Enter the Hibernate dialect for your database [${hibernate.dialect.default}]" 
              defaultvalue="${hibernate.dialect.default}"/>
        
        <property name="driver.jar" value="lib/hsqldb.jar"/>
        <input addproperty="driver.jar.new"
                   message="Enter the filesystem path to the JDBC driver jar [${driver.jar}]" 
              defaultvalue="${driver.jar}"/>
                
        <input addproperty="hibernate.connection.driver_class.new" 
                   message="Enter JDBC driver class for your database [${hibernate.connection.driver_class.default}]" 
              defaultvalue="${hibernate.connection.driver_class.default}"/>
        
        <input addproperty="hibernate.connection.url.new" 
                   message="Enter the JDBC URL for your database [${hibernate.connection.url.default}]" 
              defaultvalue="${hibernate.connection.url.default}"/>
        
        <property name="hibernate.connection.username" value="sa"/>
        <input addproperty="hibernate.connection.username.new" 
                   message="Enter database username [${hibernate.connection.username}]" 
              defaultvalue="${hibernate.connection.username}"/>
                
        <property name="hibernate.connection.password" value=""/>
        <input addproperty="hibernate.connection.password.new" 
                   message="Enter database password [${hibernate.connection.password}]" 
              defaultvalue="${hibernate.connection.password}"/>
                
        <propertyfile file="build.properties">
            <entry key="workspace.home" value="${workspace.home.new}"/>
            <entry key="jboss.home" value="${jboss.home.new}"/>
            <entry key="eclipse.wtp" value="${eclipse.wtp.new}"/>
            <entry key="action.package" value="${action.package.new}"/>
            <entry key="model.package" value="${model.package.new}"/>
            <entry key="mdb.package" value="${mdb.package.new}"/>
            <entry key="test.package" value="${test.package.new}"/>
            <entry key="database.type" value="${database.type.new}"/>
            <entry key="hibernate.dialect" value="${hibernate.dialect.new}"/>
            <entry key="hibernate.connection.driver_class" value="${hibernate.connection.driver_class.new}"/>
            <entry key="hibernate.connection.url" value="${hibernate.connection.url.new}"/>
            <entry key="hibernate.connection.username" value="${hibernate.connection.username.new}"/>
            <entry key="hibernate.connection.password" value="${hibernate.connection.password.new}"/>
            <entry key="driver.jar" value="${driver.jar.new}"/>
        </propertyfile>
    	
    	<echo message="Installing JDBC driver jar to JBoss server"/>
    	<copy file="${driver.jar.new}" todir="${jboss.home.new}/server/default/lib"/>
        
    </target>
    
    <taskdef name="hibernatetool" 
             classname="org.hibernate.tool.ant.HibernateToolTask">
        <classpath>
            <fileset dir="lib">
                <include name="*.jar"/>
            </fileset>
            <pathelement path="${driver.jar}"/>
        	<pathelement path="../jboss-seam-gen.jar"/>
        </classpath>
    </taskdef>
    
	<target name="generate-entities" depends="validate-project">
        <hibernatetool>
            <jdbcconfiguration propertyfile="build.properties" 
            	                packagename="${model.package}"/>
        	
        	<property key="hibernatetool.util.toolclass" 
        		    value="org.jboss.seam.tool.Util"/>
        	
            <hbm2java jdk5="true" ejb3="true" destdir="${project.home}/src"/> 
        	<hbmtemplate filepattern="{class-name}List.xhtml"
        	                template="view/list.xhtml.ftl" 
        		             destdir="${project.home}/view"/>
        	<hbmtemplate filepattern="{class-name}.xhtml"
        	                template="view/view.xhtml.ftl" 
        		             destdir="${project.home}/view"/>
        	<hbmtemplate filepattern="{class-name}Edit.xhtml"
        	                template="view/edit.xhtml.ftl" 
        		             destdir="${project.home}/view"/>
        	<hbmtemplate filepattern="{package-name}/{class-name}List.java"
        	                template="src/EntityList.java.ftl" 
        		             destdir="${project.home}/src"/>
        	<hbmtemplate filepattern="{package-name}/{class-name}Home.java"
        	                template="src/EntityHome.java.ftl" 
        		             destdir="${project.home}/src"/>
        	<hbmtemplate filepattern="menu.xhtml"
        	                template="view/layout/menu.xhtml.ftl" 
        		             destdir="${project.home}/view/layout"/>
		</hibernatetool>
    </target>
	
	<target name="reset">
		<delete file="build.properties"/>
	</target>
	
	<target name="settings">
		<echo message="Java project workspace: ${workspace.home}"/>
		<echo message="JBoss home: ${jboss.home}"/>
		<echo message="Hibernate dialect: ${hibernate.dialect}"/>
		<echo message="JDBC URL: ${hibernate.connection.url}"/>
		<echo message="JDBC driver class: ${hibernate.connection.driver_class}"/>
		<echo message="Database username: ${hibernate.connection.username}"/>
		<echo message="Database password: ${hibernate.connection.password}"/>
	</target>

</project>
