<s:fragment
        xmlns:s="http://jboss.com/products/seam/taglib"
        xmlns:ui="http://java.sun.com/jsf/facelets"
        xmlns:f="http://java.sun.com/jsf/core"
        xmlns:h="http://java.sun.com/jsf/html"
        xmlns:a="https://ajax4jsf.dev.java.net/ajax"
        xmlns:wiki="http://jboss.com/products/seam/wiki">

<!-- TODO: Most of this Javascript could be made generic and not rendered for each and every
     text editor on the page (luckily we usually have just one)... -->

<script type="text/javascript" src="#{wikiPreferences.baseUrl}/seam/resource/remoting/resource/remote.js"></script>
<script type="text/javascript" src="#{wikiPreferences.baseUrl}/seam/resource/remoting/interface.js?wikiTextEditor"></script>
<script type="text/javascript">
    /* Set text area resize on backing bean */
    Seam.Remoting.displayLoadingMessage = function() {};
    Seam.Remoting.hideLoadingMessage = function() {};
    Seam.Remoting.getContext().setConversationId('#{conversation.id}');

    var wikiTextEditor = Seam.Component.getInstance("wikiTextEditor");
    function storeTextAreaRows(editorId, textAreaRows) {
        wikiTextEditor.setTextAreaRows(editorId, textAreaRows, noopCallback);
    }
    function noopCallback() {}
</script>

<s:div styleClass="entry" id="#{textEditorId}TextEditor" style="margin-bottom:10px;">

    <script type="text/javascript">
    if(!jQuery.browser.safari &amp;&amp; !jQuery.browser.msie){

        /* Assign resize handle to text area */
        jQuery(function() {
            jQuery("##{namingContainer}\\:#{textEditorId}TextEditDiv").Resizable({
                minHeight: 50,
                handlers: {
                    s: '##{namingContainer}\\:#{textEditorId}TextEditResizeHandle'
                },
                onResize: function(size) {
                    jQuery("##{namingContainer}\\:#{textEditorId}TextArea").attr("rows", Math.floor(size.height/15));
                    jQuery("##{namingContainer}\\:#{textEditorId}TextArea").css({ height: size.height + "px" });
                },
                onStop: function() {
                    storeTextAreaRows('#{textEditorId}', jQuery("##{namingContainer}\\:#{textEditorId}TextArea").attr('rows'));
                }
            });
            jQuery("##{namingContainer}\\:#{textEditorId}TextEditResizeHandle").show();
        })
    };
    </script>

    <s:span id="#{textEditorId}MessageLabel">

        <s:div id="#{textEditorId}Message" styleClass="#{wiki:hasMessage(namingContainer, wiki:concat(textEditorId, 'TextArea'))?'errorDiv':''}">
            <h:panelGrid columns="2" rendered="#{wiki:hasMessage(namingContainer, wiki:concat(textEditorId, 'TextArea'))}">
                <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/attention.gif"
                                width="18" height="18"
                                styleClass="attentionImage"/>
                <s:span styleClass="attentionMessage">&#160;<span id="#{textEditorId}MessageText"><h:message for="#{textEditorId}TextArea"/></span></s:span>
            </h:panelGrid>
        </s:div>

        <div class="label">
            <s:div id="#{textEditorId}TabErrors">
                <s:div rendered="#{!empty tabId}">
                    <s:span rendered="#{wiki:hasMessage(namingContainer, wiki:concat(textEditorId, 'TextArea'))}">
                        <script type="text/javascript">jQuery(function() {
                            formTabRaiseError("#{tabId}", "#{textEditorId}TextArea", '#{label}:&#160;' + jQuery("##{textEditorId}MessageText").html());
                        });</script>
                    </s:span>
                    <s:span rendered="#{!wiki:hasMessage(namingContainer, wiki:concat(textEditorId, 'TextArea'))}">
                        <script type="text/javascript">jQuery(function() {
                            formTabClearError("#{tabId}", "#{textEditorId}TextArea");
                        });</script>
                    </s:span>
                </s:div>
            </s:div>

            <s:div id="#{textEditorId}Label" styleClass="#{wiki:hasMessage(namingContainer, wiki:concat(textEditorId, 'TextArea'))?'errorDiv':''}">
                <ui:decorate template="helpPopupButton.xhtml">
                    <ui:param name="label"  value="?"/>
                    <ui:param name="width"  value="550"/>
                    <ui:param name="height" value="350"/>
                    <ui:param name="top"    value="100"/>
                    <ui:param name="left"   value="100"/>
                    <ui:param name="helpDocument" value="Wiki Text Markup"/>
                 </ui:decorate>
                <h:outputText value="#{label}:"/>
                <s:fragment rendered="#{not empty textPreviewId}">
                    <br/>
                    <h:outputText value="(#{valueMaxLength - wiki:length(valueBinding)} characters left)"/>
                </s:fragment>
            </s:div>
        </div>

    </s:span>

    <div class="input">
        <s:validateAll>

        <s:div id="#{textEditorId}TextEditDiv" styleClass="textEditResizable">
            <h:inputTextarea id="#{textEditorId}TextArea"
                             style="line-height: 15px"
                             tabindex="1"
                             validator="seamTextValidator"
                             cols="#{empty textEditorColumns ? '58' : textEditorColumns}"
                             rows="#{not empty wikiTextEditor.getTextAreaRows(textEditorId)
                                     ? wikiTextEditor.getTextAreaRows(textEditorId)
                                     : textEditorRows}"
                             required="#{valueRequired}"
                             value="#{valueBinding}">
                <a:support event="onkeyup"
                           reRender="#{textEditorId}MessageLabel, #{textPreviewId}"
                           status="#{namingContainer}:status"
                           requestDelay="5000"
                           ajaxSingle="true"
                           eventsQueue="textEditKeyPress"
                           rendered="#{not empty textPreviewId}"/>
            </h:inputTextarea>
            <s:div id="#{textEditorId}TextEditResizeHandle" styleClass="textEditResizeHandle" style="display:none;"/>
        </s:div>

        </s:validateAll>
    </div>
</s:div>

</s:fragment>

