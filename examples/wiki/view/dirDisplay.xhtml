<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:s="http://jboss.com/products/seam/taglib"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:wiki="http://jboss.com/products/seam/wiki"
                template="themes/#{wikiPreferences.themeName}/template.xhtml">

<ui:define name="includeHeaders">
    <link href="#{themePath}/css/userControl.css" rel="stylesheet" type="text/css"/>
    <link href="#{themePath}/css/searchControl.css" rel="stylesheet" type="text/css"/>
    <link href="#{themePath}/css/mainMenu.css" rel="stylesheet" type="text/css"/>
</ui:define>

<ui:define name="screenname">Browse Directory</ui:define>

<ui:define name="headerTopRight">
    <ui:include src="includes/userControl.xhtml"/>
</ui:define>

<ui:define name="headerBottomLeft">&#160;</ui:define>

<ui:define name="sidebar">
    <ui:include src="includes/searchControl.xhtml"/>
    <ui:include src="includes/mainMenu.xhtml"/>
</ui:define>

<ui:define name="controlRight">

    <h:panelGroup rendered="#{!empty currentDirectory.parent}">
        <s:link id="createDir"  styleClass="linkNavigation" action="createDir" accesskey="S"
                rendered="#{s:hasPermission('Node', 'create', currentDirectory)}">New <u>S</u>ubdirectory</s:link>

        <s:link id="editDir"    styleClass="linkNavigation" action="editDir" accesskey="E"
                rendered="#{s:hasPermission('Node', 'edit', currentDirectory)}"><u>E</u>dit Directory</s:link>

        <s:link id="createDoc" styleClass="linkNavigation" action="createDoc" accesskey="N"
                rendered="#{s:hasPermission('Node', 'create', currentDirectory)}"><u>N</u>ew Document</s:link>

        <s:link id="uploadFile" styleClass="linkNavigation" action="uploadFile" accesskey="U"
                rendered="#{s:hasPermission('Node', 'create', currentDirectory)}"><u>U</u>pload File</s:link>
    </h:panelGroup>

    <h:panelGroup rendered="#{empty currentDirectory.parent}">
        <s:link id="createArea" styleClass="linkNavigation" action="createDir" accesskey="N"
                rendered="#{s:hasPermission('Node', 'create', currentDirectory)}"><u>N</u>ew Area</s:link>

        <s:link id="editRoot"     styleClass="linkNavigation" action="editDir" accesskey="E"
                rendered="#{s:hasPermission('Node', 'edit', currentDirectory)}"><u>E</u>dit Wiki Root</s:link>
    </h:panelGroup>
</ui:define>

<ui:define name="content">

    <div class="directoryPathPanel">
        <h:panelGroup>
            <ui:repeat var="directory" value="#{currentDirectoryPath}">
                <s:button view="/dirDisplay.xhtml" value="#{directory.name}" styleClass="directoryButton" tabindex="1">
                    <f:param name="nodeId" value="#{directory.id}"/>
                </s:button>
                <h:outputText value="/" styleClass="directorySeparator" rendered="#{directory != currentDirectory}"/>
            </ui:repeat>
        </h:panelGroup>
    </div>

    <s:div styleClass="directoryEmpty" rendered="#{empty currentDirectory.children}">
        <h:outputText value="This directory is empty."/>
    </s:div>

    <h:dataTable id="directoryTable" var="node"
                 value="#{currentDirectory.children}"
                 rendered="#{!empty currentDirectory.children}"
                 styleClass="datatable topLeftBottomBorder"
                 headerClass="regularHeader rightBorder"
                 columnClasses="onePercentColumn rightBorder alignCenter, defaultColumn rightBorder alignLeft,
                                tenPercentColumn rightBorder alignLeft, twentyPercentColumn rightBorder alignLeft,
                                twentyPercentColumn rightBorder alignLeft,twentyPercentColumn rightBorder alignCenter"
                 rowClasses="rowOdd,rowEven"
                 cellpadding="0" cellspacing="0" border="0">

        <h:column>
            <f:facet name="header">
                Test
                <s:link view="/dirDisplay.xhtml" tabindex="1"
                        rendered="#{!empty currentDirectory.parent and s:hasPermission('Node','read',currentDirectory.parent)}">
                    <f:param name="nodeId" value="#{currentDirectory.parent.id}"/>
                    <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/icon.dirup.gif" width="18" height="20"/>
                </s:link>
            </f:facet>
            <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/icon.dir.gif"
                            width="18" height="20"
                            rendered="#{wiki:isDirectory(node)}"/>
            <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/icon.doc.gif"
                            width="18" height="20"
                            rendered="#{wiki:isDocument(node) and node != currentDirectory.defaultDocument}"/>
            <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/icon.doc.default.gif"
                            width="18" height="20"
                            rendered="#{wiki:isDocument(node) and node == currentDirectory.defaultDocument}"/>

            <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/#{fileMetaMap[node.contentType].displayIcon}"
                            width="18" height="20"
                            rendered="#{wiki:isFile(node) and !empty fileMetaMap[node.contentType]}"/>
            <h:graphicImage value="/themes/#{wikiPreferences.themeName}/img/#{fileMetaMap['generic'].displayIcon}"
                            width="18" height="20"
                            rendered="#{wiki:isFile(node) and empty fileMetaMap[node.contentType]}"/>
        </h:column>

        <h:column>
            <f:facet name="header">
                Name
            </f:facet>

            <s:span rendered="#{wiki:isDirectory(node)}">
                <s:link id="browseDirectory" value="#{node.name}" view="/dirDisplay.xhtml"
                        rendered="#{s:hasPermission('Node','read',node)}" tabindex="2">
                    <f:param name="nodeId" value="#{node.id}"/>
                </s:link>
                <h:outputText value="#{node.name}" rendered="#{!s:hasPermission('Node','read',node)}"/>
            </s:span>

            <s:span rendered="#{wiki:isDocument(node)}">
                <h:outputLink value="#{wiki:renderURL(node)}" rendered="#{s:hasPermission('Node','read',node)}" tabindex="2">#{node.name}</h:outputLink>
                <h:outputText value="#{node.name}" rendered="#{!s:hasPermission('Node','read',node)}"/>
            </s:span>

            <s:span rendered="#{wiki:isFile(node) and s:hasPermission('Node', 'edit', node)}">
                <s:link id="editFile" value="#{node.name}" action="editFile" tabindex="2">
                    <f:param name="fileId" value="#{node.id}"/>
                </s:link>
                <h:outputText value=" (#{node.humanReadableFilesize}, #{node.contentType})"/>
            </s:span>
            <s:span rendered="#{wiki:isFile(node) and !s:hasPermission('Node', 'edit', node)}">
                <h:outputText value="#{node.name} (#{node.humanReadableFilesize}, #{node.contentType})"/>
            </s:span>

        </h:column>

        <h:column>
            <f:facet name="header">
                Owner
            </f:facet>
            #{node.createdBy.firstname} #{node.createdBy.lastname}
        </h:column>

        <h:column>
            <f:facet name="header">
                Read Access Level
            </f:facet>
            #{wiki:truncateString(wiki:resolveAccessLevel(node.readAccessLevel).roleNames, 20, '...')}
        </h:column>

        <h:column>
            <f:facet name="header">
                Write Access Level
            </f:facet>
            #{wiki:truncateString(wiki:resolveAccessLevel(node.writeAccessLevel).roleNames, 20, '...')}
        </h:column>

        <h:column rendered="#{!empty node.lastModifiedOn and !empty node.lastModifiedBy}">
            <f:facet name="header">
                Last Modified On
            </f:facet>
            <h:outputText value="#{node.lastModifiedOn}">
                <f:convertDateTime type="both"/>
            </h:outputText>
            (#{node.lastModifiedBy.username})
        </h:column>

        <h:column rendered="#{empty node.lastModifiedOn or empty node.lastModifiedBy}">
            <f:facet name="header">
                Last Modified On
            </f:facet>
            -
        </h:column>

    </h:dataTable>

</ui:define>

<ui:define name="footer">&#160;</ui:define>

</ui:composition>

