<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>

    <filter-def name="accessLevelFilter">
        <filter-param name="currentAccessLevel" type="integer"/>
    </filter-def>

    <!-- TODO: Re-creating FK constraints with options not supported by Hibernate's @ForeignKey
    This sucks big time... especially for MySQL which is too dumb to recognize two commands separated with a semicolon...
    http://opensource.atlassian.com/projects/hibernate/browse/ANN-598

    You have to wonder how horrible MySQL really is deep inside:
    http://www.verysimple.com/blog/2006/10/22/mysql-error-number-1005-cant-create-table-mydbsql-328_45frm-errno-150
    -->

    <!-- ############################### HSQL DB ############################### -->

    <database-object>
        <create>
            alter table FEED_FEEDENTRY drop constraint FK_FEED_FEEDENTRY_FEED_ID;
            alter table FEED_FEEDENTRY add constraint FK_FEED_FEEDENTRY_FEED_ID foreign key (FEED_ID) references FEED on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table FEED_FEEDENTRY drop constraint FK_FEED_FEEDENTRY_FEEDENTRY_ID;
            alter table FEED_FEEDENTRY add constraint FK_FEED_FEEDENTRY_FEEDENTRY_ID foreign key (FEEDENTRY_ID) references FEEDENTRY on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_DIRECTORY drop constraint FK_WIKI_DIRECTORY_DEFAULT_FILE_ID;
            alter table WIKI_DIRECTORY add constraint FK_WIKI_DIRECTORY_DEFAULT_FILE_ID foreign key (DEFAULT_FILE_ID) references WIKI_FILE on delete set null;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_TAG drop constraint FK_WIKI_TAG_FILE_ID;
            alter table WIKI_TAG add constraint FK_WIKI_TAG_FILE_ID foreign key (FILE_ID) references WIKI_FILE on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_FILE_LINK drop constraint FK_SOURCE_WIKI_FILE_ID;
            alter table WIKI_FILE_LINK add constraint FK_SOURCE_WIKI_FILE_ID foreign key (SOURCE_WIKI_FILE_ID) references WIKI_FILE on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_FILE_LINK drop constraint FK_TARGET_WIKI_FILE_ID;
            alter table WIKI_FILE_LINK add constraint FK_TARGET_WIKI_FILE_ID foreign key (TARGET_WIKI_FILE_ID) references WIKI_FILE on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USERS drop constraint FK_USER_MEMBER_HOME_WIKI_DIRECTORY_ID;
            alter table USERS add constraint FK_USER_MEMBER_HOME_WIKI_DIRECTORY_ID foreign key (MEMBER_HOME_WIKI_DIRECTORY_ID) references WIKI_DIRECTORY on delete set null;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USER_ROLE drop constraint USER_ROLE_USER_ID;
            alter table USER_ROLE add constraint USER_ROLE_USER_ID foreign key (USER_ID) references USERS on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USER_ROLE drop constraint USER_ROLE_ROLE_ID;
            alter table USER_ROLE add constraint USER_ROLE_ROLE_ID foreign key (ROLE_ID) references ROLES on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USERS drop constraint FK_USER_USER_PROFILE_ID;
            alter table USERS add constraint FK_USER_USER_PROFILE_ID foreign key (USER_PROFILE_ID) references USER_PROFILE on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            create index IDX_COMPONENT_NAME on PREFERENCE (COMPONENT_NAME);
        </create>
        <drop>
            drop index IDX_COMPONENT_NAME
        </drop>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <database-object>
        <create>
            create index IDX_COMPONENT_PROPERTY_NAME on PREFERENCE (PROPERTY_NAME, COMPONENT_NAME);
        </create>
        <drop>
            drop index IDX_COMPONENT_PROPERTY_NAME
        </drop>
        <dialect-scope name="org.hibernate.dialect.HSQLDialect"/>
    </database-object>

    <!-- ############################### MySQL ############################### -->

    <database-object>
        <create>
            alter table FEED_FEEDENTRY drop foreign key FK_FEED_FEEDENTRY_FEED_ID;
        </create><drop/><dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table FEED_FEEDENTRY
                add constraint FK_FEED_FEEDENTRY_FEED_ID foreign key (FEED_ID) references FEED (FEED_ID) on delete cascade;
        </create><drop/><dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table FEED_FEEDENTRY drop foreign key FK_FEED_FEEDENTRY_FEEDENTRY_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table FEED_FEEDENTRY
                add constraint FK_FEED_FEEDENTRY_FEEDENTRY_ID foreign key (FEEDENTRY_ID) references FEEDENTRY (FEEDENTRY_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_DIRECTORY drop foreign key FK_WIKI_DIRECTORY_DEFAULT_FILE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table WIKI_DIRECTORY add constraint FK_WIKI_DIRECTORY_DEFAULT_FILE_ID foreign key (DEFAULT_FILE_ID) references WIKI_FILE(NODE_ID) on delete set null;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_TAG drop foreign key FK_WIKI_TAG_FILE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table WIKI_TAG add constraint FK_WIKI_TAG_FILE_ID foreign key (FILE_ID) references WIKI_FILE(NODE_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_FILE_LINK drop foreign key FK_SOURCE_WIKI_FILE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table WIKI_FILE_LINK add constraint FK_SOURCE_WIKI_FILE_ID foreign key (SOURCE_WIKI_FILE_ID) references WIKI_FILE(NODE_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table WIKI_FILE_LINK drop foreign key FK_TARGET_WIKI_FILE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table WIKI_FILE_LINK add constraint FK_TARGET_WIKI_FILE_ID foreign key (TARGET_WIKI_FILE_ID) references WIKI_FILE(NODE_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USERS drop foreign key FK_USER_MEMBER_HOME_WIKI_DIRECTORY_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table USERS add constraint FK_USER_MEMBER_HOME_WIKI_DIRECTORY_ID foreign key (MEMBER_HOME_WIKI_DIRECTORY_ID) references WIKI_DIRECTORY(NODE_ID) on delete set null;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USER_ROLE drop foreign key USER_ROLE_USER_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table USER_ROLE add constraint USER_ROLE_USER_ID foreign key (USER_ID) references USERS (USER_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USER_ROLE drop foreign key USER_ROLE_ROLE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table USER_ROLE add constraint USER_ROLE_ROLE_ID foreign key (ROLE_ID) references ROLES (ROLE_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            alter table USERS drop foreign key FK_USER_USER_PROFILE_ID;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>
    <database-object>
        <create>
            alter table USERS add constraint FK_USER_USER_PROFILE_ID foreign key (USER_PROFILE_ID) references USER_PROFILE (USER_PROFILE_ID) on delete cascade;
        </create>
        <drop/>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            create index IDX_COMPONENT_NAME on PREFERENCE (COMPONENT_NAME);
        </create>
        <drop>
            drop index IDX_COMPONENT_NAME
        </drop>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

    <database-object>
        <create>
            create index IDX_COMPONENT_PROPERTY_NAME on PREFERENCE (PROPERTY_NAME, COMPONENT_NAME);
        </create>
        <drop>
            drop index IDX_COMPONENT_PROPERTY_NAME
        </drop>
        <dialect-scope name="org.hibernate.dialect.MySQL5InnoDBDialect"/>
    </database-object>

</hibernate-mapping>

