<?xml version="1.0"?>

<project name="wiki" default="explodewar" basedir=".">

    <!-- ################## CONFIG ####################### -->

    <!-- Give user a chance to override without editing this file or typing -D -->
    <property file="${basedir}/build.properties" />

    <property name="profile" value="dev"/>

    <!-- set global properties for this build -->
    <property name="project.name" value="wiki"/>

    <property name="src.java.dir" value="src/main"/>
    <property name="src.test.dir" value="src/test"/>
    <property name="src.etc.dir"  value="src/etc"/>
    <property name="view.dir"     value="view"/>

    <property name="build.dir"          value="build"/>
    <property name="classes.dir"        value="${build.dir}/classes"/>
    <property name="testclasses.dir"    value="${build.dir}/testclasses"/>
    <!-- TODO: Don't change this, IntelliJ TestNG plugin bug! http://jira.opensymphony.com/browse/TESTNG-146 -->
    <property name="test.output.dir"    value="${build.dir}/test-output"/>
    <property name="exploded.dir"       value="${build.dir}/exploded"/>
    <property name="exploded.war.dir"   value="${exploded.dir}/${project.name}.war"/>

    <property name="deploy.dir"         value="${jboss.home}/server/default/deploy"/>
    <property name="deploy.war.dir"     value="${deploy.dir}/${project.name}.war"/>

    <property name="dist.dir" value="dist" />

    <property name="seam.home" value="../../"/>
    <property name="global.lib.dir" value="${seam.home}/lib" />
    <property name="seamlibs.dir"   value="${seam.home}"/>
    <property name="local.lib.dir"  value="lib" />
    <property name="drools.lib.dir" value="${seam.home}/drools/lib"/>
    <property name="embedded-jboss.dir" value="${seam.home}/bootstrap"/>

    <!-- ################## ALIASES ####################### -->

    <fileset id="globallibs" dir="${global.lib.dir}">
        <include name="*.jar"/>
        <!-- The Seam bundled Hibernate is too old to even compile this application! -->
        <exclude name="hibernate*"/>
        <exclude name="ejb3-persistence*"/>
    </fileset>

    <fileset id="seamlibs" dir="${seamlibs.dir}">
        <include name="jboss-seam*.jar"/>
        <exclude name="jboss-seam-gen.jar"/>
    </fileset>

    <zipfileset id="droolslibs" dir="${drools.lib.dir}">
        <include name="*.jar"/>
        <exclude name="commons-lang*.jar"/>
        <exclude name="commons-logging*.jar"/>
    </zipfileset>

    <path id="build.classpath">
        <fileset refid="globallibs" />
        <fileset refid="seamlibs"/>
        <fileset refid="droolslibs"/>
        <fileset dir="${local.lib.dir}"/>
    </path>

    <path id="test.classpath">
        <!-- THE ORDER IS CRITICALLY IMPORTANT! -->

        <pathelement path="${testclasses.dir}"/>
        <pathelement path="${embedded-jboss.dir}"/>

        <fileset dir="${global.lib.dir}">
            <include name="*.jar" />
            <exclude name="hibernate*.jar"/>
        </fileset>
        <fileset dir="${local.lib.dir}">
            <include name="*.jar" />
        </fileset>

        <!-- YOU NEED THIS FILESET AND IT CAN ONLY CONTAIN jboss-seam.jar AND NOTHING ELSE!
             OTHERWISE THE EMBEDDABLE CONTAINER WON'T SCAN IT FOR EJBs (EjbTransaction, TimserServiceDispatcher, etc.)
             IN THE jboss-seam.jar.
        -->
        <fileset dir="${seam.home}">
            <include name="jboss-seam.jar" />
        </fileset>

        <!-- YES, THIS LOADS jboss-seam.jar AGAIN... -->
        <fileset refid="seamlibs"/>

    	<!-- Add EMMA to the classpath for coverage support -->
    	<pathelement location="${seam.home}/extras/emma/emma.jar" />
    	<pathelement location="${seam.home}/extras/emma/emma_ant.jar" />
    </path>

    <path id="tools.classpath">
        <fileset dir="${global.lib.dir}">
            <include name="thirdparty*.jar"/>
        </fileset>
        <fileset dir="${local.lib.dir}"/>
    </path>

    <patternset id="meta.files">
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
        <include name="**/*.sql"/>
        <include name="**/*.drl"/>
        <include name="**/*.MF"/>
    </patternset>

    <!-- ################## CUSTOM TASKS ####################### -->


    <!-- ################## SETUP ####################### -->

    <target name="init" description="Initialize the project build">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${testclasses.dir}"/>
        <mkdir dir="${exploded.war.dir}"/>
    	<taskdef name="hibernatetool"
    	             classname="org.hibernate.tool.ant.HibernateToolTask"
    	             classpathref="tools.classpath"/>
    </target>

    <target name="clean" description="Cleans up all build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <target name="upgradehibernate"
            description="Copy updated Hibernate libraries into JBoss AS default/lib/ directory">

        <delete>
            <fileset dir="${jboss.home}/server/default/lib">
                <include name="hibernate*"/>
            </fileset>
        </delete>
        <copy todir="${jboss.home}/server/default/lib">
            <fileset dir="${local.lib.dir}">
                <include name="hibernate*"/>
                <!-- We put this in WEB-INF/lib -->
                <exclude name="hibernate-search*"/>
                <!-- We don't need that at runtime -->
                <exclude name="hibernate-tools*"/>
            </fileset>
        </copy>

    </target>

    <!-- ################## COMPILE ####################### -->

    <target name="compileclasses" depends="init"
            description="Compile the main Java source code">

        <javac classpathref="build.classpath"
                    destdir="${classes.dir}"
                      debug="${javac.debug}"
                deprecation="${javac.deprecation}"
                     nowarn="${javac.nowarn}">
            <src path="${src.java.dir}"/>
        </javac>

        <!-- Copy resources (mapping files, properties, etc.) to classes -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>

        <taskdef name="instrument" classname="org.hibernate.tool.instrument.javassist.InstrumentTask">
            <classpath path="${classes.dir}"/>
            <classpath refid="build.classpath"/>
        </taskdef>

        <instrument verbose="false">
            <fileset dir="${classes.dir}/org/jboss/seam/wiki/core/model">
                <include name="*.class"/>
            </fileset>
        </instrument>

    </target>

    <!-- ################## EXPLODE ####################### -->

    <target name="explodewar" depends="explodehotdeploy, exploderesources"
            description="Creates a hot-redeployable exploded WAR directory">
    </target>

    <target name="explodehotdeploy" depends="compileclasses">

        <mkdir dir="${exploded.war.dir}/WEB-INF/classes"/>
        <mkdir dir="${exploded.war.dir}/WEB-INF/dev"/>

        <!-- ########## Classes ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${classes.dir}" excludes="${hotdeploy.classes}"/>
        </copy>
        <copy todir="${exploded.war.dir}/WEB-INF/dev">
            <fileset dir="${classes.dir}" includes="${hotdeploy.classes}"/>
        </copy>

        <!-- ########## XHTML ########### -->
        <copy todir="${exploded.war.dir}">
            <fileset dir="${view.dir}"/>
        </copy>

    </target>

    <target name="exploderegular" depends="compileclasses">

        <!-- ########## Classes ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${classes.dir}"/>
        </copy>

        <!-- ########## XHTML ########### -->
        <copy todir="${exploded.war.dir}">
            <fileset dir="${view.dir}"/>
        </copy>

    </target>

    <target name="exploderesources">

        <!-- ########## Libs ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/lib">
            <fileset refid="droolslibs"/>
            <fileset refid="seamlibs"/>
            <fileset dir="${global.lib.dir}">
                <include name="richfaces*.jar" />
                <include name="oscache*.jar" />
                <include name="jsf-facelets.jar" />
                <include name="commons-jci-*.jar"/>
                <include name="commons-digester-*.jar"/>
                <include name="commons-beanutils-*.jar"/>
                <include name="jbpm*.jar" />
                <include name="jboss-el.jar" />
                <include name="urlrewrite*.jar" />
                <include name="itext*.jar" />
                <include name="lucene*.jar" />
            </fileset>
        </copy>
        <copy todir="${exploded.war.dir}/WEB-INF/lib">
            <fileset dir="${local.lib.dir}">
                <exclude name="ejb3-persistence*"/>
                <exclude name="hibernate3*"/>
                <exclude name="hibernate-tools*"/>
                <exclude name="hibernate-commons*"/>
                <exclude name="hibernate-annotations*"/>
                <exclude name="hibernate-entitymanager*"/>
                <exclude name="hibernate-validator*"/>
                <exclude name="mysql-connector*"/>
            </fileset>
        </copy>

        <!-- ########## Configuration files (WEB-INF) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF">
            <fileset dir="${src.etc.dir}/WEB-INF">
                <patternset refid="meta.files"/>
            </fileset>
            <!-- Override components.xml setting -->
            <filterset>
                <filter token="jndiPattern" value="${project.name}/#{ejbName}/local"/>
                <filter token="seamStartsPersistenceUnit" value="true"/>
                <filter token="ejbTransaction" value="false"/>
            </filterset>
        </copy>

        <!-- ########## Configuration files (WEB-INF/classes) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${src.etc.dir}">
                <include name="security.drl" />
                <include name="messages*.properties"/>
                <include name="*jpdl.xml"/>
                <include name="jbpm.cfg.xml"/>
                <include name="*.skin.properties"/>
                <include name="ehcache.xml"/>
            </fileset>
        </copy>
        <copy tofile="${exploded.war.dir}/WEB-INF/classes/import.sql"
                file="${src.etc.dir}/import-${profile}.sql"
           overwrite="true"/>
        <!-- Replace @@LF@@ in import.sql with real SQL char(10) linefeed (concat)-->
        <replace file="${exploded.war.dir}/WEB-INF/classes/import.sql" token="@@LF@@" value="'||char(10)||'"/>

        <!-- ########## Configuration files (WEB-INF/classes/META-INF) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes/META-INF">
            <fileset dir="${src.etc.dir}/META-INF">
                <include name="*.taglib.xml"/>
            </fileset>
        </copy>
        <copy tofile="${exploded.war.dir}/WEB-INF/classes/META-INF/persistence.xml"
                file="${src.etc.dir}/META-INF/persistence-${profile}-war.xml"
                overwrite="true">
        </copy>
        <!--
        <replace file="${exploded.war.dir}/WEB-INF/classes/META-INF/persistence.xml"
                 token="@LuceneIndexDir@" value="${lucene.indexDir}"/>
         -->

    </target>

    <!-- ################## DEPLOYMENT ####################### -->

    <target name="hotdeploy" depends="explodehotdeploy"
            description="Deploys only hotdeployable resources (call in IDE after compile)">
        <fail unless="jboss.home">jboss.home not set</fail>

        <!-- ######## Classes ######## -->
        <copy todir="${deploy.war.dir}/WEB-INF/dev">
            <fileset dir="${exploded.war.dir}/WEB-INF/dev"/>
        </copy>

        <!-- ######## XHTML ######## -->
        <copy todir="${deploy.war.dir}">
            <fileset dir="${exploded.war.dir}" excludes="WEB-INF/**"/>
        </copy>

    </target>

    <target name="deploy" depends="explodewar"
            description="Deploy datasource and exploded WAR to JBoss AS">
        <fail unless="jboss.home">jboss.home not set</fail>

        <!-- ######## Datasoure ######## -->
        <copy todir="${deploy.dir}">
            <fileset dir="${src.etc.dir}">
                <include name="${project.name}-${profile}-ds.xml" />
            </fileset>
        </copy>

        <!-- ######## Exploded WAR ######## -->
        <copy todir="${deploy.war.dir}">
            <fileset dir="${exploded.war.dir}"/>
        </copy>

    </target>

    <target name="undeploy"
            description="Undeploy datasource and exploded WAR">
        <fail unless="jboss.home">jboss.home not set</fail>

        <delete dir="${deploy.war.dir}" failonerror="no"/>
        <delete file="${deploy.dir}/${project.name}-${profile}-ds.xml" failonerror="no"/>

    </target>

    <target name="redeploy" depends="deploy" description="Deploy and restart the WAR">
        <touch file="${deploy.war.dir}/WEB-INF/web.xml"/>
    </target>

    <target name="cleanredeploy" depends="undeploy, clean, deploy"
            description="Undeploy, clean up, build and redeploy"/>

    <!-- ######################## DISTRIBUTION ################## -->

    <target name="dist" depends="clean, exploderegular, exploderesources"
            description="Package a (non-hotdeploy) WAR archive">

        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>

        <jar jarfile="${dist.dir}/${project.name}.war" basedir="${exploded.war.dir}"/>

        <copy tofile="${dist.dir}/${project.name}-ds.xml"
                file="${src.etc.dir}/${project.name}-${profile}-ds.xml"/>

        <copy tofile="${dist.dir}/${project.name}-data.sql"
                file="${src.etc.dir}/import-prod.sql"
           overwrite="true"/>
        <!-- Now mess with the import.sql file because Hibernate doesn't use semicolons -->
        <replaceregexp file="${dist.dir}/${project.name}-data.sql"
                       match="(.+)"
                       replace="\1;"
                       byline="true"/>

        <!-- Replace @@LF@@ in import.sql with real SQL char(10) linefeed (concat)-->
        <replace file="${dist.dir}/${project.name}-data.sql" token="@@LF@@" value="'||char(10)||'"/>

        <!-- Schema -->
        <hibernatetool destdir="${basedir}">
            <classpath path="${exploded.war.dir}/WEB-INF/classes"/>
            <jpaconfiguration/> <!-- Use META-INF/persistence.xml -->
            <hbm2ddl
                drop="false"
                create="true"
                export="false"
                outputfilename="${dist.dir}/${project.name}-ddl.sql"
                delimiter=";"
                format="true"/>
        </hibernatetool>

        <!-- Clean up afterwards for the next deploy run -->
        <antcall target="clean"/>

    </target>

    <!-- ######################## TOOLS ################## -->

    <target name="schemaexport" depends="clean, exploderegular, exploderesources"
        description="Exports a generated schema to a file">

        <mkdir dir="${dist.dir}"/>

        <hibernatetool destdir="${basedir}">
            <classpath path="${exploded.war.dir}/WEB-INF/classes"/>
            <jpaconfiguration/> <!-- Use META-INF/persistence.xml -->
            <hbm2ddl
                drop="false"
                create="true"
                export="false"
                outputfilename="${dist.dir}/${project.name}-ddl.sql"
                delimiter=";"
                format="true"/>
        </hibernatetool>

        <!-- Clean up afterwards for the next deploy run -->
        <antcall target="clean"/>

        <echo message="Exported DDL to file: ${dist.dir}/${project-name}-ddl.sql"/>
    </target>

    <!-- ######################## TESTS ################## -->

    <target name="compiletests" depends="clean, compileclasses"
            description="Compile the test Java source code">

        <javac classpathref="build.classpath"
                    destdir="${testclasses.dir}"
                      debug="${javac.debug}"
                deprecation="${javac.deprecation}"
                     nowarn="${javac.nowarn}">
            <classpath path="${classes.dir}"/>
            <src path="${src.test.dir}" />
        </javac>

        <!-- Copy resources (mapping files, properties, etc.) to classes -->
        <!-- components.properties overrides settings in components.xml -->
        <copy todir="${testclasses.dir}">
            <fileset dir="${src.test.dir}">
                <patternset refid="meta.files"/>
                <exclude name="*.tng.xml"/>
            </fileset>
        </copy>

    </target>

    <target name="configuretests" depends="compiletests"
            description="Copy resources to test path (call from IDE before tests)">

        <!-- ######## NEED TO COPY CLASSES TO TEST CLASSES DIRECTORY, SPLITTING DIRECTORIES NO LONGER WORKS -->
        <copy todir="${testclasses.dir}">
            <fileset dir="${classes.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <!-- ######## Test config ######## -->
        <copy todir="${testclasses.dir}">
            <fileset dir="${src.etc.dir}">
                <include name="**/*"/>
                <!-- Handle these below -->
                <exclude name="META-INF/persistence*.xml"/>
                <exclude name="${project.name}-*-ds.xml"/>
                <exclude name="import*.sql"/>
            </fileset>
        </copy>
        <copy tofile="${testclasses.dir}/META-INF/persistence.xml"
                file="${src.etc.dir}/META-INF/persistence-test-war.xml"
           overwrite="true"/>
        <copy tofile="${testclasses.dir}/wiki-ds.xml"
                file="${src.etc.dir}/wiki-test-ds.xml"
           overwrite="true"/>

        <!-- ######## Test output ######## -->
        <delete  dir="${test.output.dir}"/>
        <mkdir dir="${test.output.dir}"/>

    </target>

    <target name="test" depends="configuretests"
            description="Run tests defined in *.tng.xml">
        <taskdef resource="testngtasks" classpathref="test.classpath"/>
        <testng outputdir="${test.output.dir}">
            <classpath refid="test.classpath"/>
            <xmlfileset dir="${src.test.dir}" includes="*.tng.xml" />
            <jvmarg line="${testng.jvmargs}"/>
        </testng>
        <echo message="Please read the test output in directory: ${test.output.dir}"/>
    </target>


    <property name="database.dir"        value="database"/>
    <target name="startdb" description="Run HSQL database server with clean content">
        <!-- Delete database files -->
        <mkdir dir="${database.dir}"/>
        <delete>
            <fileset dir="${database.dir}">
                <include name="db*"/>
            </fileset>
        </delete>
        <java classname="org.hsqldb.Server"
              fork="yes"
              classpath="${seam.home}/seam-gen/lib/hsqldb.jar"
              failonerror="true">
            <arg value="-database.0"/>
            <arg value="file:${database.dir}/db"/>
        </java>
    </target>


</project>
