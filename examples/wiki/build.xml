<?xml version="1.0"?>

<project name="wiki" default="explodewar" basedir=".">

    <!-- ################## CONFIG ####################### -->

    <!-- Give user a chance to override without editing this file or typing -D -->
    <property file="${basedir}/build.properties" />

    <property name="profile" value="dev"/>

    <!-- set global properties for this build -->
    <property name="project.name" value="wiki"/>

    <property name="src.java.dir" value="src/main"/>
    <property name="src.test.dir" value="src/test"/>
    <property name="src.etc.dir"  value="src/etc"/>
    <property name="view.dir"     value="view"/>

    <property name="build.dir"          value="build"/>
    <property name="classes.dir"        value="${build.dir}/classes"/>
    <property name="testclasses.dir"    value="${build.dir}/testclasses"/>
    <property name="exploded.dir"       value="${build.dir}/exploded"/>
    <property name="exploded.war.dir"   value="${exploded.dir}/${project.name}.war"/>

    <property name="deploy.dir"         value="${jboss.home}/server/default/deploy"/>
    <property name="deploy.war.dir"     value="${deploy.dir}/${project.name}.war"/>

    <property name="dist.dir" value="dist" />

    <property name="seam.home" value="../../"/>
    <property name="lib.dir"        value="${seam.home}/lib" />
    <property name="seamlibs.dir"   value="${seam.home}"/>
    <property name="drools.lib.dir" value="${seam.home}/drools/lib"/>

    <property name="embedded-ejb3.dir" value="${basedir}/embedded-ejb/conf" />

    <!-- ################## ALIASES ####################### -->

    <fileset id="lib" dir="${lib.dir}">
        <include name="*.jar" />
    </fileset>

    <fileset id="seamlibs" dir="${seamlibs.dir}">
        <include name="jboss-seam*.jar"/>
        <exclude name="jboss-seam-gen.jar"/>
    </fileset>

    <zipfileset id="droolslibs"
               dir="${drools.lib.dir}">
        <include name="*.jar"/>
        <exclude name="commons-lang*.jar"/>
        <exclude name="commons-logging*.jar"/>
    </zipfileset>

    <zipfileset id="jcaptchalibs" dir="${lib.dir}">
        <include name="jcaptcha-all*.jar"/>
    </zipfileset>

    <path id="build.classpath">
        <fileset refid="lib" />
        <fileset refid="seamlibs"/>
    </path>

    <patternset id="meta.files">
        <include name="**/*.xml"/>
        <include name="**/*.properties"/>
        <include name="**/*.sql"/>
        <include name="**/*.MF"/>
    </patternset>

    <!-- ################## SETUP ####################### -->

    <target name="init" description="Initialize the project build">
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${testclasses.dir}"/>
        <mkdir dir="${exploded.war.dir}"/>
    </target>

    <target name="clean" description="Cleans up all build artifacts">
        <delete dir="${build.dir}"/>
    </target>

    <!-- ################## COMPILE ####################### -->

    <target name="compileclasses" depends="init"
            description="Compile the main Java source code">

        <javac classpathref="build.classpath"
                    destdir="${classes.dir}"
                      debug="${javac.debug}"
                deprecation="${javac.deprecation}"
                     nowarn="${javac.nowarn}">
            <src path="${src.java.dir}" />
        </javac>

        <!-- Copy resources (mapping files, properties, etc.) to classes -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>

    </target>

    <!-- ################## EXPLODE ####################### -->

    <target name="explodewar" depends="explodehotdeployclasses, exploderesources"
            description="Creates a hot-redeployable exploded WAR directory">
    </target>

    <target name="explodehotdeployclasses" depends="compileclasses">
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${classes.dir}" excludes="${hotdeploy.classes}"/>
        </copy>
        <copy todir="${exploded.war.dir}/WEB-INF/dev">
            <fileset dir="${classes.dir}" includes="${hotdeploy.classes}"/>
        </copy>
    </target>

    <target name="explodeallclasses" depends="compileclasses">
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${classes.dir}"/>
        </copy>
    </target>

    <target name="exploderesources" depends="compileclasses">

        <!-- ########## XHTML ########### -->
        <copy todir="${exploded.war.dir}">
            <fileset dir="${view.dir}"/>
        </copy>

        <!-- ########## Libs ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/lib">
            <fileset refid="droolslibs"/>
            <fileset refid="jcaptchalibs"/>
            <fileset refid="seamlibs"/>
            <fileset dir="${lib.dir}">
                <include name="ajax4jsf.jar" />
                <include name="oscache*.jar" />
                <include name="jsf-facelets.jar" />
                <include name="jboss-seam.jar" />
                <include name="jboss-seam-*.jar" />
                <exclude name="jboss-seam-gen.jar" />
                <include name="commons-jci-*.jar"/>
                <include name="jbpm*.jar" />
                <include name="el-*.jar" />
            </fileset>
        </copy>
        <!-- TODO: Do we need this in etc? -->
        <copy todir="${exploded.war.dir}/WEB-INF">
            <fileset dir="${src.etc.dir}/WEB-INF">
                <include name="lib/*.*"/>
            </fileset>
        </copy>

        <!-- ########## Configuration files (WEB-INF) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF">
            <fileset dir="${src.etc.dir}/WEB-INF">
                <patternset refid="meta.files"/>
            </fileset>
            <!-- Set JBoss JNDI lookup pattern and disable embeddable EJB 3.0 container in Seam config files-->
            <filterset>
                <filter token="jndiPattern" value="${project.name}/#{ejbName}/local"/>
                <filter token="embeddedEjb" value="false"/>
            </filterset>
        </copy>

        <!-- ########## Configuration files (WEB-INF/classes) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes">
            <fileset dir="${src.etc.dir}">
                <include name="seam.properties" />
                <include name="security.drl" />
                <include name="messages*.properties"/>
                <include name="*jpdl.xml" />
                <include name="hibernate.cfg.xml" />
                <include name="jbpm.cfg.xml" />
            </fileset>
        </copy>
        <copy tofile="${exploded.war.dir}/WEB-INF/classes/import.sql"
                file="${src.etc.dir}/import-${profile}.sql"
           overwrite="true"/>
        <!-- Replace @@LF@@ in import.sql with real SQL char(10) linefeed (concat)-->
        <replace file="${exploded.war.dir}/WEB-INF/classes/import.sql" token="@@LF@@" value="'+char(10)+'"/>

        <!-- ########## Configuration files (WEB-INF/classes/META-INF) ########### -->
        <copy todir="${exploded.war.dir}/WEB-INF/classes/META-INF">
            <fileset dir="${src.etc.dir}/META-INF">
                <include name="wiki.taglib.xml"/>
            </fileset>
        </copy>
        <copy tofile="${exploded.war.dir}/WEB-INF/classes/META-INF/persistence.xml"
                file="${src.etc.dir}/META-INF/persistence-${profile}-war.xml"
                overwrite="true"/>

    </target>

    <!-- ################## DEPLOYMENT ####################### -->

    <target name="hotdeploy" depends="compileclasses"
            description="Deploys only hotdeployable classes/resources to JBoss AS">
        <fail unless="jboss.home">jboss.home not set</fail>

        <!-- ######## Classes ######## -->
        <copy todir="${deploy.war.dir}/WEB-INF/dev">
            <fileset dir="${classes.dir}" includes="${hotdeploy.classes}"/>
        </copy>

        <!-- ######## XHTML ######## -->
        <copy todir="${deploy.war.dir}">
            <fileset dir="${view.dir}"/>
        </copy>

    </target>

    <target name="deploy" depends="explodewar"
            description="Deploy datasource and exploded archive to JBoss AS">
        <fail unless="jboss.home">jboss.home not set</fail>

        <!-- ######## Datasoure ######## -->
        <copy todir="${deploy.dir}">
            <fileset dir="${src.etc.dir}">
                <include name="${project.name}-${profile}-ds.xml" />
            </fileset>
        </copy>

        <!-- ######## Exploded WAR ######## -->
        <copy todir="${deploy.war.dir}">
            <fileset dir="${exploded.war.dir}"/>
        </copy>

    </target>

    <target name="undeploy"
            description="Undeploy datasource and exploded archive">
        <fail unless="jboss.home">jboss.home not set</fail>

        <delete dir="${deploy.war.dir}" failonerror="no"/>
        <delete file="${deploy.dir}/${project.name}-${profile}-ds.xml" failonerror="no"/>

    </target>

    <target name="redeploy" depends="deploy" description="Deploy and restart the WAR">
        <touch file="${deploy.war.dir}/WEB-INF/web.xml"/>
    </target>

    <!-- ######################## DISTRIBUTION ################## -->

    <target name="dist" depends="clean, explodeallclasses, exploderesources"
            description="Package a WAR archive">

        <delete dir="${dist.dir}"/>
        <mkdir dir="${dist.dir}"/>

        <jar jarfile="${dist.dir}/${project.name}.war" basedir="${exploded.war.dir}"/>

        <copy tofile="${dist.dir}/${project.name}-ds.xml"
                file="${src.etc.dir}/${project.name}-${profile}-ds.xml"/>

        <antcall target="clean"/>

    </target>

    <!-- ######################## TOOLS ################## -->

    <path id="tools.classpath">
        <fileset dir="../../seam-gen/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../../hibernate/lib">
            <include name="*.jar"/>
        </fileset>
        <fileset dir="../../lib">
            <include name="thirdparty*.jar"/>
        </fileset>
    </path>

    <taskdef name="hibernatetool"
             classname="org.hibernate.tool.ant.HibernateToolTask"
             classpathref="tools.classpath"/>

    <target name="schemaexport" depends="explodewar"
        description="Exports a generated schema to a file">

        <mkdir dir="${dist.dir}"/>

        <hibernatetool destdir="${basedir}">
            <classpath path="${exploded.war.dir}/WEB-INF/classes"/>
            <jpaconfiguration/> <!-- Use META-INF/persistence.xml -->
            <hbm2ddl
                drop="false"
                create="true"
                export="false"
                outputfilename="${dist.dir}/${project.name}-ddl.sql"
                delimiter=";"
                format="true"/>
        </hibernatetool>
        <echo message="Exported DDL to file: ${dist.dir}/wiki-ddl.sql"/>
    </target>
    <!--
    <target name="compiletest" unless="eclipse.running" description="Compile the Java source code for the tests">
        <mkdir dir="${test.dir}"/>
        <javac classpathref="build.classpath"
                        destdir="${test.dir}"
                          debug="${javac.debug}"
                    deprecation="${javac.deprecation}"
                        nowarn="on">
                <src path="${src.components.dir}" />
                <src path="${src.other.dir}" />
                <src path="${src.test.dir}" />
        </javac>
    </target>

    <target name="buildtest" depends="compiletest" description="Build the tests">
        <copy todir="${test.dir}">
            <fileset dir="${basedir}/resources">
                <exclude name="META-INF/persistence*.xml"/>
                <exclude name="import*.sql"/>
                <exclude name="${project.name}-*-ds.xml"/>
            </fileset>
        </copy>
        <copy tofile="${test.dir}/META-INF/persistence.xml"
                file="${basedir}/resources/META-INF/persistence-test-war.xml"
           overwrite="true"/>
        <copy tofile="${test.dir}/import.sql"
                file="${basedir}/resources/import-test.sql"
           overwrite="true"/>
        <copy todir="${test.dir}" flatten="true">
            <fileset dir="${src.test.dir}">
                <include name="**/*Test.xml" />
            </fileset>
        </copy>
    </target>

    <target name="test" depends="buildtest" description="Run the tests">
        <taskdef resource="testngtasks" classpath="${testng.jar}" />
        <testng outputdir="${basedir}/test-report">
            <classpath path="${test.dir}" />
            <classpath path="${embedded-ejb3.dir}" />
            <classpath refid="build.classpath" />
            <xmlfileset dir="${test.dir}" includes="*Test.xml" />
        </testng>
    </target>
    -->

</project>
