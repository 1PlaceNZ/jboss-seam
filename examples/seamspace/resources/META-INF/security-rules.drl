package SeamSpacePermissions;

import java.security.Principal;

import org.jboss.seam.security.PermissionCheck;
import org.jboss.seam.security.Role;

import org.jboss.seam.example.seamspace.Member;
import org.jboss.seam.example.seamspace.MemberBlog;
import org.jboss.seam.example.seamspace.MemberFriend;
import org.jboss.seam.example.seamspace.MemberImage;

rule AdminIsAUser
  salience 10
  no-loop
when
  Role(name == "admin")
  not Role(name == "user")
then
  assert(new Role("user"));
end;

rule ViewImage
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "memberImage", action == "view", granted == false)
  img: MemberImage()
  eval( img.getMember().getPicture() == img )
then
  c.grant();
  modify(c);
end;

rule RestrictCommentPage
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "/comment.xhtml", action == "render", granted == false)
  Role(name == "user")
then
  c.grant();
  modify(c);
end;

rule CreateBlogComment
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "blog", action == "createComment", granted == false)
  Role(name == "user")
then
  c.grant();
  modify(c);
end;

rule CreateBlog
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "blog", action == "create", granted == false)
  Principal(nm : name)
  Member(username == nm)
then
  c.grant();
  modify(c);
end;

rule InsertMemberBlog
  no-loop
  activation-group "permissions"  
when
  c: PermissionCheck(name == "memberBlog", action == "insert", granted == false)
  Principal(nm : name)
  MemberBlog(mbr : member -> (mbr.getUsername().equals(nm)))
then
  c.grant();
  modify(c);
end;

rule CreateFriendComment
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "friendComment", action == "create", granted == false)
  Principal(nm : name)
  MemberFriend(authorized == true, f : friend -> (f.getUsername().equals(nm)))
then
  c.grant();
  modify(c);
end;

rule CreateFriendRequest
  no-loop
  activation-group "permissions"
when
  c: PermissionCheck(name == "friendRequest", action == "create", granted == false)
  Principal(nm : name)
  not MemberFriend(f : friend -> (f.getUsername().equals(nm)))
then
  c.grant();
  modify(c);
end;
