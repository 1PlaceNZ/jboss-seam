<?xml version="1.0"?>
<project name="NoEJB" default="war" basedir=".">

    <!-- Project settings -->
    <property name="Name"               value="Seam NoEJB Example"/>
    <property name="short.name"         value="jboss-seam-noejb"/>
    <property name="version"            value="1.0"/>

    <property name="src.java.dir"       value="src"/>
    <property name="docroot.dir"        value="resources/view"/>
    <property name="webinf.dir"         value="resources/WEB-INF"/>
    <property name="conf.dir"           value="resources/conf"/>
    <property name="build.dir"          value="build"/>
    <property name="classes.dir"        value="${build.dir}/classes"/>
    <property name="test.out.dir"       value="build/testout"/>

    <!--
        Copy all the following libraries into one directory in your own project
        and set the properties accordingly. Recommended directory is the already
        existing resources/WEB-INF/lib/ directory. See the "war" target for a
        list of required libraries.
    -->
    <property name="lib.global"         value="../../lib"/>
    <property name="lib.microcontainer" value="../../microcontainer/lib"/>
    <property name="lib.seam"           value="../../jboss-seam.jar"/>

    <!-- Deployment -->
     <property name="tomcat.home" value="/home/turin/work/local/tomcat/apache-tomcat-5.5.12"/> 
<!--
    <property name="tomcat.home" value="C:\\Documents and Settings\\christian\\My Documents\\work\\local\\tomcat\\apache-tomcat-5.5.12"/>
-->
    <!-- Globals -->
    <patternset id="meta.files">
        <include name="**/*.dtd"/>
        <include name="**/*.xml"/>
        <include name="**/*.xslt"/>
        <include name="**/*.properties"/>
    </patternset>

    <path id="build.classpath">
        <fileset dir="${lib.global}">
            <include name="**/*.jar"/>
        </fileset>
        <pathelement location="${lib.seam}"/>
    </path>

    <!-- Targets -->
    <target name="clean"
            description="Cleans up the build directory">
        <delete dir="${build.dir}"/>
    </target>

    <target name="init">
        <echo message="#### THIS BUILD SCRIPT IS UNTESTED AND WILL PROBABLY FAIL! ####"/>
        <echo message="Build ${Name} ${version}"/>
        <mkdir dir="${classes.dir}"/>
        <!-- Copy metadata files to build directory -->
        <copy todir="${classes.dir}">
            <fileset dir="${src.java.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>
        <!-- Copy configuration files to build directory -->
        <copy todir="${classes.dir}">
            <fileset dir="${conf.dir}">
              <include name="**/*"/>
            </fileset>
        </copy>
    </target>

    <target name="compile" depends="init"
            description="Compile the Java source code">
        <javac
            destdir="${classes.dir}"
            classpathref="build.classpath"
            nowarn="on">
            <src path="${src.java.dir}"/>
        </javac>
    </target>

    <target name="test" depends="compile"
            description="Run the TestNG suite on JBoss Microcontainer">
        <taskdef name="testng" classname="org.testng.TestNGAntTask"
                 classpathref="build.classpath"/>
        <testng outputDir="${test.out.dir}">
            <classpath>
                <path refid="build.classpath"/>
                <pathelement location="${classes.dir}"/>
                <fileset dir="${lib.microcontainer}">
                    <include name="**/*.jar"/>
                </fileset>
            </classpath>
           <xmlfileset dir="${classes.dir}/org/jboss/seam/example/noejb/test"
                       includes="testng.xml"/>
        </testng>
    </target>

    <target name="war" depends="compile"
            description="Create the exploded WAR in build directory">

        <!-- DOCROOT -->
        <copy todir="${build.dir}/${short.name}">
            <fileset dir="${docroot.dir}">
                <include name="**/*"/>
            </fileset>
        </copy>

        <!-- WEB-INF -->
        <copy todir="${build.dir}/${short.name}/WEB-INF">
            <fileset dir="${webinf.dir}">
                <patternset refid="meta.files"/>
            </fileset>
        </copy>

        <!-- WEB-INF/lib ... -->
        <mkdir dir="${build.dir}/${short.name}/WEB-INF/lib"/>

        <!-- Package application JAR -->
        <jar jarfile="${build.dir}/${short.name}/WEB-INF/lib/${short.name}.jar">
          <fileset dir="${classes.dir}">
            <include name="**/*"/>
            <exclude name="**/test/*"/>
          </fileset>
        </jar>

        <!-- Copy application + 3rd party libraries -->
        <copy todir="${build.dir}/${short.name}/WEB-INF/lib">

            <!-- Appliation-specific libraries -->
            <fileset dir="${webinf.dir}/lib/">
                <include name="**/*.jar"/>
            </fileset>

            <!-- 3rd party libraries -->
            <fileset dir="${lib.global}">
                <!-- MyFaces -->
                <include name="myfaces*.jar" />
                <include name="commons-digester*.jar" />
                <include name="commons-beanutils*.jar" />
                <include name="commons-codec*.jar" />

                <!-- Hibernate -->
                <include name="asm*.jar" />
                <include name="cglib*.jar" />
                <include name="hibernate*.jar" />

                <!-- Required API stubs -->
                <include name="ejb3-persistence*.jar" />
                <include name="jboss-ejb3x*.jar" />
            </fileset>

            <!-- Seam library -->
            <fileset file="${lib.seam}"/>

        </copy>

        <!-- Microcontainer libraries -->
        <copy todir="${build.dir}/${short.name}/WEB-INF/lib">
          <fileset dir="${lib.microcontainer}">
            <include name="**/*.jar"/>
          </fileset>
        </copy>

    </target>

    <target name="deploy" depends="war"
        description="Deploys application to $tomcat.home">
        <echo>Don't forget to set the path to your Tomcat install as $tomcat.home!</echo>
        <copy todir="${tomcat.home}/webapps/${short.name}">
            <fileset dir="${build.dir}/${short.name}"/>
        </copy>
        <echo>Application deployed at http://localhost:8080/${short.name}</echo>
    </target>

    <target name="undeploy"
        description="Undeploys application from $tomcat.home">
        <delete dir="${tomcat.home}/webapps/${short.name}"/>
    </target>

</project>
