<!DOCTYPE composition PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
	    		xmlns:ui="http://java.sun.com/jsf/facelets"
	  			xmlns:h="http://java.sun.com/jsf/html"
	  			xmlns:f="http://java.sun.com/jsf/core"
				template="template.xhtml">

<!-- content -->
<ui:define name="content">
<div class="section">
	<h1>Book Hotel</h1>
</div>
<div class="section">
	<h:form>
	<fieldset>
		<div class="entry">
			<div class="label">Name:</div>
			<div class="output">#{hotel.name}</div>
		</div>
		<div class="entry">
			<div class="label">Address:</div>
			<div class="output">#{hotel.address}</div>
		</div>
		<div class="entry">
			<div class="label">City:</div>
			<div class="output">#{hotel.city}</div>
		</div>
		<div class="entry">
			<div class="label">Zip:</div>
			<div class="output">#{hotel.zip}</div>
		</div>
		<div class="entry">
			<div class="label"><h:outputLabel for="checkinDate">Check In Date:</h:outputLabel></div>
			<div class="input"><h:inputText id="checkinDate" value="#{booking.checkinDate}"><f:convertDateTime type="date"/></h:inputText><br/><span class="errors"><h:message for="checkinDate" /></span></div>
		</div>
		<div class="entry">
			<div class="label"><h:outputLabel for="checkoutDate">Check Out Date:</h:outputLabel></div>
			<div class="input"><h:inputText id="checkoutDate" value="#{booking.checkoutDate}"><f:convertDateTime type="date"/></h:inputText><br/><span class="errors"><h:message for="checkoutDate" /></span></div>
		</div>
		<div class="entry">
			<div class="label"><h:outputLabel for="creditCard">Credit Card #:</h:outputLabel></div>
			<div class="input"><h:inputText id="creditCard" value="#{booking.creditCard}" /><br/><span class="errors"><h:message for="creditCard" /></span></div>
		</div>
		<div class="entry errors"><h:messages globalOnly="true" /></div>
		<div class="entry">
			<div class="label">&#160;</div>
			<div class="input">
				<h:commandButton value="Proceed" action="#{hotelBooking.setBookingDetails}" class="button"/>&#160;
				<h:commandButton value="Back To Search" action="main" class="button"/>
			</div>
		</div>
	</fieldset>
	</h:form>
</div>
</ui:define>

<!-- sidebar -->
<ui:define name="sidebar">
<h1>Subversion of Control</h1>
<p>
    We're sure you know all about the idea of <em>inversion of control</em> or <em>dependency injection</em>, 
    as seen in EJB 3.0, JSF, and about a thousand other frameworks out there. Well, dependency injection is
    great for services, but it doesn't work for stateful components. So Seam introduces <em>subversion of 
    control</em> (yes, that was a private joke we've been taking <em>way</em> too far) or <em>bijection</em>, 
    where a component attribute is considered to be aliased to a contextual variable, and the component is 
    allowed to manipulate the value of the contextual variable just be reading and writing its own instance 
    variable.
</p>
</ui:define>

</ui:composition>