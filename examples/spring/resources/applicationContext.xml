<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:seam="http://jboss.com/products/seam/spring-seam"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
                           http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
                           http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.0.xsd
                           http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
                           http://jboss.com/products/seam/spring-seam http://jboss.com/products/seam/spring-seam-2.0.xsd
                           http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd"
	default-lazy-init="true">
	<!--
	
	Waiting for SPR-3645
	
    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="org.hsqldb.jdbcDriver"/>
        <property name="url" value="jdbc:hsqldb:mem:defaultDB"/>
        <property name="username" value="sa"/>
        <property name="password" value=""/>
    </bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	-->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
	   	<property name="entityManagerFactory" ref="seamEntityManagerFactory"/>
	</bean>

	<tx:annotation-driven proxy-target-class="true" />

	<bean id="userService" class="org.jboss.seam.example.spring.UserService">
		<seam:component/>
	</bean>

	<bean id="bookingService" class="org.jboss.seam.example.spring.BookingService">
		<property name="entityManagerFactory" ref="seamEntityManagerFactory" />
		<seam:component/>
	</bean>

	<!-- Testing out a seam scope -->
	<bean id="hotelSearch" class="org.jboss.seam.example.spring.HotelSearchingAction" scope="seam.SESSION">
		<!-- Testing creation time injection -->
		<property name="pageSize" value="10" />
	</bean>

	<seam:configure-scopes />

	<bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor"/>

	<bean id="seamEntityManagerFactory" class="org.jboss.seam.ioc.spring.SeamManagedEntityManagerFactoryBean">
		<property name="persistenceContextName" value="entityManager" />
	</bean>

	<bean id="timerFactory" class="org.springframework.scheduling.timer.TimerFactoryBean" lazy-init="false">
		<property name="scheduledTimerTasks">
			<list>
				<ref bean="scheduledTask" />
			</list>
		</property>
	</bean>
	
	<bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
		<property name="delay" value="10000" />
		<property name="period" value="50000" />
		<property name="timerTask" ref="doIt" />
	</bean>

	<bean id="doIt" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">
		<property name="targetObject">
			 <!-- could just do a ref="bookingService" here but want to test seam:instance and using an EL expression
			 asynchronously. --> 
			<seam:instance name="#{bookingService}" />
		</property>
		<property name="targetMethod" value="testNonWebRequest" />
	</bean>

	<bean id="springThreadPoolTaskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor" />
</beans>
