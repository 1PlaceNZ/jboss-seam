<?xml version="1.0"?>
<!--
JBoss, Home of Professional Open Source
Copyright 2008, Red Hat Middleware LLC, and individual contributors
by the @authors tag. See the copyright.txt in the distribution for a
full listing of individual contributors.

This is free software; you can redistribute it and/or modify it
under the terms of the GNU Lesser General Public License as
published by the Free Software Foundation; either version 2.1 of
the License, or (at your option) any later version.

This software is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this software; if not, write to the Free
Software Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
02110-1301 USA, or see the FSF site: http://www.fsf.org.
--> 

<!-- core build file for executing and managing Seam functional tests -->
<project name="ftest.base.build" default="testall" basedir=".">

   <!-- Location of Seam -->
   <dirname property="seam.dir" file="${ant.file.ftest.base.build}/../../../" />

   <!--Import properties -->
   <property file="ftest.properties" />

   <property name="ftest.dir" value="${seam.dir}/src/test/ftest" />

   <!-- TODO : should the libs be in seam/lib and managed with mvn? -->
   <property name="lib.dir" value="${ftest.dir}/lib" />
   <property name="log.dir" value="${ftest.dir}/log" />

   <path id="selenium.server.classpath">
      <fileset dir="${lib.dir}">
         <include name="selenium-server-standalone.jar" />
      </fileset>
   </path>

   <target name="testall">
      <antcall target="start.selenium.server">
      </antcall>

      <!-- Execute tests for all examples-->
      <testexample name="booking" />
      <testexample name="dvdstore" />
      <testexample name="contactlist" />
      <testexample name="groovybooking" />
      <testexample name="hibernate" />
      <testexample name="icefaces" />
      <testexample name="jpa" />
      <testexample name="nestedbooking" />
      <testexample name="quartz" />
      <testexample name="seampay" />
      <testexample name="spring" />
      <testexample name="wicket" />

      <antcall target="stop.selenium.server">
      </antcall>
   </target>

   <target name="test">
      <antcall target="start.selenium.server">
      </antcall>

      <!-- Execute tests for a specific example-->
      <testexample name="${test}" />

      <antcall target="stop.selenium.server">
      </antcall>
   </target>

   <target name="cleanall">
      <cleanexample name="booking" />
      <cleanexample name="dvdstore" />
      <cleanexample name="contactlist" />
      <cleanexample name="groovybooking" />
      <cleanexample name="hibernate" />
      <cleanexample name="icefaces" />
      <cleanexample name="jpa" />
      <cleanexample name="nestedbooking" />
      <cleanexample name="quartz" />
      <cleanexample name="seampay" />
      <cleanexample name="spring" />
      <cleanexample name="wicket" />
   </target>

   <target name="undeployall">
      <undeployexample name="booking" />
      <undeployexample name="dvdstore" />
      <undeployexample name="contactlist" />
      <undeployexample name="groovybooking" />
      <undeployexample name="hibernate" />
      <undeployexample name="icefaces" />
      <undeployexample name="jpa" />
      <undeployexample name="nestedbooking" />
      <undeployexample name="quartz" />
      <undeployexample name="seampay" />
      <undeployexample name="spring" />
      <undeployexample name="wicket" />
   </target>


   <target name="start.selenium.server">
      <java classpathref="selenium.server.classpath" classname="org.openqa.selenium.server.SeleniumServer" fork="true" spawn="true">
         <arg line="-port ${selenium.server.port}" />
         <arg line="${selenium.server.cmd.args}" />
      </java>

      <waitfor maxwait="30" maxwaitunit="second">
         <and>
            <socket server="${selenium.host}" port="${selenium.server.port}" />
            <!-- this url will 403, so we say that it should start counting errors at 404 to skip -->
            <http url="http://${selenium.host}:${selenium.server.port}/selenium-server/core/index.html" errorsBeginAt="404" />
         </and>
      </waitfor>
   </target>

   <target name="stop.selenium.server">
      <get taskname="selenium-shutdown" src="http://${selenium.host}:${selenium.server.port}/selenium-server/driver/?cmd=shutDown" dest="${log.dir}/server.shutdown.dest.log" ignoreerrors="true" />
      <echo taskname="selenium-shutdown" message="DGF Errors during shutdown are expected" />
   </target>


   <!-- duplicated from ${seam.dir}/build.xml -->
   <!-- TODO can we avoid duplication -->
   <macrodef name="testexample">
      <attribute name="name" />
      <attribute name="path" default="examples/@{name}" />
      <attribute name="message" default="Running functional tests on @{name} example" />
      <sequential>
         <echo>@{message}</echo>
         <callExample path="@{path}" target="test" />
      </sequential>
   </macrodef>

   <macrodef name="cleanexample">
      <attribute name="name" />
      <attribute name="path" default="examples/@{name}" />
      <attribute name="message" default="Cleaning @{name} example" />
      <sequential>
         <echo>@{message}</echo>
         <callExample path="@{path}" target="clean" />
      </sequential>
   </macrodef>

   <macrodef name="undeployexample">
      <attribute name="name" />
      <attribute name="path" default="examples/@{name}" />
      <attribute name="message" default="Undeploying @{name} example from JBoss" />
      <sequential>
         <echo>@{message}</echo>
         <callExample path="@{path}" target="undeploy.example.jboss" />
      </sequential>
   </macrodef>

   <macrodef name="callExample">
      <attribute name="path" />
      <attribute name="target" />
      <sequential>
         <ant dir="@{path}" target="@{target}" inheritall="false" />
      </sequential>
   </macrodef>
</project>

